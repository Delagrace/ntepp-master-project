[
  {
    "id": "e61d7807.20aac8",
    "type": "tab",
    "label": "GenerateDataDashboard",
    "disabled": false,
    "info": ""
  },
  {
    "id": "633bae1e.008508",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 60,
    "wires": [
      [
        "c58c5119.827ab"
      ]
    ]
  },
  {
    "id": "c15ea1c5.969918",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 60,
    "wires": [
      [
        "5a6a66f1.d94"
      ]
    ]
  },
  {
    "id": "5a6a66f1.d94",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "1ddc46bb444070c1"
    ],
    "x": 895,
    "y": 60,
    "wires": []
  },
  {
    "id": "c58c5119.827ab",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 60,
    "wires": [
      [
        "b9d5af6d.c3728"
      ]
    ]
  },
  {
    "id": "eb97c32a.39353",
    "type": "comment",
    "z": "e61d7807.20aac8",
    "name": "1-10",
    "info": "",
    "x": 90,
    "y": 20,
    "wires": []
  },
  {
    "id": "b9d5af6d.c3728",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 60,
    "wires": [
      [
        "c15ea1c5.969918"
      ]
    ]
  },
  {
    "id": "1ddc46bb444070c1",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "5a6a66f1.d94"
    ],
    "x": 975,
    "y": 60,
    "wires": [
      [
        "e1534d60cfdd7063"
      ]
    ]
  },
  {
    "id": "e1534d60cfdd7063",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor1', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 60,
    "wires": [
      [
        "88ecf37d9caaa23e"
      ]
    ]
  },
  {
    "id": "de415d4f83d45318",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 60,
    "wires": []
  },
  {
    "id": "88ecf37d9caaa23e",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 60,
    "wires": [
      [
        "de415d4f83d45318",
        "5f7e983062ea677d"
      ]
    ]
  },
  {
    "id": "5f7e983062ea677d",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 60,
    "wires": []
  },
  {
    "id": "0f0d8248e1398b79",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 100,
    "wires": [
      [
        "abc4b2d7ed9d35c7"
      ]
    ]
  },
  {
    "id": "29b318c594225395",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 100,
    "wires": [
      [
        "68bd8d996b9fc5b0"
      ]
    ]
  },
  {
    "id": "68bd8d996b9fc5b0",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "f390c8fe265c6bec"
    ],
    "x": 895,
    "y": 100,
    "wires": []
  },
  {
    "id": "abc4b2d7ed9d35c7",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 100,
    "wires": [
      [
        "fca59cd03e2b0a44"
      ]
    ]
  },
  {
    "id": "fca59cd03e2b0a44",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 100,
    "wires": [
      [
        "29b318c594225395"
      ]
    ]
  },
  {
    "id": "f390c8fe265c6bec",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "68bd8d996b9fc5b0"
    ],
    "x": 975,
    "y": 100,
    "wires": [
      [
        "9b5591d740cfc4a6"
      ]
    ]
  },
  {
    "id": "9b5591d740cfc4a6",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor2', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 100,
    "wires": [
      [
        "0c81afd46c88c6da"
      ]
    ]
  },
  {
    "id": "b40bc93340ffc4e5",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 100,
    "wires": []
  },
  {
    "id": "0c81afd46c88c6da",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 100,
    "wires": [
      [
        "b40bc93340ffc4e5",
        "3683e43f12ee03ef"
      ]
    ]
  },
  {
    "id": "3683e43f12ee03ef",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 100,
    "wires": []
  },
  {
    "id": "c61d50c012dd1bbe",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 140,
    "wires": [
      [
        "27d02fa116c4aeac"
      ]
    ]
  },
  {
    "id": "34ef325f36a662be",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 140,
    "wires": [
      [
        "fb4665de04e899cd"
      ]
    ]
  },
  {
    "id": "fb4665de04e899cd",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "259c9bc57c7b15cf"
    ],
    "x": 895,
    "y": 140,
    "wires": []
  },
  {
    "id": "27d02fa116c4aeac",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 140,
    "wires": [
      [
        "5c343dd50d35fef9"
      ]
    ]
  },
  {
    "id": "5c343dd50d35fef9",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 140,
    "wires": [
      [
        "34ef325f36a662be"
      ]
    ]
  },
  {
    "id": "259c9bc57c7b15cf",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fb4665de04e899cd"
    ],
    "x": 975,
    "y": 140,
    "wires": [
      [
        "72b74e9987439c1c"
      ]
    ]
  },
  {
    "id": "72b74e9987439c1c",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor3', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 140,
    "wires": [
      [
        "6ced1d20ea2336c9"
      ]
    ]
  },
  {
    "id": "323703b4a4a40b05",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 140,
    "wires": []
  },
  {
    "id": "6ced1d20ea2336c9",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 140,
    "wires": [
      [
        "323703b4a4a40b05",
        "5e5a0ae50f0118f2"
      ]
    ]
  },
  {
    "id": "5e5a0ae50f0118f2",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 140,
    "wires": []
  },
  {
    "id": "25865cdcbe5b9368",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 180,
    "wires": [
      [
        "21a3343632ecd44a"
      ]
    ]
  },
  {
    "id": "7ee08cc5a3843f0a",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 180,
    "wires": [
      [
        "29967b45b97eacaf"
      ]
    ]
  },
  {
    "id": "29967b45b97eacaf",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "91ed47049dea4b8d"
    ],
    "x": 895,
    "y": 180,
    "wires": []
  },
  {
    "id": "21a3343632ecd44a",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 180,
    "wires": [
      [
        "4258b6d2cb51ddc1"
      ]
    ]
  },
  {
    "id": "4258b6d2cb51ddc1",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 180,
    "wires": [
      [
        "7ee08cc5a3843f0a"
      ]
    ]
  },
  {
    "id": "91ed47049dea4b8d",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "29967b45b97eacaf"
    ],
    "x": 975,
    "y": 180,
    "wires": [
      [
        "b2cfd6e8afd94270"
      ]
    ]
  },
  {
    "id": "b2cfd6e8afd94270",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor4', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 180,
    "wires": [
      [
        "37b262a4697e6e0c"
      ]
    ]
  },
  {
    "id": "054eadf7098b1eee",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 180,
    "wires": []
  },
  {
    "id": "37b262a4697e6e0c",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 180,
    "wires": [
      [
        "054eadf7098b1eee",
        "290dbdf462d2a233"
      ]
    ]
  },
  {
    "id": "290dbdf462d2a233",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 180,
    "wires": []
  },
  {
    "id": "22762ea2b6e78bf4",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 220,
    "wires": [
      [
        "a6eec2ef7632d7ca"
      ]
    ]
  },
  {
    "id": "99eec1f073b776d8",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 220,
    "wires": [
      [
        "f92eb65de0fe111c"
      ]
    ]
  },
  {
    "id": "f92eb65de0fe111c",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "985b8ab24f3ecfbd"
    ],
    "x": 895,
    "y": 220,
    "wires": []
  },
  {
    "id": "a6eec2ef7632d7ca",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 220,
    "wires": [
      [
        "4e608f83636c6250"
      ]
    ]
  },
  {
    "id": "4e608f83636c6250",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 220,
    "wires": [
      [
        "99eec1f073b776d8"
      ]
    ]
  },
  {
    "id": "985b8ab24f3ecfbd",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "f92eb65de0fe111c"
    ],
    "x": 975,
    "y": 220,
    "wires": [
      [
        "66537afd31762c9e"
      ]
    ]
  },
  {
    "id": "66537afd31762c9e",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor5', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 220,
    "wires": [
      [
        "7711cd17d1236f35"
      ]
    ]
  },
  {
    "id": "fb034ef16776a65a",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 220,
    "wires": []
  },
  {
    "id": "7711cd17d1236f35",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 220,
    "wires": [
      [
        "fb034ef16776a65a",
        "a24090490ca1ba9d"
      ]
    ]
  },
  {
    "id": "a24090490ca1ba9d",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 220,
    "wires": []
  },
  {
    "id": "8dc7f1a52a2fa01a",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 260,
    "wires": [
      [
        "787555b54c4f9b7a"
      ]
    ]
  },
  {
    "id": "9f595655b4eb807d",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 260,
    "wires": [
      [
        "f00a69d98045ad30"
      ]
    ]
  },
  {
    "id": "f00a69d98045ad30",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "b6125fa22832883e"
    ],
    "x": 895,
    "y": 260,
    "wires": []
  },
  {
    "id": "787555b54c4f9b7a",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 260,
    "wires": [
      [
        "f00587f17f116d9e"
      ]
    ]
  },
  {
    "id": "f00587f17f116d9e",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 260,
    "wires": [
      [
        "9f595655b4eb807d"
      ]
    ]
  },
  {
    "id": "b6125fa22832883e",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "f00a69d98045ad30"
    ],
    "x": 975,
    "y": 260,
    "wires": [
      [
        "789abb5a659d9257"
      ]
    ]
  },
  {
    "id": "789abb5a659d9257",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor6', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 260,
    "wires": [
      [
        "dcddb84cfb2378db"
      ]
    ]
  },
  {
    "id": "31275d31265b27b9",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 260,
    "wires": []
  },
  {
    "id": "dcddb84cfb2378db",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 260,
    "wires": [
      [
        "31275d31265b27b9",
        "79115f412e18fa85"
      ]
    ]
  },
  {
    "id": "79115f412e18fa85",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 260,
    "wires": []
  },
  {
    "id": "b8d628c875cd41f2",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 300,
    "wires": [
      [
        "110f19ed89a26512"
      ]
    ]
  },
  {
    "id": "8d5f53a5c88b6fb6",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 300,
    "wires": [
      [
        "0b7c4836e9c8a423"
      ]
    ]
  },
  {
    "id": "0b7c4836e9c8a423",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "49c78711b7878e15"
    ],
    "x": 895,
    "y": 300,
    "wires": []
  },
  {
    "id": "110f19ed89a26512",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 300,
    "wires": [
      [
        "a8bc8481dab740eb"
      ]
    ]
  },
  {
    "id": "a8bc8481dab740eb",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 300,
    "wires": [
      [
        "8d5f53a5c88b6fb6"
      ]
    ]
  },
  {
    "id": "49c78711b7878e15",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "0b7c4836e9c8a423"
    ],
    "x": 975,
    "y": 300,
    "wires": [
      [
        "6e97d5afad1f0d22"
      ]
    ]
  },
  {
    "id": "6e97d5afad1f0d22",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor7', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 300,
    "wires": [
      [
        "112deee36c952f7d"
      ]
    ]
  },
  {
    "id": "08df47ceff30c58d",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 300,
    "wires": []
  },
  {
    "id": "112deee36c952f7d",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 300,
    "wires": [
      [
        "08df47ceff30c58d",
        "62a3e7fb79e2c04c"
      ]
    ]
  },
  {
    "id": "62a3e7fb79e2c04c",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 300,
    "wires": []
  },
  {
    "id": "03b6e48364da56b2",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 340,
    "wires": [
      [
        "5b171447e40949a1"
      ]
    ]
  },
  {
    "id": "371aeafe508f50a6",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 340,
    "wires": [
      [
        "b8cd44c0912ca67f"
      ]
    ]
  },
  {
    "id": "b8cd44c0912ca67f",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "5c32276d65b28ad2"
    ],
    "x": 895,
    "y": 340,
    "wires": []
  },
  {
    "id": "5b171447e40949a1",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 340,
    "wires": [
      [
        "675b5e047628bda8"
      ]
    ]
  },
  {
    "id": "675b5e047628bda8",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 340,
    "wires": [
      [
        "371aeafe508f50a6"
      ]
    ]
  },
  {
    "id": "5c32276d65b28ad2",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "b8cd44c0912ca67f"
    ],
    "x": 975,
    "y": 340,
    "wires": [
      [
        "355e2e60c49ec005"
      ]
    ]
  },
  {
    "id": "355e2e60c49ec005",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor8', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 340,
    "wires": [
      [
        "9ee55fcbbcdb4af5"
      ]
    ]
  },
  {
    "id": "791ec2e52e177712",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 340,
    "wires": []
  },
  {
    "id": "9ee55fcbbcdb4af5",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 340,
    "wires": [
      [
        "791ec2e52e177712",
        "d6cce66fa084368c"
      ]
    ]
  },
  {
    "id": "d6cce66fa084368c",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 340,
    "wires": []
  },
  {
    "id": "22ed25b2d6a0c00b",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 380,
    "wires": [
      [
        "ff9c38020bc79ab0"
      ]
    ]
  },
  {
    "id": "687104eb9fedf19d",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 380,
    "wires": [
      [
        "d4e914dc8e5918ae"
      ]
    ]
  },
  {
    "id": "d4e914dc8e5918ae",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "18485208ec983bb2"
    ],
    "x": 895,
    "y": 380,
    "wires": []
  },
  {
    "id": "ff9c38020bc79ab0",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 380,
    "wires": [
      [
        "85c0ad5958f58818"
      ]
    ]
  },
  {
    "id": "85c0ad5958f58818",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 380,
    "wires": [
      [
        "687104eb9fedf19d"
      ]
    ]
  },
  {
    "id": "18485208ec983bb2",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "d4e914dc8e5918ae"
    ],
    "x": 975,
    "y": 380,
    "wires": [
      [
        "e0dc53d4aa7b64e4"
      ]
    ]
  },
  {
    "id": "e0dc53d4aa7b64e4",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor9', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 380,
    "wires": [
      [
        "1f35ca6f7ce688a6"
      ]
    ]
  },
  {
    "id": "8381fee8d5a04f1c",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 380,
    "wires": []
  },
  {
    "id": "1f35ca6f7ce688a6",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 380,
    "wires": [
      [
        "8381fee8d5a04f1c",
        "5f0815420a774712"
      ]
    ]
  },
  {
    "id": "5f0815420a774712",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 380,
    "wires": []
  },
  {
    "id": "503ede0cf62b7e86",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 420,
    "wires": [
      [
        "56a59b971b216098"
      ]
    ]
  },
  {
    "id": "36a51ee940359c92",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 420,
    "wires": [
      [
        "f46b2dbea4b0213d"
      ]
    ]
  },
  {
    "id": "f46b2dbea4b0213d",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "92384666c6f34ff2"
    ],
    "x": 895,
    "y": 420,
    "wires": []
  },
  {
    "id": "56a59b971b216098",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 420,
    "wires": [
      [
        "379c9d2b49198e6b"
      ]
    ]
  },
  {
    "id": "379c9d2b49198e6b",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 420,
    "wires": [
      [
        "36a51ee940359c92"
      ]
    ]
  },
  {
    "id": "92384666c6f34ff2",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "f46b2dbea4b0213d"
    ],
    "x": 975,
    "y": 420,
    "wires": [
      [
        "6b1c0d78435dc4ee"
      ]
    ]
  },
  {
    "id": "6b1c0d78435dc4ee",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor10', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 420,
    "wires": [
      [
        "0d19026e00cd60b1"
      ]
    ]
  },
  {
    "id": "a179840fc4cd2f58",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 420,
    "wires": []
  },
  {
    "id": "0d19026e00cd60b1",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 420,
    "wires": [
      [
        "a179840fc4cd2f58",
        "8d7783f9e2f8751f"
      ]
    ]
  },
  {
    "id": "8d7783f9e2f8751f",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 420,
    "wires": []
  },
  {
    "id": "da00530f8587293d",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 500,
    "wires": [
      [
        "22bafd4840b4e45a"
      ]
    ]
  },
  {
    "id": "66495d537a613c35",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 500,
    "wires": [
      [
        "4cd9aa58def8a133"
      ]
    ]
  },
  {
    "id": "4cd9aa58def8a133",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "bf580185448fb060"
    ],
    "x": 895,
    "y": 500,
    "wires": []
  },
  {
    "id": "22bafd4840b4e45a",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 500,
    "wires": [
      [
        "e29d8db3cb803e4a"
      ]
    ]
  },
  {
    "id": "eca276827693ec3c",
    "type": "comment",
    "z": "e61d7807.20aac8",
    "name": "11-20",
    "info": "",
    "x": 90,
    "y": 460,
    "wires": []
  },
  {
    "id": "e29d8db3cb803e4a",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 500,
    "wires": [
      [
        "66495d537a613c35"
      ]
    ]
  },
  {
    "id": "bf580185448fb060",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "4cd9aa58def8a133"
    ],
    "x": 975,
    "y": 500,
    "wires": [
      [
        "6d203bf209dbabc5"
      ]
    ]
  },
  {
    "id": "6d203bf209dbabc5",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor11', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 500,
    "wires": [
      [
        "5ac23272fdbfc9f0"
      ]
    ]
  },
  {
    "id": "d5685e253ad86a05",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 500,
    "wires": []
  },
  {
    "id": "5ac23272fdbfc9f0",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 500,
    "wires": [
      [
        "d5685e253ad86a05",
        "dc76aa6cafb56c24"
      ]
    ]
  },
  {
    "id": "dc76aa6cafb56c24",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 500,
    "wires": []
  },
  {
    "id": "67d7ed902260f5e7",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 540,
    "wires": [
      [
        "dcb88898e08c522a"
      ]
    ]
  },
  {
    "id": "26c256eb0239ca82",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 540,
    "wires": [
      [
        "48782306d19112e8"
      ]
    ]
  },
  {
    "id": "48782306d19112e8",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "825d66304cd8a5c8"
    ],
    "x": 895,
    "y": 540,
    "wires": []
  },
  {
    "id": "dcb88898e08c522a",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 540,
    "wires": [
      [
        "053949394bca1a03"
      ]
    ]
  },
  {
    "id": "053949394bca1a03",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 540,
    "wires": [
      [
        "26c256eb0239ca82"
      ]
    ]
  },
  {
    "id": "825d66304cd8a5c8",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "48782306d19112e8"
    ],
    "x": 975,
    "y": 540,
    "wires": [
      [
        "a2756ce8e7e3cef9"
      ]
    ]
  },
  {
    "id": "a2756ce8e7e3cef9",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor12', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 540,
    "wires": [
      [
        "00652024d755b0e5"
      ]
    ]
  },
  {
    "id": "a67a15f716240ce7",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 540,
    "wires": []
  },
  {
    "id": "00652024d755b0e5",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 540,
    "wires": [
      [
        "a67a15f716240ce7",
        "6953cc01e5a31835"
      ]
    ]
  },
  {
    "id": "6953cc01e5a31835",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 540,
    "wires": []
  },
  {
    "id": "042c74997c68e2ef",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 580,
    "wires": [
      [
        "90d1f5df126d36ea"
      ]
    ]
  },
  {
    "id": "e06c644eb41be0e9",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 580,
    "wires": [
      [
        "4e7b246fd97945b4"
      ]
    ]
  },
  {
    "id": "4e7b246fd97945b4",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "77c4705debcbdd7d"
    ],
    "x": 895,
    "y": 580,
    "wires": []
  },
  {
    "id": "90d1f5df126d36ea",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 580,
    "wires": [
      [
        "bdf342686472120c"
      ]
    ]
  },
  {
    "id": "bdf342686472120c",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 580,
    "wires": [
      [
        "e06c644eb41be0e9"
      ]
    ]
  },
  {
    "id": "77c4705debcbdd7d",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "4e7b246fd97945b4"
    ],
    "x": 975,
    "y": 580,
    "wires": [
      [
        "887b74e32e97660e"
      ]
    ]
  },
  {
    "id": "887b74e32e97660e",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor13', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 580,
    "wires": [
      [
        "fd53388429d61268"
      ]
    ]
  },
  {
    "id": "0c9e2da97fe0991d",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 580,
    "wires": []
  },
  {
    "id": "fd53388429d61268",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 580,
    "wires": [
      [
        "0c9e2da97fe0991d",
        "9754043bd72ca822"
      ]
    ]
  },
  {
    "id": "9754043bd72ca822",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 580,
    "wires": []
  },
  {
    "id": "ec815af84c6af02f",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 620,
    "wires": [
      [
        "07c99187f451912d"
      ]
    ]
  },
  {
    "id": "5d96c4b03bfe7762",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 620,
    "wires": [
      [
        "5206f9ce47bef81a"
      ]
    ]
  },
  {
    "id": "5206f9ce47bef81a",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "84facfddc3d9081f"
    ],
    "x": 895,
    "y": 620,
    "wires": []
  },
  {
    "id": "07c99187f451912d",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 620,
    "wires": [
      [
        "7899cc27c31fc60b"
      ]
    ]
  },
  {
    "id": "7899cc27c31fc60b",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 620,
    "wires": [
      [
        "5d96c4b03bfe7762"
      ]
    ]
  },
  {
    "id": "84facfddc3d9081f",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "5206f9ce47bef81a"
    ],
    "x": 975,
    "y": 620,
    "wires": [
      [
        "3d1ebda1b6fa05e3"
      ]
    ]
  },
  {
    "id": "3d1ebda1b6fa05e3",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor14', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 620,
    "wires": [
      [
        "dd1e5e68e2065a32"
      ]
    ]
  },
  {
    "id": "132248f1245ab9c0",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 620,
    "wires": []
  },
  {
    "id": "dd1e5e68e2065a32",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 620,
    "wires": [
      [
        "132248f1245ab9c0",
        "979a7b148c88ab6a"
      ]
    ]
  },
  {
    "id": "979a7b148c88ab6a",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 620,
    "wires": []
  },
  {
    "id": "a2d07d58157a4502",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 660,
    "wires": [
      [
        "66a3a24a11a4d0a5"
      ]
    ]
  },
  {
    "id": "4b6106eb1778eafc",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 660,
    "wires": [
      [
        "92558b71f4b8f56c"
      ]
    ]
  },
  {
    "id": "92558b71f4b8f56c",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "8f8a0bad2e1d67e1"
    ],
    "x": 895,
    "y": 660,
    "wires": []
  },
  {
    "id": "66a3a24a11a4d0a5",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 660,
    "wires": [
      [
        "db82154f487cb14e"
      ]
    ]
  },
  {
    "id": "db82154f487cb14e",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 660,
    "wires": [
      [
        "4b6106eb1778eafc"
      ]
    ]
  },
  {
    "id": "8f8a0bad2e1d67e1",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "92558b71f4b8f56c"
    ],
    "x": 975,
    "y": 660,
    "wires": [
      [
        "1a73462175400b09"
      ]
    ]
  },
  {
    "id": "1a73462175400b09",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor15', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 660,
    "wires": [
      [
        "0c4ee9a7b5db2136"
      ]
    ]
  },
  {
    "id": "e75c805149358f07",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 660,
    "wires": []
  },
  {
    "id": "0c4ee9a7b5db2136",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 660,
    "wires": [
      [
        "e75c805149358f07",
        "7886c84e523a65fc"
      ]
    ]
  },
  {
    "id": "7886c84e523a65fc",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 660,
    "wires": []
  },
  {
    "id": "b4aa1bfa38fb3bcc",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 700,
    "wires": [
      [
        "5467762a0f533140"
      ]
    ]
  },
  {
    "id": "0bef2a6ac8fd5424",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 700,
    "wires": [
      [
        "8539eb56396c333c"
      ]
    ]
  },
  {
    "id": "8539eb56396c333c",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "1c338b0e4ba7fa01"
    ],
    "x": 895,
    "y": 700,
    "wires": []
  },
  {
    "id": "5467762a0f533140",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 700,
    "wires": [
      [
        "c49d171497f1b95d"
      ]
    ]
  },
  {
    "id": "c49d171497f1b95d",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 700,
    "wires": [
      [
        "0bef2a6ac8fd5424"
      ]
    ]
  },
  {
    "id": "1c338b0e4ba7fa01",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "8539eb56396c333c"
    ],
    "x": 975,
    "y": 700,
    "wires": [
      [
        "0589edbb0c85728c"
      ]
    ]
  },
  {
    "id": "0589edbb0c85728c",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor16', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 700,
    "wires": [
      [
        "f7288dc42ebc215e"
      ]
    ]
  },
  {
    "id": "519fad98c05e1e59",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 700,
    "wires": []
  },
  {
    "id": "f7288dc42ebc215e",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 700,
    "wires": [
      [
        "519fad98c05e1e59",
        "a16b0398d355e570"
      ]
    ]
  },
  {
    "id": "a16b0398d355e570",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 700,
    "wires": []
  },
  {
    "id": "3e2ef23b624b1065",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 740,
    "wires": [
      [
        "f28b53c17cc4c58a"
      ]
    ]
  },
  {
    "id": "c6b00ac08d743966",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 740,
    "wires": [
      [
        "640ff28c3d7be77c"
      ]
    ]
  },
  {
    "id": "640ff28c3d7be77c",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "e68dcae81c11ce08"
    ],
    "x": 895,
    "y": 740,
    "wires": []
  },
  {
    "id": "f28b53c17cc4c58a",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 740,
    "wires": [
      [
        "567cda9ed12e1172"
      ]
    ]
  },
  {
    "id": "567cda9ed12e1172",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 740,
    "wires": [
      [
        "c6b00ac08d743966"
      ]
    ]
  },
  {
    "id": "e68dcae81c11ce08",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "640ff28c3d7be77c"
    ],
    "x": 975,
    "y": 740,
    "wires": [
      [
        "d9a6437ffba14987"
      ]
    ]
  },
  {
    "id": "d9a6437ffba14987",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor17', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 740,
    "wires": [
      [
        "2f7b735109ceeb09"
      ]
    ]
  },
  {
    "id": "5dca65cd75103bd6",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 740,
    "wires": []
  },
  {
    "id": "2f7b735109ceeb09",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 740,
    "wires": [
      [
        "5dca65cd75103bd6",
        "82279f386f5bebd9"
      ]
    ]
  },
  {
    "id": "82279f386f5bebd9",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 740,
    "wires": []
  },
  {
    "id": "4cd4c87f8f08256d",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 780,
    "wires": [
      [
        "2c7d2c897a362167"
      ]
    ]
  },
  {
    "id": "fbc9525051eb0143",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 780,
    "wires": [
      [
        "c0ea3ade2a181d78"
      ]
    ]
  },
  {
    "id": "c0ea3ade2a181d78",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "30436cd2c6bf1690"
    ],
    "x": 895,
    "y": 780,
    "wires": []
  },
  {
    "id": "2c7d2c897a362167",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 780,
    "wires": [
      [
        "bad3cd986750da9f"
      ]
    ]
  },
  {
    "id": "bad3cd986750da9f",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 780,
    "wires": [
      [
        "fbc9525051eb0143"
      ]
    ]
  },
  {
    "id": "30436cd2c6bf1690",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "c0ea3ade2a181d78"
    ],
    "x": 975,
    "y": 780,
    "wires": [
      [
        "7fc1b2f71711b421"
      ]
    ]
  },
  {
    "id": "7fc1b2f71711b421",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor18', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 780,
    "wires": [
      [
        "d6ef71735eb1b5df"
      ]
    ]
  },
  {
    "id": "6e6fe639e28e2ac3",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 780,
    "wires": []
  },
  {
    "id": "d6ef71735eb1b5df",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 780,
    "wires": [
      [
        "6e6fe639e28e2ac3",
        "35eed9fd745d92e3"
      ]
    ]
  },
  {
    "id": "35eed9fd745d92e3",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 780,
    "wires": []
  },
  {
    "id": "e580642201450a54",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 820,
    "wires": [
      [
        "4e03b04214cbe576"
      ]
    ]
  },
  {
    "id": "b81e9fa1c7c94b96",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 820,
    "wires": [
      [
        "30ecd954e2297ab4"
      ]
    ]
  },
  {
    "id": "30ecd954e2297ab4",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "50ecd88b7c411cda"
    ],
    "x": 895,
    "y": 820,
    "wires": []
  },
  {
    "id": "4e03b04214cbe576",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 820,
    "wires": [
      [
        "260853941a522236"
      ]
    ]
  },
  {
    "id": "260853941a522236",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 820,
    "wires": [
      [
        "b81e9fa1c7c94b96"
      ]
    ]
  },
  {
    "id": "50ecd88b7c411cda",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "30ecd954e2297ab4"
    ],
    "x": 975,
    "y": 820,
    "wires": [
      [
        "1a4e1ae2fc054223"
      ]
    ]
  },
  {
    "id": "1a4e1ae2fc054223",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor19', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 820,
    "wires": [
      [
        "b5ed471f86e3e24b"
      ]
    ]
  },
  {
    "id": "01ee1e526adfbb76",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 820,
    "wires": []
  },
  {
    "id": "b5ed471f86e3e24b",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 820,
    "wires": [
      [
        "01ee1e526adfbb76",
        "9eceaad0cb9efc10"
      ]
    ]
  },
  {
    "id": "9eceaad0cb9efc10",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 820,
    "wires": []
  },
  {
    "id": "b59fc0866fd465a5",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 860,
    "wires": [
      [
        "bcababbc7e0e408d"
      ]
    ]
  },
  {
    "id": "8f3bc2a761fc39cf",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 860,
    "wires": [
      [
        "971765ce9f093410"
      ]
    ]
  },
  {
    "id": "971765ce9f093410",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "9959f9aab4678668"
    ],
    "x": 895,
    "y": 860,
    "wires": []
  },
  {
    "id": "bcababbc7e0e408d",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 860,
    "wires": [
      [
        "812a5f07fb4e7abb"
      ]
    ]
  },
  {
    "id": "812a5f07fb4e7abb",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 860,
    "wires": [
      [
        "8f3bc2a761fc39cf"
      ]
    ]
  },
  {
    "id": "9959f9aab4678668",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "971765ce9f093410"
    ],
    "x": 975,
    "y": 860,
    "wires": [
      [
        "94f06c323d928b7a"
      ]
    ]
  },
  {
    "id": "94f06c323d928b7a",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor20', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 860,
    "wires": [
      [
        "2285c28423487f54"
      ]
    ]
  },
  {
    "id": "b1ba6de1f840efa4",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 860,
    "wires": []
  },
  {
    "id": "2285c28423487f54",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 860,
    "wires": [
      [
        "b1ba6de1f840efa4",
        "5a83e5798f23c625"
      ]
    ]
  },
  {
    "id": "5a83e5798f23c625",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 860,
    "wires": []
  },
  {
    "id": "32fadf9535172b93",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 940,
    "wires": [
      [
        "b4c0a22582a9229a"
      ]
    ]
  },
  {
    "id": "b0e7a6b9366e4973",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 940,
    "wires": [
      [
        "ae476a272274a109"
      ]
    ]
  },
  {
    "id": "ae476a272274a109",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "2ccde3e602ca3c9f"
    ],
    "x": 895,
    "y": 940,
    "wires": []
  },
  {
    "id": "b4c0a22582a9229a",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 940,
    "wires": [
      [
        "5723ec17c8d684c0"
      ]
    ]
  },
  {
    "id": "ca3f5c5530e16357",
    "type": "comment",
    "z": "e61d7807.20aac8",
    "name": "21-30",
    "info": "",
    "x": 90,
    "y": 900,
    "wires": []
  },
  {
    "id": "5723ec17c8d684c0",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 940,
    "wires": [
      [
        "b0e7a6b9366e4973"
      ]
    ]
  },
  {
    "id": "2ccde3e602ca3c9f",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "ae476a272274a109"
    ],
    "x": 975,
    "y": 940,
    "wires": [
      [
        "5fb200b8276353b3"
      ]
    ]
  },
  {
    "id": "5fb200b8276353b3",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor21', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 940,
    "wires": [
      [
        "66708b4e6d5b5ee1"
      ]
    ]
  },
  {
    "id": "8c41f8fe7e2adf9f",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 940,
    "wires": []
  },
  {
    "id": "66708b4e6d5b5ee1",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 940,
    "wires": [
      [
        "8c41f8fe7e2adf9f",
        "9030e5105049bf2b"
      ]
    ]
  },
  {
    "id": "9030e5105049bf2b",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 940,
    "wires": []
  },
  {
    "id": "905d164428ca2bba",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 980,
    "wires": [
      [
        "c09449dac76dce62"
      ]
    ]
  },
  {
    "id": "f12cab5dc8b47d0c",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 980,
    "wires": [
      [
        "15020c31558f996c"
      ]
    ]
  },
  {
    "id": "15020c31558f996c",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "17553f64dc4c31e8"
    ],
    "x": 895,
    "y": 980,
    "wires": []
  },
  {
    "id": "c09449dac76dce62",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 980,
    "wires": [
      [
        "9646a57414825c7b"
      ]
    ]
  },
  {
    "id": "9646a57414825c7b",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 980,
    "wires": [
      [
        "f12cab5dc8b47d0c"
      ]
    ]
  },
  {
    "id": "17553f64dc4c31e8",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "15020c31558f996c"
    ],
    "x": 975,
    "y": 980,
    "wires": [
      [
        "034e1bf6d736cd99"
      ]
    ]
  },
  {
    "id": "034e1bf6d736cd99",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor22', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 980,
    "wires": [
      [
        "4e9af584f818a016"
      ]
    ]
  },
  {
    "id": "7fc17c3042bb818e",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 980,
    "wires": []
  },
  {
    "id": "4e9af584f818a016",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 980,
    "wires": [
      [
        "7fc17c3042bb818e",
        "5506c90c88aa27ad"
      ]
    ]
  },
  {
    "id": "5506c90c88aa27ad",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 980,
    "wires": []
  },
  {
    "id": "5f7ceec715facbda",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 1020,
    "wires": [
      [
        "cc035dacc3fe97d2"
      ]
    ]
  },
  {
    "id": "25c9cabe2afa6542",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1020,
    "wires": [
      [
        "4df970469ea5db96"
      ]
    ]
  },
  {
    "id": "4df970469ea5db96",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "3978185690ddced2"
    ],
    "x": 895,
    "y": 1020,
    "wires": []
  },
  {
    "id": "cc035dacc3fe97d2",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 1020,
    "wires": [
      [
        "9e10d28e242591cb"
      ]
    ]
  },
  {
    "id": "9e10d28e242591cb",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 1020,
    "wires": [
      [
        "25c9cabe2afa6542"
      ]
    ]
  },
  {
    "id": "3978185690ddced2",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "4df970469ea5db96"
    ],
    "x": 975,
    "y": 1020,
    "wires": [
      [
        "5ad0cb3c20d0127b"
      ]
    ]
  },
  {
    "id": "5ad0cb3c20d0127b",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor23', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 1020,
    "wires": [
      [
        "d93c69ed58a5d0a8"
      ]
    ]
  },
  {
    "id": "0b58b6fafa69972b",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 1020,
    "wires": []
  },
  {
    "id": "d93c69ed58a5d0a8",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 1020,
    "wires": [
      [
        "0b58b6fafa69972b",
        "ccf353510a384e96"
      ]
    ]
  },
  {
    "id": "ccf353510a384e96",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 1020,
    "wires": []
  },
  {
    "id": "582ea248f1fb7a46",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 1060,
    "wires": [
      [
        "133eb227a368d7a0"
      ]
    ]
  },
  {
    "id": "dba21d709eaa1edb",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1060,
    "wires": [
      [
        "c65b9df6dfa6eb7a"
      ]
    ]
  },
  {
    "id": "c65b9df6dfa6eb7a",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "b7161816f4ed88ba"
    ],
    "x": 895,
    "y": 1060,
    "wires": []
  },
  {
    "id": "133eb227a368d7a0",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 1060,
    "wires": [
      [
        "a5b8e657d377bad3"
      ]
    ]
  },
  {
    "id": "a5b8e657d377bad3",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 1060,
    "wires": [
      [
        "dba21d709eaa1edb"
      ]
    ]
  },
  {
    "id": "b7161816f4ed88ba",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "c65b9df6dfa6eb7a"
    ],
    "x": 975,
    "y": 1060,
    "wires": [
      [
        "22ab81a6816ea907"
      ]
    ]
  },
  {
    "id": "22ab81a6816ea907",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor24', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 1060,
    "wires": [
      [
        "8bc593fec756dc2f"
      ]
    ]
  },
  {
    "id": "772e4585f67b9aab",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 1060,
    "wires": []
  },
  {
    "id": "8bc593fec756dc2f",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 1060,
    "wires": [
      [
        "772e4585f67b9aab",
        "55bdb2799711875c"
      ]
    ]
  },
  {
    "id": "55bdb2799711875c",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 1060,
    "wires": []
  },
  {
    "id": "02f024696fcda605",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 1100,
    "wires": [
      [
        "8f7a0467c68b1ab0"
      ]
    ]
  },
  {
    "id": "038177cf64890e26",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1100,
    "wires": [
      [
        "f32d33d487eb799c"
      ]
    ]
  },
  {
    "id": "f32d33d487eb799c",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "e38f53b3996a40d6"
    ],
    "x": 895,
    "y": 1100,
    "wires": []
  },
  {
    "id": "8f7a0467c68b1ab0",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 1100,
    "wires": [
      [
        "f5ede1e3dd24ec58"
      ]
    ]
  },
  {
    "id": "f5ede1e3dd24ec58",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 1100,
    "wires": [
      [
        "038177cf64890e26"
      ]
    ]
  },
  {
    "id": "e38f53b3996a40d6",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "f32d33d487eb799c"
    ],
    "x": 975,
    "y": 1100,
    "wires": [
      [
        "e082c34a0b736267"
      ]
    ]
  },
  {
    "id": "e082c34a0b736267",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor25', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 1100,
    "wires": [
      [
        "cce4883778e9205e"
      ]
    ]
  },
  {
    "id": "d1d541c572fb16c9",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 1100,
    "wires": []
  },
  {
    "id": "cce4883778e9205e",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 1100,
    "wires": [
      [
        "d1d541c572fb16c9",
        "94d916eea1fc0a75"
      ]
    ]
  },
  {
    "id": "94d916eea1fc0a75",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 1100,
    "wires": []
  },
  {
    "id": "f72773fdbfd5c406",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 1140,
    "wires": [
      [
        "840fa6fcdad6a769"
      ]
    ]
  },
  {
    "id": "3a8b8bc83d1cef37",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1140,
    "wires": [
      [
        "69addf6c88f9758d"
      ]
    ]
  },
  {
    "id": "69addf6c88f9758d",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "304a4ac9d01b0a68"
    ],
    "x": 895,
    "y": 1140,
    "wires": []
  },
  {
    "id": "840fa6fcdad6a769",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 1140,
    "wires": [
      [
        "d527c68a6729d920"
      ]
    ]
  },
  {
    "id": "d527c68a6729d920",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 1140,
    "wires": [
      [
        "3a8b8bc83d1cef37"
      ]
    ]
  },
  {
    "id": "304a4ac9d01b0a68",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "69addf6c88f9758d"
    ],
    "x": 975,
    "y": 1140,
    "wires": [
      [
        "62a1cfbf8ea98a50"
      ]
    ]
  },
  {
    "id": "62a1cfbf8ea98a50",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor26', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 1140,
    "wires": [
      [
        "3ebac9878a58502e"
      ]
    ]
  },
  {
    "id": "2229206498be0196",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 1140,
    "wires": []
  },
  {
    "id": "3ebac9878a58502e",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 1140,
    "wires": [
      [
        "2229206498be0196",
        "f61fdd95c1eeb9a6"
      ]
    ]
  },
  {
    "id": "f61fdd95c1eeb9a6",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 1140,
    "wires": []
  },
  {
    "id": "97f10f65ecb6c68a",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 1180,
    "wires": [
      [
        "8eae17c748908cb4"
      ]
    ]
  },
  {
    "id": "8cf3bab68c51fff9",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1180,
    "wires": [
      [
        "2dea4ea134987013"
      ]
    ]
  },
  {
    "id": "2dea4ea134987013",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "8dd58df3634266a7"
    ],
    "x": 895,
    "y": 1180,
    "wires": []
  },
  {
    "id": "8eae17c748908cb4",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 1180,
    "wires": [
      [
        "542ad8ec24264595"
      ]
    ]
  },
  {
    "id": "542ad8ec24264595",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 1180,
    "wires": [
      [
        "8cf3bab68c51fff9"
      ]
    ]
  },
  {
    "id": "8dd58df3634266a7",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "2dea4ea134987013"
    ],
    "x": 975,
    "y": 1180,
    "wires": [
      [
        "af444bbc9f66a005"
      ]
    ]
  },
  {
    "id": "af444bbc9f66a005",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor27', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 1180,
    "wires": [
      [
        "44b28683442280b6"
      ]
    ]
  },
  {
    "id": "cadda40febaff848",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 1180,
    "wires": []
  },
  {
    "id": "44b28683442280b6",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 1180,
    "wires": [
      [
        "cadda40febaff848",
        "656a5884d55d8e54"
      ]
    ]
  },
  {
    "id": "656a5884d55d8e54",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 1180,
    "wires": []
  },
  {
    "id": "133aea544ad62bbe",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 1220,
    "wires": [
      [
        "378fe51466c58b01"
      ]
    ]
  },
  {
    "id": "4e06f2f1858c10fe",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1220,
    "wires": [
      [
        "37720ec39481286d"
      ]
    ]
  },
  {
    "id": "37720ec39481286d",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "576f6940953a36c6"
    ],
    "x": 895,
    "y": 1220,
    "wires": []
  },
  {
    "id": "378fe51466c58b01",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 1220,
    "wires": [
      [
        "01e3e54b8f91278b"
      ]
    ]
  },
  {
    "id": "01e3e54b8f91278b",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 1220,
    "wires": [
      [
        "4e06f2f1858c10fe"
      ]
    ]
  },
  {
    "id": "576f6940953a36c6",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "37720ec39481286d"
    ],
    "x": 975,
    "y": 1220,
    "wires": [
      [
        "5e36690396cbd23f"
      ]
    ]
  },
  {
    "id": "5e36690396cbd23f",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor28', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 1220,
    "wires": [
      [
        "ff14a8485a712a4c"
      ]
    ]
  },
  {
    "id": "5686e0c46677e2f0",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 1220,
    "wires": []
  },
  {
    "id": "ff14a8485a712a4c",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 1220,
    "wires": [
      [
        "5686e0c46677e2f0",
        "0c9973a3f85dd7a4"
      ]
    ]
  },
  {
    "id": "0c9973a3f85dd7a4",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 1220,
    "wires": []
  },
  {
    "id": "390e878c2eb9d0ef",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 1260,
    "wires": [
      [
        "d7b6b137360e4d5b"
      ]
    ]
  },
  {
    "id": "7ee30bd93adcb1d6",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1260,
    "wires": [
      [
        "405c2e567e0bf4df"
      ]
    ]
  },
  {
    "id": "405c2e567e0bf4df",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "86f735da44103399"
    ],
    "x": 895,
    "y": 1260,
    "wires": []
  },
  {
    "id": "d7b6b137360e4d5b",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 1260,
    "wires": [
      [
        "1efe81a7c9ab2e98"
      ]
    ]
  },
  {
    "id": "1efe81a7c9ab2e98",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 1260,
    "wires": [
      [
        "7ee30bd93adcb1d6"
      ]
    ]
  },
  {
    "id": "86f735da44103399",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "405c2e567e0bf4df"
    ],
    "x": 975,
    "y": 1260,
    "wires": [
      [
        "c4f483809e2b1dff"
      ]
    ]
  },
  {
    "id": "c4f483809e2b1dff",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor29', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 1260,
    "wires": [
      [
        "9ab8d9b9afc1cca3"
      ]
    ]
  },
  {
    "id": "8ee7d9a50b66f94e",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 1260,
    "wires": []
  },
  {
    "id": "9ab8d9b9afc1cca3",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 1260,
    "wires": [
      [
        "8ee7d9a50b66f94e",
        "3d46a75cb04f61b9"
      ]
    ]
  },
  {
    "id": "3d46a75cb04f61b9",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 1260,
    "wires": []
  },
  {
    "id": "a24dfd22a41d09e6",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 1300,
    "wires": [
      [
        "b450b71a7bdf8321"
      ]
    ]
  },
  {
    "id": "c5e163c6da135c38",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1300,
    "wires": [
      [
        "3fae9ff04f6c6158"
      ]
    ]
  },
  {
    "id": "3fae9ff04f6c6158",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "fa3e2f99261aef37"
    ],
    "x": 895,
    "y": 1300,
    "wires": []
  },
  {
    "id": "b450b71a7bdf8321",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 1300,
    "wires": [
      [
        "9ae325d81e002d8f"
      ]
    ]
  },
  {
    "id": "9ae325d81e002d8f",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 1300,
    "wires": [
      [
        "c5e163c6da135c38"
      ]
    ]
  },
  {
    "id": "fa3e2f99261aef37",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "3fae9ff04f6c6158"
    ],
    "x": 975,
    "y": 1300,
    "wires": [
      [
        "de202402c1f33d25"
      ]
    ]
  },
  {
    "id": "de202402c1f33d25",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor30', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 1300,
    "wires": [
      [
        "88ab1455e9be4142"
      ]
    ]
  },
  {
    "id": "df75a451f7722ac8",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 1300,
    "wires": []
  },
  {
    "id": "88ab1455e9be4142",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 1300,
    "wires": [
      [
        "df75a451f7722ac8",
        "b70ecc3fcd6f9181"
      ]
    ]
  },
  {
    "id": "b70ecc3fcd6f9181",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 1300,
    "wires": []
  },
  {
    "id": "764d6b1296ed183d",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 1380,
    "wires": [
      [
        "0a3aaf3e9db79ef7"
      ]
    ]
  },
  {
    "id": "02a23d0052982067",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1380,
    "wires": [
      [
        "426895934a2335db"
      ]
    ]
  },
  {
    "id": "426895934a2335db",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "88ce182cfe8ada75"
    ],
    "x": 895,
    "y": 1380,
    "wires": []
  },
  {
    "id": "0a3aaf3e9db79ef7",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 1380,
    "wires": [
      [
        "e7f9471f2487a595"
      ]
    ]
  },
  {
    "id": "114933c9925d74d6",
    "type": "comment",
    "z": "e61d7807.20aac8",
    "name": "31-40",
    "info": "",
    "x": 90,
    "y": 1340,
    "wires": []
  },
  {
    "id": "e7f9471f2487a595",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 1380,
    "wires": [
      [
        "02a23d0052982067"
      ]
    ]
  },
  {
    "id": "88ce182cfe8ada75",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "426895934a2335db"
    ],
    "x": 975,
    "y": 1380,
    "wires": [
      [
        "658839a08f072dff"
      ]
    ]
  },
  {
    "id": "658839a08f072dff",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor31', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 1380,
    "wires": [
      [
        "f817cebc3e5cc9e1"
      ]
    ]
  },
  {
    "id": "90dfab7cdaec6927",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 1380,
    "wires": []
  },
  {
    "id": "f817cebc3e5cc9e1",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 1380,
    "wires": [
      [
        "90dfab7cdaec6927",
        "b3fbf80726eef5dd"
      ]
    ]
  },
  {
    "id": "b3fbf80726eef5dd",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 1380,
    "wires": []
  },
  {
    "id": "3c24262670dda7ce",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 1420,
    "wires": [
      [
        "958a9c592a58efc7"
      ]
    ]
  },
  {
    "id": "a5d1db189305ced7",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1420,
    "wires": [
      [
        "238e91c5f3de738c"
      ]
    ]
  },
  {
    "id": "238e91c5f3de738c",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "e152181373e39621"
    ],
    "x": 895,
    "y": 1420,
    "wires": []
  },
  {
    "id": "958a9c592a58efc7",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 1420,
    "wires": [
      [
        "2b541c6b9367065b"
      ]
    ]
  },
  {
    "id": "2b541c6b9367065b",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 1420,
    "wires": [
      [
        "a5d1db189305ced7"
      ]
    ]
  },
  {
    "id": "e152181373e39621",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "238e91c5f3de738c"
    ],
    "x": 975,
    "y": 1420,
    "wires": [
      [
        "94b4844d42cb493d"
      ]
    ]
  },
  {
    "id": "94b4844d42cb493d",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor32', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 1420,
    "wires": [
      [
        "0cbcbea4aec8cd8c"
      ]
    ]
  },
  {
    "id": "1f1d2f2c880ab189",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 1420,
    "wires": []
  },
  {
    "id": "0cbcbea4aec8cd8c",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 1420,
    "wires": [
      [
        "1f1d2f2c880ab189",
        "5a09aea1d9ec1c2b"
      ]
    ]
  },
  {
    "id": "5a09aea1d9ec1c2b",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 1420,
    "wires": []
  },
  {
    "id": "15533242c5b0b0c1",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 1460,
    "wires": [
      [
        "0f42bfc66ee5e07e"
      ]
    ]
  },
  {
    "id": "85099e51dc5d6273",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1460,
    "wires": [
      [
        "669cd6bd7365c991"
      ]
    ]
  },
  {
    "id": "669cd6bd7365c991",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "387397a574f11795"
    ],
    "x": 895,
    "y": 1460,
    "wires": []
  },
  {
    "id": "0f42bfc66ee5e07e",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 1460,
    "wires": [
      [
        "f302f2a270afc8bd"
      ]
    ]
  },
  {
    "id": "f302f2a270afc8bd",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 1460,
    "wires": [
      [
        "85099e51dc5d6273"
      ]
    ]
  },
  {
    "id": "387397a574f11795",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "669cd6bd7365c991"
    ],
    "x": 975,
    "y": 1460,
    "wires": [
      [
        "d550fce10239da66"
      ]
    ]
  },
  {
    "id": "d550fce10239da66",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor33', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 1460,
    "wires": [
      [
        "839a577c90a28a47"
      ]
    ]
  },
  {
    "id": "05ebece072e3f0dc",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 1460,
    "wires": []
  },
  {
    "id": "839a577c90a28a47",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 1460,
    "wires": [
      [
        "05ebece072e3f0dc",
        "ef71e2cb5af527ee"
      ]
    ]
  },
  {
    "id": "ef71e2cb5af527ee",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 1460,
    "wires": []
  },
  {
    "id": "ac4be4fa89864e99",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 1500,
    "wires": [
      [
        "c9a3256590282864"
      ]
    ]
  },
  {
    "id": "08a74c6a0e985b03",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1500,
    "wires": [
      [
        "1f890987b1e839a3"
      ]
    ]
  },
  {
    "id": "1f890987b1e839a3",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "aa085ef680799426"
    ],
    "x": 895,
    "y": 1500,
    "wires": []
  },
  {
    "id": "c9a3256590282864",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 1500,
    "wires": [
      [
        "e87c774ca2777e13"
      ]
    ]
  },
  {
    "id": "e87c774ca2777e13",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 1500,
    "wires": [
      [
        "08a74c6a0e985b03"
      ]
    ]
  },
  {
    "id": "aa085ef680799426",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "1f890987b1e839a3"
    ],
    "x": 975,
    "y": 1500,
    "wires": [
      [
        "67887b6cff7e5975"
      ]
    ]
  },
  {
    "id": "67887b6cff7e5975",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor34', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 1500,
    "wires": [
      [
        "27472507e1f4c941"
      ]
    ]
  },
  {
    "id": "885c3551123fcce8",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 1500,
    "wires": []
  },
  {
    "id": "27472507e1f4c941",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 1500,
    "wires": [
      [
        "885c3551123fcce8",
        "a383e9f317af8834"
      ]
    ]
  },
  {
    "id": "a383e9f317af8834",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 1500,
    "wires": []
  },
  {
    "id": "c2be24d2196a280f",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 1540,
    "wires": [
      [
        "1297cb592d0878dd"
      ]
    ]
  },
  {
    "id": "b4248058c3917979",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1540,
    "wires": [
      [
        "529c452790dbe439"
      ]
    ]
  },
  {
    "id": "529c452790dbe439",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "493b5d662d068c2f"
    ],
    "x": 895,
    "y": 1540,
    "wires": []
  },
  {
    "id": "1297cb592d0878dd",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 1540,
    "wires": [
      [
        "53d9b15c132b5279"
      ]
    ]
  },
  {
    "id": "53d9b15c132b5279",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 1540,
    "wires": [
      [
        "b4248058c3917979"
      ]
    ]
  },
  {
    "id": "493b5d662d068c2f",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "529c452790dbe439"
    ],
    "x": 975,
    "y": 1540,
    "wires": [
      [
        "da111e75cdd45ea3"
      ]
    ]
  },
  {
    "id": "da111e75cdd45ea3",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor35', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 1540,
    "wires": [
      [
        "163938fbec3c2f17"
      ]
    ]
  },
  {
    "id": "932f073ffa54f280",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 1540,
    "wires": []
  },
  {
    "id": "163938fbec3c2f17",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 1540,
    "wires": [
      [
        "932f073ffa54f280",
        "7e094a7b0e4dbb07"
      ]
    ]
  },
  {
    "id": "7e094a7b0e4dbb07",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 1540,
    "wires": []
  },
  {
    "id": "2aee55c48c8778df",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 1580,
    "wires": [
      [
        "0e50984213ca5a77"
      ]
    ]
  },
  {
    "id": "55f818cad15d60c9",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1580,
    "wires": [
      [
        "b2ef696b3f05a9b9"
      ]
    ]
  },
  {
    "id": "b2ef696b3f05a9b9",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "faf35cd3028b2ea6"
    ],
    "x": 895,
    "y": 1580,
    "wires": []
  },
  {
    "id": "0e50984213ca5a77",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 1580,
    "wires": [
      [
        "fda448630713d6d4"
      ]
    ]
  },
  {
    "id": "fda448630713d6d4",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 1580,
    "wires": [
      [
        "55f818cad15d60c9"
      ]
    ]
  },
  {
    "id": "faf35cd3028b2ea6",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "b2ef696b3f05a9b9"
    ],
    "x": 975,
    "y": 1580,
    "wires": [
      [
        "67870bf15dbd8289"
      ]
    ]
  },
  {
    "id": "67870bf15dbd8289",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor36', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 1580,
    "wires": [
      [
        "89d92264cf74d623"
      ]
    ]
  },
  {
    "id": "3ee7e2714c579355",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 1580,
    "wires": []
  },
  {
    "id": "89d92264cf74d623",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 1580,
    "wires": [
      [
        "3ee7e2714c579355",
        "d095e16661c8c1a1"
      ]
    ]
  },
  {
    "id": "d095e16661c8c1a1",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 1580,
    "wires": []
  },
  {
    "id": "e1496788f136401c",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 1620,
    "wires": [
      [
        "b2ca24baafb67a1b"
      ]
    ]
  },
  {
    "id": "f3f5368705b7e17c",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1620,
    "wires": [
      [
        "b1141daeb694b12a"
      ]
    ]
  },
  {
    "id": "b1141daeb694b12a",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "b5b16710693f7027"
    ],
    "x": 895,
    "y": 1620,
    "wires": []
  },
  {
    "id": "b2ca24baafb67a1b",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 1620,
    "wires": [
      [
        "c2865e6050f88465"
      ]
    ]
  },
  {
    "id": "c2865e6050f88465",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 1620,
    "wires": [
      [
        "f3f5368705b7e17c"
      ]
    ]
  },
  {
    "id": "b5b16710693f7027",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "b1141daeb694b12a"
    ],
    "x": 975,
    "y": 1620,
    "wires": [
      [
        "9ab8ffb06d316e69"
      ]
    ]
  },
  {
    "id": "9ab8ffb06d316e69",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor37', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 1620,
    "wires": [
      [
        "9333139549eb68eb"
      ]
    ]
  },
  {
    "id": "0b567f28abf05b8c",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 1620,
    "wires": []
  },
  {
    "id": "9333139549eb68eb",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 1620,
    "wires": [
      [
        "0b567f28abf05b8c",
        "7c0db8303ff515d7"
      ]
    ]
  },
  {
    "id": "7c0db8303ff515d7",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 1620,
    "wires": []
  },
  {
    "id": "2ab3728060c97489",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 1660,
    "wires": [
      [
        "5d87d85c1879576a"
      ]
    ]
  },
  {
    "id": "6e44346071da8c1e",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1660,
    "wires": [
      [
        "6bd74b247550c256"
      ]
    ]
  },
  {
    "id": "6bd74b247550c256",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "effb92089edc01b9"
    ],
    "x": 895,
    "y": 1660,
    "wires": []
  },
  {
    "id": "5d87d85c1879576a",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 1660,
    "wires": [
      [
        "ae166ea0573fdeb3"
      ]
    ]
  },
  {
    "id": "ae166ea0573fdeb3",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 1660,
    "wires": [
      [
        "6e44346071da8c1e"
      ]
    ]
  },
  {
    "id": "effb92089edc01b9",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "6bd74b247550c256"
    ],
    "x": 975,
    "y": 1660,
    "wires": [
      [
        "c8b1519f169ddf74"
      ]
    ]
  },
  {
    "id": "c8b1519f169ddf74",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor38', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 1660,
    "wires": [
      [
        "8a791cea8294fe18"
      ]
    ]
  },
  {
    "id": "7d873ceed6e760c2",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 1660,
    "wires": []
  },
  {
    "id": "8a791cea8294fe18",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 1660,
    "wires": [
      [
        "7d873ceed6e760c2",
        "dcd65e464dcf0c1b"
      ]
    ]
  },
  {
    "id": "dcd65e464dcf0c1b",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 1660,
    "wires": []
  },
  {
    "id": "50df61bf5ce8a908",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 1700,
    "wires": [
      [
        "85ac8dca6348272e"
      ]
    ]
  },
  {
    "id": "b5e6bd47d277a271",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1700,
    "wires": [
      [
        "c4bb811c2398917d"
      ]
    ]
  },
  {
    "id": "c4bb811c2398917d",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "5756827cbd22a51d"
    ],
    "x": 895,
    "y": 1700,
    "wires": []
  },
  {
    "id": "85ac8dca6348272e",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 1700,
    "wires": [
      [
        "3a1c4ad5022d557e"
      ]
    ]
  },
  {
    "id": "3a1c4ad5022d557e",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 1700,
    "wires": [
      [
        "b5e6bd47d277a271"
      ]
    ]
  },
  {
    "id": "5756827cbd22a51d",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "c4bb811c2398917d"
    ],
    "x": 975,
    "y": 1700,
    "wires": [
      [
        "2fee2d04e6f6675e"
      ]
    ]
  },
  {
    "id": "2fee2d04e6f6675e",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor39', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 1700,
    "wires": [
      [
        "2bb8cb4437af5df1"
      ]
    ]
  },
  {
    "id": "55d5c07f83515dec",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 1700,
    "wires": []
  },
  {
    "id": "2bb8cb4437af5df1",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 1700,
    "wires": [
      [
        "55d5c07f83515dec",
        "c7aba1802cc64a76"
      ]
    ]
  },
  {
    "id": "c7aba1802cc64a76",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 1700,
    "wires": []
  },
  {
    "id": "9731710dd7be4f21",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 1740,
    "wires": [
      [
        "340e47e9bbea6a22"
      ]
    ]
  },
  {
    "id": "d36bc40f23f5aa4d",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1740,
    "wires": [
      [
        "95998004d7bec370"
      ]
    ]
  },
  {
    "id": "95998004d7bec370",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "ff0daab63393ed0c"
    ],
    "x": 895,
    "y": 1740,
    "wires": []
  },
  {
    "id": "340e47e9bbea6a22",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 1740,
    "wires": [
      [
        "2fed2705456ba4a8"
      ]
    ]
  },
  {
    "id": "2fed2705456ba4a8",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 1740,
    "wires": [
      [
        "d36bc40f23f5aa4d"
      ]
    ]
  },
  {
    "id": "ff0daab63393ed0c",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "95998004d7bec370"
    ],
    "x": 975,
    "y": 1740,
    "wires": [
      [
        "c654e47cc7e00adf"
      ]
    ]
  },
  {
    "id": "c654e47cc7e00adf",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor40', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 1740,
    "wires": [
      [
        "cddfe623b7282295"
      ]
    ]
  },
  {
    "id": "fabfe096a79c8af8",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 1740,
    "wires": []
  },
  {
    "id": "cddfe623b7282295",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 1740,
    "wires": [
      [
        "fabfe096a79c8af8",
        "4921fbd3522f763d"
      ]
    ]
  },
  {
    "id": "4921fbd3522f763d",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 1740,
    "wires": []
  },
  {
    "id": "fd583135379674ca",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 1820,
    "wires": [
      [
        "f111805e40f0fa22"
      ]
    ]
  },
  {
    "id": "6b2f78bcc20f9947",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1820,
    "wires": [
      [
        "12a555fb9e3de2d8"
      ]
    ]
  },
  {
    "id": "12a555fb9e3de2d8",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "26067254229e1eb4"
    ],
    "x": 895,
    "y": 1820,
    "wires": []
  },
  {
    "id": "f111805e40f0fa22",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 1820,
    "wires": [
      [
        "ae7a8deef3afa03e"
      ]
    ]
  },
  {
    "id": "6407300ce516e67c",
    "type": "comment",
    "z": "e61d7807.20aac8",
    "name": "41-50",
    "info": "",
    "x": 90,
    "y": 1780,
    "wires": []
  },
  {
    "id": "ae7a8deef3afa03e",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 1820,
    "wires": [
      [
        "6b2f78bcc20f9947"
      ]
    ]
  },
  {
    "id": "26067254229e1eb4",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "12a555fb9e3de2d8"
    ],
    "x": 975,
    "y": 1820,
    "wires": [
      [
        "1ce7942b05c394c8"
      ]
    ]
  },
  {
    "id": "1ce7942b05c394c8",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor41', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 1820,
    "wires": [
      [
        "452e9ba62cd4dae7"
      ]
    ]
  },
  {
    "id": "8dbfbb110d7bb72e",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 1820,
    "wires": []
  },
  {
    "id": "452e9ba62cd4dae7",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 1820,
    "wires": [
      [
        "8dbfbb110d7bb72e",
        "a4167df7ab1459b3"
      ]
    ]
  },
  {
    "id": "a4167df7ab1459b3",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 1820,
    "wires": []
  },
  {
    "id": "0e8a803dca28a4e5",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 1860,
    "wires": [
      [
        "396a4edd0391ff4a"
      ]
    ]
  },
  {
    "id": "f65413c04501433c",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1860,
    "wires": [
      [
        "02a39dd52417b8a5"
      ]
    ]
  },
  {
    "id": "02a39dd52417b8a5",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "fcf2eabda7c3b63f"
    ],
    "x": 895,
    "y": 1860,
    "wires": []
  },
  {
    "id": "396a4edd0391ff4a",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 1860,
    "wires": [
      [
        "99556b7e36e923f4"
      ]
    ]
  },
  {
    "id": "99556b7e36e923f4",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 1860,
    "wires": [
      [
        "f65413c04501433c"
      ]
    ]
  },
  {
    "id": "fcf2eabda7c3b63f",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "02a39dd52417b8a5"
    ],
    "x": 975,
    "y": 1860,
    "wires": [
      [
        "af836777626a92bb"
      ]
    ]
  },
  {
    "id": "af836777626a92bb",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor42', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 1860,
    "wires": [
      [
        "a0d056aed4eb056a"
      ]
    ]
  },
  {
    "id": "8e58d57b168b03c7",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 1860,
    "wires": []
  },
  {
    "id": "a0d056aed4eb056a",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 1860,
    "wires": [
      [
        "8e58d57b168b03c7",
        "ea1b4580ed64e91e"
      ]
    ]
  },
  {
    "id": "ea1b4580ed64e91e",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 1860,
    "wires": []
  },
  {
    "id": "7c3c93a87ff42b37",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 1900,
    "wires": [
      [
        "9309d7df4c14213c"
      ]
    ]
  },
  {
    "id": "43485aad928caf89",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1900,
    "wires": [
      [
        "da6eb57630d107fc"
      ]
    ]
  },
  {
    "id": "da6eb57630d107fc",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "2b9781e9129e2cc8"
    ],
    "x": 895,
    "y": 1900,
    "wires": []
  },
  {
    "id": "9309d7df4c14213c",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 1900,
    "wires": [
      [
        "0775f4f354be8c14"
      ]
    ]
  },
  {
    "id": "0775f4f354be8c14",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 1900,
    "wires": [
      [
        "43485aad928caf89"
      ]
    ]
  },
  {
    "id": "2b9781e9129e2cc8",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "da6eb57630d107fc"
    ],
    "x": 975,
    "y": 1900,
    "wires": [
      [
        "59c6ad63911f5151"
      ]
    ]
  },
  {
    "id": "59c6ad63911f5151",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor43', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 1900,
    "wires": [
      [
        "96710210ecd25c93"
      ]
    ]
  },
  {
    "id": "124b433dbc804172",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 1900,
    "wires": []
  },
  {
    "id": "96710210ecd25c93",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 1900,
    "wires": [
      [
        "124b433dbc804172",
        "574ef0625d34c75a"
      ]
    ]
  },
  {
    "id": "574ef0625d34c75a",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 1900,
    "wires": []
  },
  {
    "id": "04463dc3b7c21d1a",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 1940,
    "wires": [
      [
        "a8994ed206aec95b"
      ]
    ]
  },
  {
    "id": "4c152a4428ffdf3c",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1940,
    "wires": [
      [
        "120407cb90a3c21b"
      ]
    ]
  },
  {
    "id": "120407cb90a3c21b",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "274fc11af5b077a2"
    ],
    "x": 895,
    "y": 1940,
    "wires": []
  },
  {
    "id": "a8994ed206aec95b",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 1940,
    "wires": [
      [
        "817e17c533785bd2"
      ]
    ]
  },
  {
    "id": "817e17c533785bd2",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 1940,
    "wires": [
      [
        "4c152a4428ffdf3c"
      ]
    ]
  },
  {
    "id": "274fc11af5b077a2",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "120407cb90a3c21b"
    ],
    "x": 975,
    "y": 1940,
    "wires": [
      [
        "8c93943db8b89ac2"
      ]
    ]
  },
  {
    "id": "8c93943db8b89ac2",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor44', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 1940,
    "wires": [
      [
        "7e83dbe2b1e1e035"
      ]
    ]
  },
  {
    "id": "39d75a4a88294981",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 1940,
    "wires": []
  },
  {
    "id": "7e83dbe2b1e1e035",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 1940,
    "wires": [
      [
        "39d75a4a88294981",
        "d42665b2a9f60e61"
      ]
    ]
  },
  {
    "id": "d42665b2a9f60e61",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 1940,
    "wires": []
  },
  {
    "id": "c6969147c53b7ada",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 1980,
    "wires": [
      [
        "9900cbd1aaf141af"
      ]
    ]
  },
  {
    "id": "adcbd37632267c3f",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 1980,
    "wires": [
      [
        "021fb8e0fa4417eb"
      ]
    ]
  },
  {
    "id": "021fb8e0fa4417eb",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "87ef1a7ccdf8c1f1"
    ],
    "x": 895,
    "y": 1980,
    "wires": []
  },
  {
    "id": "9900cbd1aaf141af",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 1980,
    "wires": [
      [
        "ef82c59cd2281fd8"
      ]
    ]
  },
  {
    "id": "ef82c59cd2281fd8",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 1980,
    "wires": [
      [
        "adcbd37632267c3f"
      ]
    ]
  },
  {
    "id": "87ef1a7ccdf8c1f1",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "021fb8e0fa4417eb"
    ],
    "x": 975,
    "y": 1980,
    "wires": [
      [
        "42a7955bc043e58c"
      ]
    ]
  },
  {
    "id": "42a7955bc043e58c",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor45', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 1980,
    "wires": [
      [
        "a1a5f008e7535748"
      ]
    ]
  },
  {
    "id": "bddc3be7dfd1e1b2",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 1980,
    "wires": []
  },
  {
    "id": "a1a5f008e7535748",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 1980,
    "wires": [
      [
        "bddc3be7dfd1e1b2",
        "fbe84ae2aeacc3eb"
      ]
    ]
  },
  {
    "id": "fbe84ae2aeacc3eb",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 1980,
    "wires": []
  },
  {
    "id": "23bc201c8eabbba0",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 2020,
    "wires": [
      [
        "741f9083489062a1"
      ]
    ]
  },
  {
    "id": "40c25baf86e5c4ef",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 2020,
    "wires": [
      [
        "0842c426db67e15a"
      ]
    ]
  },
  {
    "id": "0842c426db67e15a",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "dcfb837331b6a94b"
    ],
    "x": 895,
    "y": 2020,
    "wires": []
  },
  {
    "id": "741f9083489062a1",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 2020,
    "wires": [
      [
        "5bd4602899fc1aaf"
      ]
    ]
  },
  {
    "id": "5bd4602899fc1aaf",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 2020,
    "wires": [
      [
        "40c25baf86e5c4ef"
      ]
    ]
  },
  {
    "id": "dcfb837331b6a94b",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "0842c426db67e15a"
    ],
    "x": 975,
    "y": 2020,
    "wires": [
      [
        "d3dbad2d25fe3832"
      ]
    ]
  },
  {
    "id": "d3dbad2d25fe3832",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor46', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 2020,
    "wires": [
      [
        "2dbbd58aa1bddfa3"
      ]
    ]
  },
  {
    "id": "8f0eefe8e5ed5f56",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 2020,
    "wires": []
  },
  {
    "id": "2dbbd58aa1bddfa3",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 2020,
    "wires": [
      [
        "8f0eefe8e5ed5f56",
        "f6952c8a323742d5"
      ]
    ]
  },
  {
    "id": "f6952c8a323742d5",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 2020,
    "wires": []
  },
  {
    "id": "321399475b64d3f6",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 2060,
    "wires": [
      [
        "04accecc6d7c995c"
      ]
    ]
  },
  {
    "id": "8efb659df34c4a12",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 2060,
    "wires": [
      [
        "10173aae91c3a3cb"
      ]
    ]
  },
  {
    "id": "10173aae91c3a3cb",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "93c1b8bc47fe1727"
    ],
    "x": 895,
    "y": 2060,
    "wires": []
  },
  {
    "id": "04accecc6d7c995c",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 2060,
    "wires": [
      [
        "b7d5a0b401daef99"
      ]
    ]
  },
  {
    "id": "b7d5a0b401daef99",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 2060,
    "wires": [
      [
        "8efb659df34c4a12"
      ]
    ]
  },
  {
    "id": "93c1b8bc47fe1727",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "10173aae91c3a3cb"
    ],
    "x": 975,
    "y": 2060,
    "wires": [
      [
        "db4c307ac71d2d09"
      ]
    ]
  },
  {
    "id": "db4c307ac71d2d09",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor47', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 2060,
    "wires": [
      [
        "295d58a535784d81"
      ]
    ]
  },
  {
    "id": "417fb5c859bfcb51",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 2060,
    "wires": []
  },
  {
    "id": "295d58a535784d81",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 2060,
    "wires": [
      [
        "417fb5c859bfcb51",
        "0c1407a3d0344f1c"
      ]
    ]
  },
  {
    "id": "0c1407a3d0344f1c",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 2060,
    "wires": []
  },
  {
    "id": "f26d879f47c0ae10",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 2100,
    "wires": [
      [
        "a34255031bbc51a9"
      ]
    ]
  },
  {
    "id": "74e1654055c2319c",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 2100,
    "wires": [
      [
        "175124ccc75b4fd9"
      ]
    ]
  },
  {
    "id": "175124ccc75b4fd9",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "f5712ea7d42b7c39"
    ],
    "x": 895,
    "y": 2100,
    "wires": []
  },
  {
    "id": "a34255031bbc51a9",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 2100,
    "wires": [
      [
        "44859134bc7557bc"
      ]
    ]
  },
  {
    "id": "44859134bc7557bc",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 2100,
    "wires": [
      [
        "74e1654055c2319c"
      ]
    ]
  },
  {
    "id": "f5712ea7d42b7c39",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "175124ccc75b4fd9"
    ],
    "x": 975,
    "y": 2100,
    "wires": [
      [
        "1856a658be200dcc"
      ]
    ]
  },
  {
    "id": "1856a658be200dcc",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor48', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 2100,
    "wires": [
      [
        "9ce953e4fec686db"
      ]
    ]
  },
  {
    "id": "b67ea4146055d601",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 2100,
    "wires": []
  },
  {
    "id": "9ce953e4fec686db",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 2100,
    "wires": [
      [
        "b67ea4146055d601",
        "d0fe40cf7b50fe6f"
      ]
    ]
  },
  {
    "id": "d0fe40cf7b50fe6f",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 2100,
    "wires": []
  },
  {
    "id": "bda4117fbfd6f15c",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 2140,
    "wires": [
      [
        "b370f47273191ce8"
      ]
    ]
  },
  {
    "id": "fa44da4b576c63aa",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 2140,
    "wires": [
      [
        "6632b48e53d4b41f"
      ]
    ]
  },
  {
    "id": "6632b48e53d4b41f",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "48285b72c38e9e05"
    ],
    "x": 895,
    "y": 2140,
    "wires": []
  },
  {
    "id": "b370f47273191ce8",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 2140,
    "wires": [
      [
        "85b5f5f497c80ebe"
      ]
    ]
  },
  {
    "id": "85b5f5f497c80ebe",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 2140,
    "wires": [
      [
        "fa44da4b576c63aa"
      ]
    ]
  },
  {
    "id": "48285b72c38e9e05",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "6632b48e53d4b41f"
    ],
    "x": 975,
    "y": 2140,
    "wires": [
      [
        "74a0b8f8846ea1a8"
      ]
    ]
  },
  {
    "id": "74a0b8f8846ea1a8",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor49', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 2140,
    "wires": [
      [
        "16d3c7432b7f50f7"
      ]
    ]
  },
  {
    "id": "c5544434e4ec6885",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 2140,
    "wires": []
  },
  {
    "id": "16d3c7432b7f50f7",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 2140,
    "wires": [
      [
        "c5544434e4ec6885",
        "f524c9fae2fd666e"
      ]
    ]
  },
  {
    "id": "f524c9fae2fd666e",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 2140,
    "wires": []
  },
  {
    "id": "e1a1a0a7887e76a4",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 2180,
    "wires": [
      [
        "c4f43a95796221d5"
      ]
    ]
  },
  {
    "id": "5c86ca46daa5dd33",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 2180,
    "wires": [
      [
        "c832fa4062ab82ea"
      ]
    ]
  },
  {
    "id": "c832fa4062ab82ea",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "0208433940162e53"
    ],
    "x": 895,
    "y": 2180,
    "wires": []
  },
  {
    "id": "c4f43a95796221d5",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 2180,
    "wires": [
      [
        "f9404d1ed644ce21"
      ]
    ]
  },
  {
    "id": "f9404d1ed644ce21",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 2180,
    "wires": [
      [
        "5c86ca46daa5dd33"
      ]
    ]
  },
  {
    "id": "0208433940162e53",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "c832fa4062ab82ea"
    ],
    "x": 975,
    "y": 2180,
    "wires": [
      [
        "7b03efba46e86a4f"
      ]
    ]
  },
  {
    "id": "7b03efba46e86a4f",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor50', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 2180,
    "wires": [
      [
        "9e420875a4f4f1fe"
      ]
    ]
  },
  {
    "id": "96c17c744203e6ef",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 2180,
    "wires": []
  },
  {
    "id": "9e420875a4f4f1fe",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 2180,
    "wires": [
      [
        "96c17c744203e6ef",
        "d1d7fda1441b2019"
      ]
    ]
  },
  {
    "id": "d1d7fda1441b2019",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 2180,
    "wires": []
  },
  {
    "id": "e58edc9468c6b19a",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 2260,
    "wires": [
      [
        "405e58fff005e808"
      ]
    ]
  },
  {
    "id": "9a51903ebc091a96",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 2260,
    "wires": [
      [
        "9aa8871121dab741"
      ]
    ]
  },
  {
    "id": "9aa8871121dab741",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "8d8cb4acee80f794"
    ],
    "x": 895,
    "y": 2260,
    "wires": []
  },
  {
    "id": "405e58fff005e808",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 2260,
    "wires": [
      [
        "bed0877796927548"
      ]
    ]
  },
  {
    "id": "53017d3b40f0e85c",
    "type": "comment",
    "z": "e61d7807.20aac8",
    "name": "51-60",
    "info": "",
    "x": 90,
    "y": 2220,
    "wires": []
  },
  {
    "id": "bed0877796927548",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 2260,
    "wires": [
      [
        "9a51903ebc091a96"
      ]
    ]
  },
  {
    "id": "8d8cb4acee80f794",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "9aa8871121dab741"
    ],
    "x": 975,
    "y": 2260,
    "wires": [
      [
        "22a3e1b7ec5389ee"
      ]
    ]
  },
  {
    "id": "22a3e1b7ec5389ee",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor51', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 2260,
    "wires": [
      [
        "bc762e36b7a6a632"
      ]
    ]
  },
  {
    "id": "eaeccaf87bbc5e65",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 2260,
    "wires": []
  },
  {
    "id": "bc762e36b7a6a632",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 2260,
    "wires": [
      [
        "eaeccaf87bbc5e65",
        "638331f9153b02dd"
      ]
    ]
  },
  {
    "id": "638331f9153b02dd",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 2260,
    "wires": []
  },
  {
    "id": "fb4c8d2ebdf38c30",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 2300,
    "wires": [
      [
        "a6e34f479682f015"
      ]
    ]
  },
  {
    "id": "de6f06aef425754d",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 2300,
    "wires": [
      [
        "bbef9b8e7ac0e321"
      ]
    ]
  },
  {
    "id": "bbef9b8e7ac0e321",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "a38c997bd45d3997"
    ],
    "x": 895,
    "y": 2300,
    "wires": []
  },
  {
    "id": "a6e34f479682f015",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 2300,
    "wires": [
      [
        "22f0945d13bcfe24"
      ]
    ]
  },
  {
    "id": "22f0945d13bcfe24",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 2300,
    "wires": [
      [
        "de6f06aef425754d"
      ]
    ]
  },
  {
    "id": "a38c997bd45d3997",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "bbef9b8e7ac0e321"
    ],
    "x": 975,
    "y": 2300,
    "wires": [
      [
        "9c0c97a09632bb1d"
      ]
    ]
  },
  {
    "id": "9c0c97a09632bb1d",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor52', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 2300,
    "wires": [
      [
        "17b7516d0b494f52"
      ]
    ]
  },
  {
    "id": "6e7d19c1efe69844",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 2300,
    "wires": []
  },
  {
    "id": "17b7516d0b494f52",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 2300,
    "wires": [
      [
        "6e7d19c1efe69844",
        "6dc8821035ab421b"
      ]
    ]
  },
  {
    "id": "6dc8821035ab421b",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 2300,
    "wires": []
  },
  {
    "id": "52fa5aa6e767b70d",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 2340,
    "wires": [
      [
        "af619a471594e82f"
      ]
    ]
  },
  {
    "id": "af91e6ec9bfd5e57",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 2340,
    "wires": [
      [
        "181a0f23fa07738d"
      ]
    ]
  },
  {
    "id": "181a0f23fa07738d",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "c8147ced888791f7"
    ],
    "x": 895,
    "y": 2340,
    "wires": []
  },
  {
    "id": "af619a471594e82f",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 2340,
    "wires": [
      [
        "4aaa16c0ed455ccf"
      ]
    ]
  },
  {
    "id": "4aaa16c0ed455ccf",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 2340,
    "wires": [
      [
        "af91e6ec9bfd5e57"
      ]
    ]
  },
  {
    "id": "c8147ced888791f7",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "181a0f23fa07738d"
    ],
    "x": 975,
    "y": 2340,
    "wires": [
      [
        "b68e3b65610fd316"
      ]
    ]
  },
  {
    "id": "b68e3b65610fd316",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor53', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 2340,
    "wires": [
      [
        "aa6a7f54ed806b7d"
      ]
    ]
  },
  {
    "id": "51daae44de404496",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 2340,
    "wires": []
  },
  {
    "id": "aa6a7f54ed806b7d",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 2340,
    "wires": [
      [
        "51daae44de404496",
        "96350678928c26d0"
      ]
    ]
  },
  {
    "id": "96350678928c26d0",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 2340,
    "wires": []
  },
  {
    "id": "ff9cc46c077ef3ab",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 2380,
    "wires": [
      [
        "eda2d168a7bb61c2"
      ]
    ]
  },
  {
    "id": "fa483578f9338452",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 2380,
    "wires": [
      [
        "62248e033344e8bd"
      ]
    ]
  },
  {
    "id": "62248e033344e8bd",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "77c5fa84f38a2ea0"
    ],
    "x": 895,
    "y": 2380,
    "wires": []
  },
  {
    "id": "eda2d168a7bb61c2",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 2380,
    "wires": [
      [
        "5e7aeae7cdb14096"
      ]
    ]
  },
  {
    "id": "5e7aeae7cdb14096",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 2380,
    "wires": [
      [
        "fa483578f9338452"
      ]
    ]
  },
  {
    "id": "77c5fa84f38a2ea0",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "62248e033344e8bd"
    ],
    "x": 975,
    "y": 2380,
    "wires": [
      [
        "0bee236f4a3ccfef"
      ]
    ]
  },
  {
    "id": "0bee236f4a3ccfef",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor54', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 2380,
    "wires": [
      [
        "7dd2a4271f72ae93"
      ]
    ]
  },
  {
    "id": "857acabb02659eab",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 2380,
    "wires": []
  },
  {
    "id": "7dd2a4271f72ae93",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 2380,
    "wires": [
      [
        "857acabb02659eab",
        "29e23c3ed99144c6"
      ]
    ]
  },
  {
    "id": "29e23c3ed99144c6",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 2380,
    "wires": []
  },
  {
    "id": "a1e8965e1860b08d",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 2420,
    "wires": [
      [
        "1737eec02e75eb54"
      ]
    ]
  },
  {
    "id": "7eb7aab359b31ba5",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 2420,
    "wires": [
      [
        "21043d9f068c9e49"
      ]
    ]
  },
  {
    "id": "21043d9f068c9e49",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "05722b2605fa37b0"
    ],
    "x": 895,
    "y": 2420,
    "wires": []
  },
  {
    "id": "1737eec02e75eb54",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 2420,
    "wires": [
      [
        "10327db39aa893c9"
      ]
    ]
  },
  {
    "id": "10327db39aa893c9",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 2420,
    "wires": [
      [
        "7eb7aab359b31ba5"
      ]
    ]
  },
  {
    "id": "05722b2605fa37b0",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "21043d9f068c9e49"
    ],
    "x": 975,
    "y": 2420,
    "wires": [
      [
        "14ae16a1210d7d97"
      ]
    ]
  },
  {
    "id": "14ae16a1210d7d97",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor55', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 2420,
    "wires": [
      [
        "59d258a1880d6c9c"
      ]
    ]
  },
  {
    "id": "4a197ebafc9a0d83",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 2420,
    "wires": []
  },
  {
    "id": "59d258a1880d6c9c",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 2420,
    "wires": [
      [
        "4a197ebafc9a0d83",
        "f157502b149a1107"
      ]
    ]
  },
  {
    "id": "f157502b149a1107",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 2420,
    "wires": []
  },
  {
    "id": "99f5b4ad17567927",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 2460,
    "wires": [
      [
        "bf41f4839cb36ff5"
      ]
    ]
  },
  {
    "id": "a10ca192eafd0878",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 2460,
    "wires": [
      [
        "e9633d03bddc69b9"
      ]
    ]
  },
  {
    "id": "e9633d03bddc69b9",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "f456b75e11f90fea"
    ],
    "x": 895,
    "y": 2460,
    "wires": []
  },
  {
    "id": "bf41f4839cb36ff5",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 2460,
    "wires": [
      [
        "44a1e42127ad2b78"
      ]
    ]
  },
  {
    "id": "44a1e42127ad2b78",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 2460,
    "wires": [
      [
        "a10ca192eafd0878"
      ]
    ]
  },
  {
    "id": "f456b75e11f90fea",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "e9633d03bddc69b9"
    ],
    "x": 975,
    "y": 2460,
    "wires": [
      [
        "55721927a5e95209"
      ]
    ]
  },
  {
    "id": "55721927a5e95209",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor56', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 2460,
    "wires": [
      [
        "821ad9b507ed8c2d"
      ]
    ]
  },
  {
    "id": "22e9d04faf5b4b4e",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 2460,
    "wires": []
  },
  {
    "id": "821ad9b507ed8c2d",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 2460,
    "wires": [
      [
        "22e9d04faf5b4b4e",
        "0abb091b46bd6e14"
      ]
    ]
  },
  {
    "id": "0abb091b46bd6e14",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 2460,
    "wires": []
  },
  {
    "id": "1f6e8df65a5a1eda",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 2500,
    "wires": [
      [
        "49389a19725ed423"
      ]
    ]
  },
  {
    "id": "d6f682da77296f62",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 2500,
    "wires": [
      [
        "e4a38d12ebd9a198"
      ]
    ]
  },
  {
    "id": "e4a38d12ebd9a198",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "2bd4cae33a39e0b0"
    ],
    "x": 895,
    "y": 2500,
    "wires": []
  },
  {
    "id": "49389a19725ed423",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 2500,
    "wires": [
      [
        "bda49d5007f36dd4"
      ]
    ]
  },
  {
    "id": "bda49d5007f36dd4",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 2500,
    "wires": [
      [
        "d6f682da77296f62"
      ]
    ]
  },
  {
    "id": "2bd4cae33a39e0b0",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "e4a38d12ebd9a198"
    ],
    "x": 975,
    "y": 2500,
    "wires": [
      [
        "85515c30292042b1"
      ]
    ]
  },
  {
    "id": "85515c30292042b1",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor57', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 2500,
    "wires": [
      [
        "7d9fad62ecb4aba5"
      ]
    ]
  },
  {
    "id": "d8d3b248d709e2e3",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 2500,
    "wires": []
  },
  {
    "id": "7d9fad62ecb4aba5",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 2500,
    "wires": [
      [
        "d8d3b248d709e2e3",
        "118c5429b1071a38"
      ]
    ]
  },
  {
    "id": "118c5429b1071a38",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 2500,
    "wires": []
  },
  {
    "id": "45404e2bcd86a541",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 2540,
    "wires": [
      [
        "4ba03ff5aa1cc444"
      ]
    ]
  },
  {
    "id": "bcb07581399078fa",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 2540,
    "wires": [
      [
        "4032b0d274fa13cc"
      ]
    ]
  },
  {
    "id": "4032b0d274fa13cc",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "a6db33e9e0d6f6bb"
    ],
    "x": 895,
    "y": 2540,
    "wires": []
  },
  {
    "id": "4ba03ff5aa1cc444",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 2540,
    "wires": [
      [
        "c43fe569010babef"
      ]
    ]
  },
  {
    "id": "c43fe569010babef",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 2540,
    "wires": [
      [
        "bcb07581399078fa"
      ]
    ]
  },
  {
    "id": "a6db33e9e0d6f6bb",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "4032b0d274fa13cc"
    ],
    "x": 975,
    "y": 2540,
    "wires": [
      [
        "ebbe5d9b987cf498"
      ]
    ]
  },
  {
    "id": "ebbe5d9b987cf498",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor58', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 2540,
    "wires": [
      [
        "217f8ce759e47a33"
      ]
    ]
  },
  {
    "id": "c164ba6b78bdc817",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 2540,
    "wires": []
  },
  {
    "id": "217f8ce759e47a33",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 2540,
    "wires": [
      [
        "c164ba6b78bdc817",
        "719e652d82ee6ed9"
      ]
    ]
  },
  {
    "id": "719e652d82ee6ed9",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 2540,
    "wires": []
  },
  {
    "id": "6442de022fe84592",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 2580,
    "wires": [
      [
        "ea7828dfe103aac8"
      ]
    ]
  },
  {
    "id": "d77b7c44ef2b3ac2",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 2580,
    "wires": [
      [
        "f3b2d49ed09ea2a9"
      ]
    ]
  },
  {
    "id": "f3b2d49ed09ea2a9",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "c070ce073d82e307"
    ],
    "x": 895,
    "y": 2580,
    "wires": []
  },
  {
    "id": "ea7828dfe103aac8",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 2580,
    "wires": [
      [
        "7e7bb4ab339ffdca"
      ]
    ]
  },
  {
    "id": "7e7bb4ab339ffdca",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 2580,
    "wires": [
      [
        "d77b7c44ef2b3ac2"
      ]
    ]
  },
  {
    "id": "c070ce073d82e307",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "f3b2d49ed09ea2a9"
    ],
    "x": 975,
    "y": 2580,
    "wires": [
      [
        "47051881f613e5eb"
      ]
    ]
  },
  {
    "id": "47051881f613e5eb",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor59', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 2580,
    "wires": [
      [
        "afd21303a1f2b79d"
      ]
    ]
  },
  {
    "id": "dffdaa6a189dee3d",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 2580,
    "wires": []
  },
  {
    "id": "afd21303a1f2b79d",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 2580,
    "wires": [
      [
        "dffdaa6a189dee3d",
        "d81348d566daef68"
      ]
    ]
  },
  {
    "id": "d81348d566daef68",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 2580,
    "wires": []
  },
  {
    "id": "45a8886723886061",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 130,
    "y": 2620,
    "wires": [
      [
        "d6e033d8201b6bbb"
      ]
    ]
  },
  {
    "id": "b8d690559e0b728e",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 740,
    "y": 2620,
    "wires": [
      [
        "66ca2f4a458e7e5c"
      ]
    ]
  },
  {
    "id": "66ca2f4a458e7e5c",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "9f2f79f8b7eb7a5b"
    ],
    "x": 895,
    "y": 2620,
    "wires": []
  },
  {
    "id": "d6e033d8201b6bbb",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 350,
    "y": 2620,
    "wires": [
      [
        "b3edcf67d7830579"
      ]
    ]
  },
  {
    "id": "b3edcf67d7830579",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 560,
    "y": 2620,
    "wires": [
      [
        "b8d690559e0b728e"
      ]
    ]
  },
  {
    "id": "9f2f79f8b7eb7a5b",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "66ca2f4a458e7e5c"
    ],
    "x": 975,
    "y": 2620,
    "wires": [
      [
        "f20a58e328ea79fd"
      ]
    ]
  },
  {
    "id": "f20a58e328ea79fd",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor60', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1120,
    "y": 2620,
    "wires": [
      [
        "32a58b4149f0f7c8"
      ]
    ]
  },
  {
    "id": "6b9eb5b52ca205b2",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1690,
    "y": 2620,
    "wires": []
  },
  {
    "id": "32a58b4149f0f7c8",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1390,
    "y": 2620,
    "wires": [
      [
        "6b9eb5b52ca205b2",
        "f6501da28df87ef2"
      ]
    ]
  },
  {
    "id": "f6501da28df87ef2",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1870,
    "y": 2620,
    "wires": []
  },
  {
    "id": "74c899a9d96fe84c",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 2700,
    "wires": [
      [
        "05b21843983e442d"
      ]
    ]
  },
  {
    "id": "267a09ed7c1918ef",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 2700,
    "wires": [
      [
        "f55cadabb8a8db5c"
      ]
    ]
  },
  {
    "id": "f55cadabb8a8db5c",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "5a0755a2cb4814bf"
    ],
    "x": 875,
    "y": 2700,
    "wires": []
  },
  {
    "id": "05b21843983e442d",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 2700,
    "wires": [
      [
        "947daca9f18a6fc4"
      ]
    ]
  },
  {
    "id": "e2b4e809263e6370",
    "type": "comment",
    "z": "e61d7807.20aac8",
    "name": "61-70",
    "info": "",
    "x": 70,
    "y": 2660,
    "wires": []
  },
  {
    "id": "947daca9f18a6fc4",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 2700,
    "wires": [
      [
        "267a09ed7c1918ef"
      ]
    ]
  },
  {
    "id": "5a0755a2cb4814bf",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "f55cadabb8a8db5c"
    ],
    "x": 955,
    "y": 2700,
    "wires": [
      [
        "3c2098445b16de1a"
      ]
    ]
  },
  {
    "id": "3c2098445b16de1a",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor61', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 2700,
    "wires": [
      [
        "6d7500f153a05c5d"
      ]
    ]
  },
  {
    "id": "9c9f6abc915cd5ab",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 2700,
    "wires": []
  },
  {
    "id": "6d7500f153a05c5d",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 2700,
    "wires": [
      [
        "9c9f6abc915cd5ab",
        "7e33a730b714b5a6"
      ]
    ]
  },
  {
    "id": "7e33a730b714b5a6",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 2700,
    "wires": []
  },
  {
    "id": "4bd3564a463abe10",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 2740,
    "wires": [
      [
        "8f445c1de4efed89"
      ]
    ]
  },
  {
    "id": "b97bbfa73521c9e6",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 2740,
    "wires": [
      [
        "e03f9717552c01c6"
      ]
    ]
  },
  {
    "id": "e03f9717552c01c6",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "6b9cb904b36dfae2"
    ],
    "x": 875,
    "y": 2740,
    "wires": []
  },
  {
    "id": "8f445c1de4efed89",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 2740,
    "wires": [
      [
        "b259b7c2135ae415"
      ]
    ]
  },
  {
    "id": "b259b7c2135ae415",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 2740,
    "wires": [
      [
        "b97bbfa73521c9e6"
      ]
    ]
  },
  {
    "id": "6b9cb904b36dfae2",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "e03f9717552c01c6"
    ],
    "x": 955,
    "y": 2740,
    "wires": [
      [
        "a64d358a8cff6ffc"
      ]
    ]
  },
  {
    "id": "a64d358a8cff6ffc",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor62', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 2740,
    "wires": [
      [
        "abd72423cd950afd"
      ]
    ]
  },
  {
    "id": "ded4493f258ea9fd",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 2740,
    "wires": []
  },
  {
    "id": "abd72423cd950afd",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 2740,
    "wires": [
      [
        "ded4493f258ea9fd",
        "54fdd27d263045da"
      ]
    ]
  },
  {
    "id": "54fdd27d263045da",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 2740,
    "wires": []
  },
  {
    "id": "b840cfd8a6a1b03e",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 2780,
    "wires": [
      [
        "9290ecc59c771475"
      ]
    ]
  },
  {
    "id": "63029d3f2c8d9e2f",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 2780,
    "wires": [
      [
        "bf0dfc104766591c"
      ]
    ]
  },
  {
    "id": "bf0dfc104766591c",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "9964154995fc8c9e"
    ],
    "x": 875,
    "y": 2780,
    "wires": []
  },
  {
    "id": "9290ecc59c771475",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 2780,
    "wires": [
      [
        "e09fe4ac92eb54ce"
      ]
    ]
  },
  {
    "id": "e09fe4ac92eb54ce",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 2780,
    "wires": [
      [
        "63029d3f2c8d9e2f"
      ]
    ]
  },
  {
    "id": "9964154995fc8c9e",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "bf0dfc104766591c"
    ],
    "x": 955,
    "y": 2780,
    "wires": [
      [
        "abdd76c3d2b92e76"
      ]
    ]
  },
  {
    "id": "abdd76c3d2b92e76",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor63', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 2780,
    "wires": [
      [
        "3f03d58d3dcc6764"
      ]
    ]
  },
  {
    "id": "7578e31923f8fd8f",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 2780,
    "wires": []
  },
  {
    "id": "3f03d58d3dcc6764",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 2780,
    "wires": [
      [
        "7578e31923f8fd8f",
        "7d4bdff95c319f70"
      ]
    ]
  },
  {
    "id": "7d4bdff95c319f70",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 2780,
    "wires": []
  },
  {
    "id": "0409b653c2e2577a",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 2820,
    "wires": [
      [
        "cc9e8a00f852b487"
      ]
    ]
  },
  {
    "id": "e47e191a5acb9de1",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 2820,
    "wires": [
      [
        "461f3736f3b9e530"
      ]
    ]
  },
  {
    "id": "461f3736f3b9e530",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "50372f0d913c3b0e"
    ],
    "x": 875,
    "y": 2820,
    "wires": []
  },
  {
    "id": "cc9e8a00f852b487",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 2820,
    "wires": [
      [
        "a8a0214e0c1dce20"
      ]
    ]
  },
  {
    "id": "a8a0214e0c1dce20",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 2820,
    "wires": [
      [
        "e47e191a5acb9de1"
      ]
    ]
  },
  {
    "id": "50372f0d913c3b0e",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "461f3736f3b9e530"
    ],
    "x": 955,
    "y": 2820,
    "wires": [
      [
        "cdea40ac0f3fcf35"
      ]
    ]
  },
  {
    "id": "cdea40ac0f3fcf35",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor64', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 2820,
    "wires": [
      [
        "2464c5c1f4d4dc55"
      ]
    ]
  },
  {
    "id": "3553f4b10bb8c2dd",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 2820,
    "wires": []
  },
  {
    "id": "2464c5c1f4d4dc55",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 2820,
    "wires": [
      [
        "3553f4b10bb8c2dd",
        "aa8dd9f418dfe0bb"
      ]
    ]
  },
  {
    "id": "aa8dd9f418dfe0bb",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 2820,
    "wires": []
  },
  {
    "id": "26b9ecdeb5b76041",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 2860,
    "wires": [
      [
        "fff2a8ae86eee268"
      ]
    ]
  },
  {
    "id": "b53c441cfeb0e6a6",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 2860,
    "wires": [
      [
        "17e066c8c93559a6"
      ]
    ]
  },
  {
    "id": "17e066c8c93559a6",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "05b9c69e5e84d7eb"
    ],
    "x": 875,
    "y": 2860,
    "wires": []
  },
  {
    "id": "fff2a8ae86eee268",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 2860,
    "wires": [
      [
        "6f3904c5ae2cf258"
      ]
    ]
  },
  {
    "id": "6f3904c5ae2cf258",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 2860,
    "wires": [
      [
        "b53c441cfeb0e6a6"
      ]
    ]
  },
  {
    "id": "05b9c69e5e84d7eb",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "17e066c8c93559a6"
    ],
    "x": 955,
    "y": 2860,
    "wires": [
      [
        "a20fd91d3e2b02b9"
      ]
    ]
  },
  {
    "id": "a20fd91d3e2b02b9",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor65', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 2860,
    "wires": [
      [
        "11ead72569d8d211"
      ]
    ]
  },
  {
    "id": "a0d647d75724407b",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 2860,
    "wires": []
  },
  {
    "id": "11ead72569d8d211",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 2860,
    "wires": [
      [
        "a0d647d75724407b",
        "39065f501221a9c4"
      ]
    ]
  },
  {
    "id": "39065f501221a9c4",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 2860,
    "wires": []
  },
  {
    "id": "87d90be623a13005",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 2900,
    "wires": [
      [
        "661e991128c69c1f"
      ]
    ]
  },
  {
    "id": "ba8dbebe788a4e37",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 2900,
    "wires": [
      [
        "6ac2d45d627534be"
      ]
    ]
  },
  {
    "id": "6ac2d45d627534be",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "c469582885aec77e"
    ],
    "x": 875,
    "y": 2900,
    "wires": []
  },
  {
    "id": "661e991128c69c1f",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 2900,
    "wires": [
      [
        "fa36de63412b0dde"
      ]
    ]
  },
  {
    "id": "fa36de63412b0dde",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 2900,
    "wires": [
      [
        "ba8dbebe788a4e37"
      ]
    ]
  },
  {
    "id": "c469582885aec77e",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "6ac2d45d627534be"
    ],
    "x": 955,
    "y": 2900,
    "wires": [
      [
        "8278fd88dfdb2475"
      ]
    ]
  },
  {
    "id": "8278fd88dfdb2475",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor66', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 2900,
    "wires": [
      [
        "b0e52edb5437ab95"
      ]
    ]
  },
  {
    "id": "c3ad7af0c56864d4",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 2900,
    "wires": []
  },
  {
    "id": "b0e52edb5437ab95",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 2900,
    "wires": [
      [
        "c3ad7af0c56864d4",
        "429f4368dc85b8e6"
      ]
    ]
  },
  {
    "id": "429f4368dc85b8e6",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 2900,
    "wires": []
  },
  {
    "id": "bf7d0f6e9fe7f1fc",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 2940,
    "wires": [
      [
        "ccd02949e3603561"
      ]
    ]
  },
  {
    "id": "2c3fb53263389b78",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 2940,
    "wires": [
      [
        "969f1ec8e21a1793"
      ]
    ]
  },
  {
    "id": "969f1ec8e21a1793",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "161912b71ff6db2e"
    ],
    "x": 875,
    "y": 2940,
    "wires": []
  },
  {
    "id": "ccd02949e3603561",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 2940,
    "wires": [
      [
        "0fc6ec6209c9e2c7"
      ]
    ]
  },
  {
    "id": "0fc6ec6209c9e2c7",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 2940,
    "wires": [
      [
        "2c3fb53263389b78"
      ]
    ]
  },
  {
    "id": "161912b71ff6db2e",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "969f1ec8e21a1793"
    ],
    "x": 955,
    "y": 2940,
    "wires": [
      [
        "ce35055fcc7c60f2"
      ]
    ]
  },
  {
    "id": "ce35055fcc7c60f2",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor67', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 2940,
    "wires": [
      [
        "6f9b69b2e51c9800"
      ]
    ]
  },
  {
    "id": "5d471a807dad8ba5",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 2940,
    "wires": []
  },
  {
    "id": "6f9b69b2e51c9800",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 2940,
    "wires": [
      [
        "5d471a807dad8ba5",
        "6f83643c5f41d970"
      ]
    ]
  },
  {
    "id": "6f83643c5f41d970",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 2940,
    "wires": []
  },
  {
    "id": "6148f3c4123b6243",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 2980,
    "wires": [
      [
        "56d28053ac7463ef"
      ]
    ]
  },
  {
    "id": "43ddde9941e9a799",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 2980,
    "wires": [
      [
        "af2c1548604eb819"
      ]
    ]
  },
  {
    "id": "af2c1548604eb819",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "079048a9a457a191"
    ],
    "x": 875,
    "y": 2980,
    "wires": []
  },
  {
    "id": "56d28053ac7463ef",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 2980,
    "wires": [
      [
        "43424859506d1fce"
      ]
    ]
  },
  {
    "id": "43424859506d1fce",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 2980,
    "wires": [
      [
        "43ddde9941e9a799"
      ]
    ]
  },
  {
    "id": "079048a9a457a191",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "af2c1548604eb819"
    ],
    "x": 955,
    "y": 2980,
    "wires": [
      [
        "1ca281a31cb80de2"
      ]
    ]
  },
  {
    "id": "1ca281a31cb80de2",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor68', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 2980,
    "wires": [
      [
        "3bbe4c4006fe78df"
      ]
    ]
  },
  {
    "id": "3a4db56a8102285f",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 2980,
    "wires": []
  },
  {
    "id": "3bbe4c4006fe78df",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 2980,
    "wires": [
      [
        "3a4db56a8102285f",
        "5761b80baf2ba449"
      ]
    ]
  },
  {
    "id": "5761b80baf2ba449",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 2980,
    "wires": []
  },
  {
    "id": "0a67c1d7900de847",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 3020,
    "wires": [
      [
        "396317fce470a76b"
      ]
    ]
  },
  {
    "id": "7673b2a3f0227a0f",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 3020,
    "wires": [
      [
        "261bd5f5322988bb"
      ]
    ]
  },
  {
    "id": "261bd5f5322988bb",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "5e7f19160f692070"
    ],
    "x": 875,
    "y": 3020,
    "wires": []
  },
  {
    "id": "396317fce470a76b",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 3020,
    "wires": [
      [
        "0ce8f9ee90f49017"
      ]
    ]
  },
  {
    "id": "0ce8f9ee90f49017",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 3020,
    "wires": [
      [
        "7673b2a3f0227a0f"
      ]
    ]
  },
  {
    "id": "5e7f19160f692070",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "261bd5f5322988bb"
    ],
    "x": 955,
    "y": 3020,
    "wires": [
      [
        "e4414fb347685c8c"
      ]
    ]
  },
  {
    "id": "e4414fb347685c8c",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor69', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 3020,
    "wires": [
      [
        "a3b0ef32d0f93b8c"
      ]
    ]
  },
  {
    "id": "31411d7a399d89c7",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 3020,
    "wires": []
  },
  {
    "id": "a3b0ef32d0f93b8c",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 3020,
    "wires": [
      [
        "31411d7a399d89c7",
        "b9f04cee4d8e5cac"
      ]
    ]
  },
  {
    "id": "b9f04cee4d8e5cac",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 3020,
    "wires": []
  },
  {
    "id": "1086e97877867574",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 3060,
    "wires": [
      [
        "b0f99c59ba367ad6"
      ]
    ]
  },
  {
    "id": "9ef67559066dfbfd",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 3060,
    "wires": [
      [
        "39adb56d83867550"
      ]
    ]
  },
  {
    "id": "39adb56d83867550",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "9789408a4e5acaa2"
    ],
    "x": 875,
    "y": 3060,
    "wires": []
  },
  {
    "id": "b0f99c59ba367ad6",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 3060,
    "wires": [
      [
        "6e0e607e3fcfc3bb"
      ]
    ]
  },
  {
    "id": "6e0e607e3fcfc3bb",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 3060,
    "wires": [
      [
        "9ef67559066dfbfd"
      ]
    ]
  },
  {
    "id": "9789408a4e5acaa2",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "39adb56d83867550"
    ],
    "x": 955,
    "y": 3060,
    "wires": [
      [
        "5fb9ab4115db3cb7"
      ]
    ]
  },
  {
    "id": "5fb9ab4115db3cb7",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor70', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 3060,
    "wires": [
      [
        "83f9b9f4055ef436"
      ]
    ]
  },
  {
    "id": "312e246f37691056",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 3060,
    "wires": []
  },
  {
    "id": "83f9b9f4055ef436",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 3060,
    "wires": [
      [
        "312e246f37691056",
        "a3f84f6c22fb2511"
      ]
    ]
  },
  {
    "id": "a3f84f6c22fb2511",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 3060,
    "wires": []
  },
  {
    "id": "7e107d0ec888df0a",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 3140,
    "wires": [
      [
        "fe2f4c298d6631dc"
      ]
    ]
  },
  {
    "id": "cb527681720f7da8",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 3140,
    "wires": [
      [
        "1b57f2c39055db9d"
      ]
    ]
  },
  {
    "id": "1b57f2c39055db9d",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "74192e19bdedfd21"
    ],
    "x": 875,
    "y": 3140,
    "wires": []
  },
  {
    "id": "fe2f4c298d6631dc",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 3140,
    "wires": [
      [
        "1105657d0159f596"
      ]
    ]
  },
  {
    "id": "15e3047542bd10a1",
    "type": "comment",
    "z": "e61d7807.20aac8",
    "name": "71-80",
    "info": "",
    "x": 70,
    "y": 3100,
    "wires": []
  },
  {
    "id": "1105657d0159f596",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 3140,
    "wires": [
      [
        "cb527681720f7da8"
      ]
    ]
  },
  {
    "id": "74192e19bdedfd21",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "1b57f2c39055db9d"
    ],
    "x": 955,
    "y": 3140,
    "wires": [
      [
        "255d20cb5ac57945"
      ]
    ]
  },
  {
    "id": "255d20cb5ac57945",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor71', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 3140,
    "wires": [
      [
        "5076b87c28406609"
      ]
    ]
  },
  {
    "id": "1a959bafe87e0837",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 3140,
    "wires": []
  },
  {
    "id": "5076b87c28406609",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 3140,
    "wires": [
      [
        "1a959bafe87e0837",
        "6e044e35356707a6"
      ]
    ]
  },
  {
    "id": "6e044e35356707a6",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 3140,
    "wires": []
  },
  {
    "id": "d88a6f42bd601133",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 3180,
    "wires": [
      [
        "c03f04f8f743848f"
      ]
    ]
  },
  {
    "id": "f1461e6d37b0c278",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 3180,
    "wires": [
      [
        "a49ea047389b63e2"
      ]
    ]
  },
  {
    "id": "a49ea047389b63e2",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "c4dde291e7b2f2ac"
    ],
    "x": 875,
    "y": 3180,
    "wires": []
  },
  {
    "id": "c03f04f8f743848f",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 3180,
    "wires": [
      [
        "4d48753bcca7fe02"
      ]
    ]
  },
  {
    "id": "4d48753bcca7fe02",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 3180,
    "wires": [
      [
        "f1461e6d37b0c278"
      ]
    ]
  },
  {
    "id": "c4dde291e7b2f2ac",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "a49ea047389b63e2"
    ],
    "x": 955,
    "y": 3180,
    "wires": [
      [
        "a1aadbcdb7b16c2e"
      ]
    ]
  },
  {
    "id": "a1aadbcdb7b16c2e",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor72', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 3180,
    "wires": [
      [
        "b6b12281e7d04e79"
      ]
    ]
  },
  {
    "id": "06bb9411495f708c",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 3180,
    "wires": []
  },
  {
    "id": "b6b12281e7d04e79",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 3180,
    "wires": [
      [
        "06bb9411495f708c",
        "3a3f6b85c2bbfa3a"
      ]
    ]
  },
  {
    "id": "3a3f6b85c2bbfa3a",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 3180,
    "wires": []
  },
  {
    "id": "4b6e5234e3df8f27",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 3220,
    "wires": [
      [
        "39166d72dcccd94e"
      ]
    ]
  },
  {
    "id": "6ee570c64bd05487",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 3220,
    "wires": [
      [
        "b252ef6e7a50ba3a"
      ]
    ]
  },
  {
    "id": "b252ef6e7a50ba3a",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "c2a6da06964c13e8"
    ],
    "x": 875,
    "y": 3220,
    "wires": []
  },
  {
    "id": "39166d72dcccd94e",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 3220,
    "wires": [
      [
        "f0c7ed69f597d084"
      ]
    ]
  },
  {
    "id": "f0c7ed69f597d084",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 3220,
    "wires": [
      [
        "6ee570c64bd05487"
      ]
    ]
  },
  {
    "id": "c2a6da06964c13e8",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "b252ef6e7a50ba3a"
    ],
    "x": 955,
    "y": 3220,
    "wires": [
      [
        "fb94a9e015cceab9"
      ]
    ]
  },
  {
    "id": "fb94a9e015cceab9",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor73', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 3220,
    "wires": [
      [
        "5d0720d8581266ea"
      ]
    ]
  },
  {
    "id": "c808e690b72c193a",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 3220,
    "wires": []
  },
  {
    "id": "5d0720d8581266ea",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 3220,
    "wires": [
      [
        "c808e690b72c193a",
        "0111020610fa955b"
      ]
    ]
  },
  {
    "id": "0111020610fa955b",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 3220,
    "wires": []
  },
  {
    "id": "5a97dc38190f4dec",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 3260,
    "wires": [
      [
        "ed6978b39cb2b9ab"
      ]
    ]
  },
  {
    "id": "3d85709a6ce2c176",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 3260,
    "wires": [
      [
        "e51b7f1bd2a6094a"
      ]
    ]
  },
  {
    "id": "e51b7f1bd2a6094a",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "a6c9fd14c0c9a414"
    ],
    "x": 875,
    "y": 3260,
    "wires": []
  },
  {
    "id": "ed6978b39cb2b9ab",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 3260,
    "wires": [
      [
        "abda21ca898c76ef"
      ]
    ]
  },
  {
    "id": "abda21ca898c76ef",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 3260,
    "wires": [
      [
        "3d85709a6ce2c176"
      ]
    ]
  },
  {
    "id": "a6c9fd14c0c9a414",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "e51b7f1bd2a6094a"
    ],
    "x": 955,
    "y": 3260,
    "wires": [
      [
        "41f817ad710fe3ce"
      ]
    ]
  },
  {
    "id": "41f817ad710fe3ce",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor74', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 3260,
    "wires": [
      [
        "faf813aac175cfe2"
      ]
    ]
  },
  {
    "id": "17a87e5c8acd4ae4",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 3260,
    "wires": []
  },
  {
    "id": "faf813aac175cfe2",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 3260,
    "wires": [
      [
        "17a87e5c8acd4ae4",
        "71ad236451e753e8"
      ]
    ]
  },
  {
    "id": "71ad236451e753e8",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 3260,
    "wires": []
  },
  {
    "id": "2e13fa8468741258",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 3300,
    "wires": [
      [
        "e1c50b8a3fcb5d95"
      ]
    ]
  },
  {
    "id": "47c949b67dea26a1",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 3300,
    "wires": [
      [
        "346c66681c0baf9b"
      ]
    ]
  },
  {
    "id": "346c66681c0baf9b",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "c89292f29a693b66"
    ],
    "x": 875,
    "y": 3300,
    "wires": []
  },
  {
    "id": "e1c50b8a3fcb5d95",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 3300,
    "wires": [
      [
        "0ce3a00a7777d00a"
      ]
    ]
  },
  {
    "id": "0ce3a00a7777d00a",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 3300,
    "wires": [
      [
        "47c949b67dea26a1"
      ]
    ]
  },
  {
    "id": "c89292f29a693b66",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "346c66681c0baf9b"
    ],
    "x": 955,
    "y": 3300,
    "wires": [
      [
        "719cc032403334c0"
      ]
    ]
  },
  {
    "id": "719cc032403334c0",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor75', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 3300,
    "wires": [
      [
        "6a1e504f1d67fb23"
      ]
    ]
  },
  {
    "id": "ddc1f7364b96e581",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 3300,
    "wires": []
  },
  {
    "id": "6a1e504f1d67fb23",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 3300,
    "wires": [
      [
        "ddc1f7364b96e581",
        "7f67eb463ba1b280"
      ]
    ]
  },
  {
    "id": "7f67eb463ba1b280",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 3300,
    "wires": []
  },
  {
    "id": "6151ae3d38ecae46",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 3340,
    "wires": [
      [
        "170548ef3a7db8b3"
      ]
    ]
  },
  {
    "id": "1f96afacd90c7e38",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 3340,
    "wires": [
      [
        "3f4eb054f3ccb509"
      ]
    ]
  },
  {
    "id": "3f4eb054f3ccb509",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "d793e443e59f4e71"
    ],
    "x": 875,
    "y": 3340,
    "wires": []
  },
  {
    "id": "170548ef3a7db8b3",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 3340,
    "wires": [
      [
        "85a3aa2af7d09242"
      ]
    ]
  },
  {
    "id": "85a3aa2af7d09242",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 3340,
    "wires": [
      [
        "1f96afacd90c7e38"
      ]
    ]
  },
  {
    "id": "d793e443e59f4e71",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "3f4eb054f3ccb509"
    ],
    "x": 955,
    "y": 3340,
    "wires": [
      [
        "d80abd689a6ecc8a"
      ]
    ]
  },
  {
    "id": "d80abd689a6ecc8a",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor76', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 3340,
    "wires": [
      [
        "e7f3089e2a0e0fb8"
      ]
    ]
  },
  {
    "id": "7a954dd0014430de",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 3340,
    "wires": []
  },
  {
    "id": "e7f3089e2a0e0fb8",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 3340,
    "wires": [
      [
        "7a954dd0014430de",
        "25f1d17c4003a756"
      ]
    ]
  },
  {
    "id": "25f1d17c4003a756",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 3340,
    "wires": []
  },
  {
    "id": "edfc3c8743a184a3",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 3380,
    "wires": [
      [
        "e6b5f23917f979c6"
      ]
    ]
  },
  {
    "id": "271865e5901794f5",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 3380,
    "wires": [
      [
        "5b84c7236077b7c5"
      ]
    ]
  },
  {
    "id": "5b84c7236077b7c5",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "a60ec65fa30f518a"
    ],
    "x": 875,
    "y": 3380,
    "wires": []
  },
  {
    "id": "e6b5f23917f979c6",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 3380,
    "wires": [
      [
        "3bc8c53d336d6a2f"
      ]
    ]
  },
  {
    "id": "3bc8c53d336d6a2f",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 3380,
    "wires": [
      [
        "271865e5901794f5"
      ]
    ]
  },
  {
    "id": "a60ec65fa30f518a",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "5b84c7236077b7c5"
    ],
    "x": 955,
    "y": 3380,
    "wires": [
      [
        "65ddfefe1eb0fea2"
      ]
    ]
  },
  {
    "id": "65ddfefe1eb0fea2",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor77', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 3380,
    "wires": [
      [
        "743e278ca213de3d"
      ]
    ]
  },
  {
    "id": "b170185d402ed24f",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 3380,
    "wires": []
  },
  {
    "id": "743e278ca213de3d",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 3380,
    "wires": [
      [
        "b170185d402ed24f",
        "225bbea991088a4a"
      ]
    ]
  },
  {
    "id": "225bbea991088a4a",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 3380,
    "wires": []
  },
  {
    "id": "70e65f1ce58c1a09",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 3420,
    "wires": [
      [
        "134ceae6c2ca54eb"
      ]
    ]
  },
  {
    "id": "f2793dbda6a6a481",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 3420,
    "wires": [
      [
        "6261483a2695e888"
      ]
    ]
  },
  {
    "id": "6261483a2695e888",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "72d2d8f1e081762e"
    ],
    "x": 875,
    "y": 3420,
    "wires": []
  },
  {
    "id": "134ceae6c2ca54eb",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 3420,
    "wires": [
      [
        "a6a55e24b1f6a511"
      ]
    ]
  },
  {
    "id": "a6a55e24b1f6a511",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 3420,
    "wires": [
      [
        "f2793dbda6a6a481"
      ]
    ]
  },
  {
    "id": "72d2d8f1e081762e",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "6261483a2695e888"
    ],
    "x": 955,
    "y": 3420,
    "wires": [
      [
        "bda77e08a8f21f2a"
      ]
    ]
  },
  {
    "id": "bda77e08a8f21f2a",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor78', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 3420,
    "wires": [
      [
        "6cd19f55c2d84a5d"
      ]
    ]
  },
  {
    "id": "5cc82c9fb2da017d",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 3420,
    "wires": []
  },
  {
    "id": "6cd19f55c2d84a5d",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 3420,
    "wires": [
      [
        "5cc82c9fb2da017d",
        "5e4af3f431711103"
      ]
    ]
  },
  {
    "id": "5e4af3f431711103",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 3420,
    "wires": []
  },
  {
    "id": "0a2363ac7b322dee",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 3460,
    "wires": [
      [
        "a394d36046ef0932"
      ]
    ]
  },
  {
    "id": "32f925ca30e3c798",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 3460,
    "wires": [
      [
        "ec848a63a9adbf34"
      ]
    ]
  },
  {
    "id": "ec848a63a9adbf34",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "dddeec7003ed8985"
    ],
    "x": 875,
    "y": 3460,
    "wires": []
  },
  {
    "id": "a394d36046ef0932",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 3460,
    "wires": [
      [
        "b7ca89e653d96d79"
      ]
    ]
  },
  {
    "id": "b7ca89e653d96d79",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 3460,
    "wires": [
      [
        "32f925ca30e3c798"
      ]
    ]
  },
  {
    "id": "dddeec7003ed8985",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "ec848a63a9adbf34"
    ],
    "x": 955,
    "y": 3460,
    "wires": [
      [
        "c097ee82594c814b"
      ]
    ]
  },
  {
    "id": "c097ee82594c814b",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor79', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 3460,
    "wires": [
      [
        "e858853fafbc6e8b"
      ]
    ]
  },
  {
    "id": "5db8f3df8b1fd035",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 3460,
    "wires": []
  },
  {
    "id": "e858853fafbc6e8b",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 3460,
    "wires": [
      [
        "5db8f3df8b1fd035",
        "b175dfaa8e14975c"
      ]
    ]
  },
  {
    "id": "b175dfaa8e14975c",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 3460,
    "wires": []
  },
  {
    "id": "395a9011fadc590e",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 3500,
    "wires": [
      [
        "124ff8b6e715f24b"
      ]
    ]
  },
  {
    "id": "1fab05fe8d3ac070",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 3500,
    "wires": [
      [
        "ef94bc0faebb6be2"
      ]
    ]
  },
  {
    "id": "ef94bc0faebb6be2",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "0323ccb8d0824026"
    ],
    "x": 875,
    "y": 3500,
    "wires": []
  },
  {
    "id": "124ff8b6e715f24b",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 3500,
    "wires": [
      [
        "ab2ea278bf564a7b"
      ]
    ]
  },
  {
    "id": "ab2ea278bf564a7b",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 3500,
    "wires": [
      [
        "1fab05fe8d3ac070"
      ]
    ]
  },
  {
    "id": "0323ccb8d0824026",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "ef94bc0faebb6be2"
    ],
    "x": 955,
    "y": 3500,
    "wires": [
      [
        "92e1e8fa06fdd8b4"
      ]
    ]
  },
  {
    "id": "92e1e8fa06fdd8b4",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor80', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 3500,
    "wires": [
      [
        "c7b8850dfd971839"
      ]
    ]
  },
  {
    "id": "2c575ffef04875d6",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 3500,
    "wires": []
  },
  {
    "id": "c7b8850dfd971839",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 3500,
    "wires": [
      [
        "2c575ffef04875d6",
        "3240e6501b974809"
      ]
    ]
  },
  {
    "id": "3240e6501b974809",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 3500,
    "wires": []
  },
  {
    "id": "5d518b4e9f79d87e",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 3580,
    "wires": [
      [
        "b745b977a06ecd26"
      ]
    ]
  },
  {
    "id": "ee58db25d30bb429",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 3580,
    "wires": [
      [
        "ddf2994a02a8d550"
      ]
    ]
  },
  {
    "id": "ddf2994a02a8d550",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "804a684bfe746628"
    ],
    "x": 875,
    "y": 3580,
    "wires": []
  },
  {
    "id": "b745b977a06ecd26",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 3580,
    "wires": [
      [
        "ab7f127693e4dcbc"
      ]
    ]
  },
  {
    "id": "683a9831c3e11286",
    "type": "comment",
    "z": "e61d7807.20aac8",
    "name": "81-90",
    "info": "",
    "x": 70,
    "y": 3540,
    "wires": []
  },
  {
    "id": "ab7f127693e4dcbc",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 3580,
    "wires": [
      [
        "ee58db25d30bb429"
      ]
    ]
  },
  {
    "id": "804a684bfe746628",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "ddf2994a02a8d550"
    ],
    "x": 955,
    "y": 3580,
    "wires": [
      [
        "9b3a40e653ec9fb1"
      ]
    ]
  },
  {
    "id": "9b3a40e653ec9fb1",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor81', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 3580,
    "wires": [
      [
        "1f8fe551b0ad30ad"
      ]
    ]
  },
  {
    "id": "aa528f51af9ba24f",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 3580,
    "wires": []
  },
  {
    "id": "1f8fe551b0ad30ad",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 3580,
    "wires": [
      [
        "aa528f51af9ba24f",
        "fad02082fb7af97d"
      ]
    ]
  },
  {
    "id": "fad02082fb7af97d",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 3580,
    "wires": []
  },
  {
    "id": "9415e1028c8aad02",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 3620,
    "wires": [
      [
        "df646f517891c774"
      ]
    ]
  },
  {
    "id": "73e8f01f8b309bcb",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 3620,
    "wires": [
      [
        "b31a0999e474e154"
      ]
    ]
  },
  {
    "id": "b31a0999e474e154",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "84c33d24050df5e9"
    ],
    "x": 875,
    "y": 3620,
    "wires": []
  },
  {
    "id": "df646f517891c774",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 3620,
    "wires": [
      [
        "f270bd26b0a8d185"
      ]
    ]
  },
  {
    "id": "f270bd26b0a8d185",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 3620,
    "wires": [
      [
        "73e8f01f8b309bcb"
      ]
    ]
  },
  {
    "id": "84c33d24050df5e9",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "b31a0999e474e154"
    ],
    "x": 955,
    "y": 3620,
    "wires": [
      [
        "dd5b47fecde3762f"
      ]
    ]
  },
  {
    "id": "dd5b47fecde3762f",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor82', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 3620,
    "wires": [
      [
        "a834ac3a36a4accf"
      ]
    ]
  },
  {
    "id": "0151b9e42533320d",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 3620,
    "wires": []
  },
  {
    "id": "a834ac3a36a4accf",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 3620,
    "wires": [
      [
        "0151b9e42533320d",
        "90542dd1b19ee2a7"
      ]
    ]
  },
  {
    "id": "90542dd1b19ee2a7",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 3620,
    "wires": []
  },
  {
    "id": "87c2aa01053cf3a7",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 3660,
    "wires": [
      [
        "1de04d5d578ea8ab"
      ]
    ]
  },
  {
    "id": "cad5713619dda67e",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 3660,
    "wires": [
      [
        "aeed58362be5f881"
      ]
    ]
  },
  {
    "id": "aeed58362be5f881",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "423d82215b86de44"
    ],
    "x": 875,
    "y": 3660,
    "wires": []
  },
  {
    "id": "1de04d5d578ea8ab",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 3660,
    "wires": [
      [
        "1e69af68dbcae18f"
      ]
    ]
  },
  {
    "id": "1e69af68dbcae18f",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 3660,
    "wires": [
      [
        "cad5713619dda67e"
      ]
    ]
  },
  {
    "id": "423d82215b86de44",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "aeed58362be5f881"
    ],
    "x": 955,
    "y": 3660,
    "wires": [
      [
        "5cbc997572f7bf54"
      ]
    ]
  },
  {
    "id": "5cbc997572f7bf54",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor83', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 3660,
    "wires": [
      [
        "f0cfcf0899f2b655"
      ]
    ]
  },
  {
    "id": "3033f5f7cb36257d",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 3660,
    "wires": []
  },
  {
    "id": "f0cfcf0899f2b655",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 3660,
    "wires": [
      [
        "3033f5f7cb36257d",
        "084d68e9e9aed68f"
      ]
    ]
  },
  {
    "id": "084d68e9e9aed68f",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 3660,
    "wires": []
  },
  {
    "id": "eb24dc047b6edd53",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 3700,
    "wires": [
      [
        "5d2bc7fe73f7d3c9"
      ]
    ]
  },
  {
    "id": "897ef98233b738e9",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 3700,
    "wires": [
      [
        "fcd504409937b6fe"
      ]
    ]
  },
  {
    "id": "fcd504409937b6fe",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "962753b15f31b13d"
    ],
    "x": 875,
    "y": 3700,
    "wires": []
  },
  {
    "id": "5d2bc7fe73f7d3c9",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 3700,
    "wires": [
      [
        "407261af030753c9"
      ]
    ]
  },
  {
    "id": "407261af030753c9",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 3700,
    "wires": [
      [
        "897ef98233b738e9"
      ]
    ]
  },
  {
    "id": "962753b15f31b13d",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fcd504409937b6fe"
    ],
    "x": 955,
    "y": 3700,
    "wires": [
      [
        "64e637d7de29449d"
      ]
    ]
  },
  {
    "id": "64e637d7de29449d",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor84', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 3700,
    "wires": [
      [
        "edfc3ef34a4fbb19"
      ]
    ]
  },
  {
    "id": "51acd899c6f20fcd",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 3700,
    "wires": []
  },
  {
    "id": "edfc3ef34a4fbb19",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 3700,
    "wires": [
      [
        "51acd899c6f20fcd",
        "a504f95efcba28d9"
      ]
    ]
  },
  {
    "id": "a504f95efcba28d9",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 3700,
    "wires": []
  },
  {
    "id": "2463d39503704fb2",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 3740,
    "wires": [
      [
        "904a71c645e222bb"
      ]
    ]
  },
  {
    "id": "47036d8c50946bb8",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 3740,
    "wires": [
      [
        "d82763a2154fa55a"
      ]
    ]
  },
  {
    "id": "d82763a2154fa55a",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "fdfabb4c626c206f"
    ],
    "x": 875,
    "y": 3740,
    "wires": []
  },
  {
    "id": "904a71c645e222bb",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 3740,
    "wires": [
      [
        "aa27d674442e9005"
      ]
    ]
  },
  {
    "id": "aa27d674442e9005",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 3740,
    "wires": [
      [
        "47036d8c50946bb8"
      ]
    ]
  },
  {
    "id": "fdfabb4c626c206f",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "d82763a2154fa55a"
    ],
    "x": 955,
    "y": 3740,
    "wires": [
      [
        "e5f1c2a0a6b285f5"
      ]
    ]
  },
  {
    "id": "e5f1c2a0a6b285f5",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor85', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 3740,
    "wires": [
      [
        "1acdfe9c21c44d4b"
      ]
    ]
  },
  {
    "id": "7efbbce9a8b1c9d3",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 3740,
    "wires": []
  },
  {
    "id": "1acdfe9c21c44d4b",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 3740,
    "wires": [
      [
        "7efbbce9a8b1c9d3",
        "39b291f7cefe7d29"
      ]
    ]
  },
  {
    "id": "39b291f7cefe7d29",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 3740,
    "wires": []
  },
  {
    "id": "257ba074e569730d",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 3780,
    "wires": [
      [
        "dd81e2233ee9f1b2"
      ]
    ]
  },
  {
    "id": "c5c91217bb0913fb",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 3780,
    "wires": [
      [
        "4f0b7dfa1595a97e"
      ]
    ]
  },
  {
    "id": "4f0b7dfa1595a97e",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "5cfdfe2b25991ce2"
    ],
    "x": 875,
    "y": 3780,
    "wires": []
  },
  {
    "id": "dd81e2233ee9f1b2",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 3780,
    "wires": [
      [
        "ce3d5560648a2f1b"
      ]
    ]
  },
  {
    "id": "ce3d5560648a2f1b",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 3780,
    "wires": [
      [
        "c5c91217bb0913fb"
      ]
    ]
  },
  {
    "id": "5cfdfe2b25991ce2",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "4f0b7dfa1595a97e"
    ],
    "x": 955,
    "y": 3780,
    "wires": [
      [
        "296ee3a5cb81c712"
      ]
    ]
  },
  {
    "id": "296ee3a5cb81c712",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor86', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 3780,
    "wires": [
      [
        "471b4558f232fd9d"
      ]
    ]
  },
  {
    "id": "00f5091405f88025",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 3780,
    "wires": []
  },
  {
    "id": "471b4558f232fd9d",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 3780,
    "wires": [
      [
        "00f5091405f88025",
        "04b12b48f5d16826"
      ]
    ]
  },
  {
    "id": "04b12b48f5d16826",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 3780,
    "wires": []
  },
  {
    "id": "21fd9e15f2b1371e",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 3820,
    "wires": [
      [
        "c515a154e78d022a"
      ]
    ]
  },
  {
    "id": "6ad9c9cc7795e82e",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 3820,
    "wires": [
      [
        "a3c491a9cf888ff2"
      ]
    ]
  },
  {
    "id": "a3c491a9cf888ff2",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "89f290a292d40361"
    ],
    "x": 875,
    "y": 3820,
    "wires": []
  },
  {
    "id": "c515a154e78d022a",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 3820,
    "wires": [
      [
        "c172c2e2f3db51fc"
      ]
    ]
  },
  {
    "id": "c172c2e2f3db51fc",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 3820,
    "wires": [
      [
        "6ad9c9cc7795e82e"
      ]
    ]
  },
  {
    "id": "89f290a292d40361",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "a3c491a9cf888ff2"
    ],
    "x": 955,
    "y": 3820,
    "wires": [
      [
        "9e507411f6adfdf3"
      ]
    ]
  },
  {
    "id": "9e507411f6adfdf3",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor87', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 3820,
    "wires": [
      [
        "f55f2f726cd9056d"
      ]
    ]
  },
  {
    "id": "eee77909ea7ca333",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 3820,
    "wires": []
  },
  {
    "id": "f55f2f726cd9056d",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 3820,
    "wires": [
      [
        "eee77909ea7ca333",
        "93b4e3a01db32547"
      ]
    ]
  },
  {
    "id": "93b4e3a01db32547",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 3820,
    "wires": []
  },
  {
    "id": "eef069f579f4c94a",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 3860,
    "wires": [
      [
        "4ad7ff9125b0ee38"
      ]
    ]
  },
  {
    "id": "fb2f37c94e86f6c7",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 3860,
    "wires": [
      [
        "cddc85ff73b96036"
      ]
    ]
  },
  {
    "id": "cddc85ff73b96036",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "0f80aa40fc9ffe2c"
    ],
    "x": 875,
    "y": 3860,
    "wires": []
  },
  {
    "id": "4ad7ff9125b0ee38",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 3860,
    "wires": [
      [
        "76d792f244bb66a4"
      ]
    ]
  },
  {
    "id": "76d792f244bb66a4",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 3860,
    "wires": [
      [
        "fb2f37c94e86f6c7"
      ]
    ]
  },
  {
    "id": "0f80aa40fc9ffe2c",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "cddc85ff73b96036"
    ],
    "x": 955,
    "y": 3860,
    "wires": [
      [
        "2d41ccb677d63f35"
      ]
    ]
  },
  {
    "id": "2d41ccb677d63f35",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor88', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 3860,
    "wires": [
      [
        "81a9212c4576165b"
      ]
    ]
  },
  {
    "id": "76f62704801ff40c",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 3860,
    "wires": []
  },
  {
    "id": "81a9212c4576165b",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 3860,
    "wires": [
      [
        "76f62704801ff40c",
        "d37bda4d06f92793"
      ]
    ]
  },
  {
    "id": "d37bda4d06f92793",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 3860,
    "wires": []
  },
  {
    "id": "a9ab4ce126052db4",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 3900,
    "wires": [
      [
        "1a2bab995306d224"
      ]
    ]
  },
  {
    "id": "83f64b9bc82fba01",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 3900,
    "wires": [
      [
        "af700b022e473af1"
      ]
    ]
  },
  {
    "id": "af700b022e473af1",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "ddd834290da5b415"
    ],
    "x": 875,
    "y": 3900,
    "wires": []
  },
  {
    "id": "1a2bab995306d224",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 3900,
    "wires": [
      [
        "10f7442673104d07"
      ]
    ]
  },
  {
    "id": "10f7442673104d07",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 3900,
    "wires": [
      [
        "83f64b9bc82fba01"
      ]
    ]
  },
  {
    "id": "ddd834290da5b415",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "af700b022e473af1"
    ],
    "x": 955,
    "y": 3900,
    "wires": [
      [
        "345de4bbfc82947c"
      ]
    ]
  },
  {
    "id": "345de4bbfc82947c",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor89', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 3900,
    "wires": [
      [
        "f7ae9f02d85161e1"
      ]
    ]
  },
  {
    "id": "839284909d81afe8",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 3900,
    "wires": []
  },
  {
    "id": "f7ae9f02d85161e1",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 3900,
    "wires": [
      [
        "839284909d81afe8",
        "5c0160dec9a7815c"
      ]
    ]
  },
  {
    "id": "5c0160dec9a7815c",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 3900,
    "wires": []
  },
  {
    "id": "65659ba66ae07e0e",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 3940,
    "wires": [
      [
        "58463df4913f5ddd"
      ]
    ]
  },
  {
    "id": "979252fbb33478bf",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 3940,
    "wires": [
      [
        "1d1822a9f8e7ba2a"
      ]
    ]
  },
  {
    "id": "1d1822a9f8e7ba2a",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "e048e52c84c64d28"
    ],
    "x": 875,
    "y": 3940,
    "wires": []
  },
  {
    "id": "58463df4913f5ddd",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 3940,
    "wires": [
      [
        "28a7bf4fd8468011"
      ]
    ]
  },
  {
    "id": "28a7bf4fd8468011",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 3940,
    "wires": [
      [
        "979252fbb33478bf"
      ]
    ]
  },
  {
    "id": "e048e52c84c64d28",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "1d1822a9f8e7ba2a"
    ],
    "x": 955,
    "y": 3940,
    "wires": [
      [
        "5ea586cdfb0e02ce"
      ]
    ]
  },
  {
    "id": "5ea586cdfb0e02ce",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor90', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 3940,
    "wires": [
      [
        "7990426e4aeb78e4"
      ]
    ]
  },
  {
    "id": "0cc434cc7ec495c6",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 3940,
    "wires": []
  },
  {
    "id": "7990426e4aeb78e4",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 3940,
    "wires": [
      [
        "0cc434cc7ec495c6",
        "ac8491a953b5c23e"
      ]
    ]
  },
  {
    "id": "ac8491a953b5c23e",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 3940,
    "wires": []
  },
  {
    "id": "435babc6ed502aec",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 4020,
    "wires": [
      [
        "2e1785d5d22be474"
      ]
    ]
  },
  {
    "id": "c3cd21afaef1fe7f",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 4020,
    "wires": [
      [
        "d2095c569207cd81"
      ]
    ]
  },
  {
    "id": "d2095c569207cd81",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "0b15fdaf017d6614"
    ],
    "x": 875,
    "y": 4020,
    "wires": []
  },
  {
    "id": "2e1785d5d22be474",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 4020,
    "wires": [
      [
        "18c2e4891ca42655"
      ]
    ]
  },
  {
    "id": "0c2141bcf9553eec",
    "type": "comment",
    "z": "e61d7807.20aac8",
    "name": "91-100",
    "info": "",
    "x": 70,
    "y": 3980,
    "wires": []
  },
  {
    "id": "18c2e4891ca42655",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 4020,
    "wires": [
      [
        "c3cd21afaef1fe7f"
      ]
    ]
  },
  {
    "id": "0b15fdaf017d6614",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "d2095c569207cd81"
    ],
    "x": 955,
    "y": 4020,
    "wires": [
      [
        "a74175fd920e39d9"
      ]
    ]
  },
  {
    "id": "a74175fd920e39d9",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor91', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 4020,
    "wires": [
      [
        "33be95c508026349"
      ]
    ]
  },
  {
    "id": "b4d2cca4953f66c0",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 4020,
    "wires": []
  },
  {
    "id": "33be95c508026349",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 4020,
    "wires": [
      [
        "b4d2cca4953f66c0",
        "9ae6c92a97946d95"
      ]
    ]
  },
  {
    "id": "9ae6c92a97946d95",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 4020,
    "wires": []
  },
  {
    "id": "0cd92a9a06955fe1",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 4060,
    "wires": [
      [
        "da51ed871f465f9e"
      ]
    ]
  },
  {
    "id": "2339b67a7e50c9f5",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 4060,
    "wires": [
      [
        "575ea2580e425e6f"
      ]
    ]
  },
  {
    "id": "575ea2580e425e6f",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "820fa658a0056abc"
    ],
    "x": 875,
    "y": 4060,
    "wires": []
  },
  {
    "id": "da51ed871f465f9e",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 4060,
    "wires": [
      [
        "ec295ee44b18e5c5"
      ]
    ]
  },
  {
    "id": "ec295ee44b18e5c5",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 4060,
    "wires": [
      [
        "2339b67a7e50c9f5"
      ]
    ]
  },
  {
    "id": "820fa658a0056abc",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "575ea2580e425e6f"
    ],
    "x": 955,
    "y": 4060,
    "wires": [
      [
        "a36a6b5547f86835"
      ]
    ]
  },
  {
    "id": "a36a6b5547f86835",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor92', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 4060,
    "wires": [
      [
        "dc2ce25d0baf85f6"
      ]
    ]
  },
  {
    "id": "8e1ac6d3a9a497fe",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 4060,
    "wires": []
  },
  {
    "id": "dc2ce25d0baf85f6",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 4060,
    "wires": [
      [
        "8e1ac6d3a9a497fe",
        "aef96c511d751572"
      ]
    ]
  },
  {
    "id": "aef96c511d751572",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 4060,
    "wires": []
  },
  {
    "id": "d5449b71a97c2a51",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 4100,
    "wires": [
      [
        "fd247694b9d3ca86"
      ]
    ]
  },
  {
    "id": "d8698c32154c9176",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 4100,
    "wires": [
      [
        "374df61413542966"
      ]
    ]
  },
  {
    "id": "374df61413542966",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "31966f8f0f82216c"
    ],
    "x": 875,
    "y": 4100,
    "wires": []
  },
  {
    "id": "fd247694b9d3ca86",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 4100,
    "wires": [
      [
        "5a9fb53fce9058f6"
      ]
    ]
  },
  {
    "id": "5a9fb53fce9058f6",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 4100,
    "wires": [
      [
        "d8698c32154c9176"
      ]
    ]
  },
  {
    "id": "31966f8f0f82216c",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "374df61413542966"
    ],
    "x": 955,
    "y": 4100,
    "wires": [
      [
        "29a927551653ccda"
      ]
    ]
  },
  {
    "id": "29a927551653ccda",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor93', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 4100,
    "wires": [
      [
        "60b798c79b8f584a"
      ]
    ]
  },
  {
    "id": "bbdb2547e14b4693",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 4100,
    "wires": []
  },
  {
    "id": "60b798c79b8f584a",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 4100,
    "wires": [
      [
        "bbdb2547e14b4693",
        "c80216a769e5fec1"
      ]
    ]
  },
  {
    "id": "c80216a769e5fec1",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 4100,
    "wires": []
  },
  {
    "id": "1d6eaa4d4d73e53b",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 4140,
    "wires": [
      [
        "c75cf8c4019a887c"
      ]
    ]
  },
  {
    "id": "bb331d79b2ac9634",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 4140,
    "wires": [
      [
        "6e83ac9c95491eb8"
      ]
    ]
  },
  {
    "id": "6e83ac9c95491eb8",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "548d421d1ea554b6"
    ],
    "x": 875,
    "y": 4140,
    "wires": []
  },
  {
    "id": "c75cf8c4019a887c",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 4140,
    "wires": [
      [
        "1e99c64ffb209784"
      ]
    ]
  },
  {
    "id": "1e99c64ffb209784",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 4140,
    "wires": [
      [
        "bb331d79b2ac9634"
      ]
    ]
  },
  {
    "id": "548d421d1ea554b6",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "6e83ac9c95491eb8"
    ],
    "x": 955,
    "y": 4140,
    "wires": [
      [
        "d7302718856fa91a"
      ]
    ]
  },
  {
    "id": "d7302718856fa91a",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor94', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 4140,
    "wires": [
      [
        "a480f8eec3a2b618"
      ]
    ]
  },
  {
    "id": "6431b5c0565bafb2",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 4140,
    "wires": []
  },
  {
    "id": "a480f8eec3a2b618",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 4140,
    "wires": [
      [
        "6431b5c0565bafb2",
        "4afe9beeec45efd7"
      ]
    ]
  },
  {
    "id": "4afe9beeec45efd7",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 4140,
    "wires": []
  },
  {
    "id": "bd527f0511536d3c",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 4180,
    "wires": [
      [
        "f28b4f13ee78f174"
      ]
    ]
  },
  {
    "id": "df65e881c0a0b099",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 4180,
    "wires": [
      [
        "0d0f851508c5f762"
      ]
    ]
  },
  {
    "id": "0d0f851508c5f762",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "7c810384a7b7990c"
    ],
    "x": 875,
    "y": 4180,
    "wires": []
  },
  {
    "id": "f28b4f13ee78f174",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 4180,
    "wires": [
      [
        "7dfd5c6cd872ba54"
      ]
    ]
  },
  {
    "id": "7dfd5c6cd872ba54",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 4180,
    "wires": [
      [
        "df65e881c0a0b099"
      ]
    ]
  },
  {
    "id": "7c810384a7b7990c",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "0d0f851508c5f762"
    ],
    "x": 955,
    "y": 4180,
    "wires": [
      [
        "240df27928883750"
      ]
    ]
  },
  {
    "id": "240df27928883750",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor95', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 4180,
    "wires": [
      [
        "98b2dea7cb6f44c8"
      ]
    ]
  },
  {
    "id": "76449e19a8ea6967",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 4180,
    "wires": []
  },
  {
    "id": "98b2dea7cb6f44c8",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 4180,
    "wires": [
      [
        "76449e19a8ea6967",
        "a3f64352d6d2e8f3"
      ]
    ]
  },
  {
    "id": "a3f64352d6d2e8f3",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 4180,
    "wires": []
  },
  {
    "id": "6d347d39ad29f713",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 4220,
    "wires": [
      [
        "872a22fab7b155dd"
      ]
    ]
  },
  {
    "id": "bf4ddd70ad26a6f4",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 4220,
    "wires": [
      [
        "159e90339172183e"
      ]
    ]
  },
  {
    "id": "159e90339172183e",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "661d5c8b6407b658"
    ],
    "x": 875,
    "y": 4220,
    "wires": []
  },
  {
    "id": "872a22fab7b155dd",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 4220,
    "wires": [
      [
        "97dbff62511398ce"
      ]
    ]
  },
  {
    "id": "97dbff62511398ce",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 4220,
    "wires": [
      [
        "bf4ddd70ad26a6f4"
      ]
    ]
  },
  {
    "id": "661d5c8b6407b658",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "159e90339172183e"
    ],
    "x": 955,
    "y": 4220,
    "wires": [
      [
        "53d87fa50763463a"
      ]
    ]
  },
  {
    "id": "53d87fa50763463a",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor96', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 4220,
    "wires": [
      [
        "8305d15d49ab74de"
      ]
    ]
  },
  {
    "id": "8b9ff0c94996a92a",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 4220,
    "wires": []
  },
  {
    "id": "8305d15d49ab74de",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 4220,
    "wires": [
      [
        "8b9ff0c94996a92a",
        "03e35da3d1972dbe"
      ]
    ]
  },
  {
    "id": "03e35da3d1972dbe",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 4220,
    "wires": []
  },
  {
    "id": "8c355a7bd9cf95b5",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 4260,
    "wires": [
      [
        "e5487b9e0fad6435"
      ]
    ]
  },
  {
    "id": "03e2534bc8183314",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 4260,
    "wires": [
      [
        "b978c5c4338ae144"
      ]
    ]
  },
  {
    "id": "b978c5c4338ae144",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "cefbc92dcd24a74e"
    ],
    "x": 875,
    "y": 4260,
    "wires": []
  },
  {
    "id": "e5487b9e0fad6435",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 4260,
    "wires": [
      [
        "27c2579297587136"
      ]
    ]
  },
  {
    "id": "27c2579297587136",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 4260,
    "wires": [
      [
        "03e2534bc8183314"
      ]
    ]
  },
  {
    "id": "cefbc92dcd24a74e",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "b978c5c4338ae144"
    ],
    "x": 955,
    "y": 4260,
    "wires": [
      [
        "8f264002282f43d2"
      ]
    ]
  },
  {
    "id": "8f264002282f43d2",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor97', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 4260,
    "wires": [
      [
        "9d653e2034b74794"
      ]
    ]
  },
  {
    "id": "f4d34061259c262f",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 4260,
    "wires": []
  },
  {
    "id": "9d653e2034b74794",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 4260,
    "wires": [
      [
        "f4d34061259c262f",
        "3e70ab760beca67d"
      ]
    ]
  },
  {
    "id": "3e70ab760beca67d",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 4260,
    "wires": []
  },
  {
    "id": "241c05889eb3c02f",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 4300,
    "wires": [
      [
        "625c73dc59bfa0e7"
      ]
    ]
  },
  {
    "id": "8b1c945ae4d9aaf1",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 4300,
    "wires": [
      [
        "d453f0b23003f506"
      ]
    ]
  },
  {
    "id": "d453f0b23003f506",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "6dbce586adfe785a"
    ],
    "x": 875,
    "y": 4300,
    "wires": []
  },
  {
    "id": "625c73dc59bfa0e7",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 4300,
    "wires": [
      [
        "a5bbcc836867b6fb"
      ]
    ]
  },
  {
    "id": "a5bbcc836867b6fb",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 4300,
    "wires": [
      [
        "8b1c945ae4d9aaf1"
      ]
    ]
  },
  {
    "id": "6dbce586adfe785a",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "d453f0b23003f506"
    ],
    "x": 955,
    "y": 4300,
    "wires": [
      [
        "ce968a9b0fc0dfe3"
      ]
    ]
  },
  {
    "id": "ce968a9b0fc0dfe3",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor98', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 4300,
    "wires": [
      [
        "0a42821c3bcd86a3"
      ]
    ]
  },
  {
    "id": "4333c5606b2404f4",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 4300,
    "wires": []
  },
  {
    "id": "0a42821c3bcd86a3",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 4300,
    "wires": [
      [
        "4333c5606b2404f4",
        "8dc2da4f8543e41f"
      ]
    ]
  },
  {
    "id": "8dc2da4f8543e41f",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 4300,
    "wires": []
  },
  {
    "id": "f5f2d99c985441b4",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 4340,
    "wires": [
      [
        "90543aa230fd31c4"
      ]
    ]
  },
  {
    "id": "df4b40d379632682",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 4340,
    "wires": [
      [
        "0d7140c8eda9b44c"
      ]
    ]
  },
  {
    "id": "0d7140c8eda9b44c",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "b1e48d06b1c464de"
    ],
    "x": 875,
    "y": 4340,
    "wires": []
  },
  {
    "id": "90543aa230fd31c4",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 4340,
    "wires": [
      [
        "899bcd75c273cee7"
      ]
    ]
  },
  {
    "id": "899bcd75c273cee7",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 4340,
    "wires": [
      [
        "df4b40d379632682"
      ]
    ]
  },
  {
    "id": "b1e48d06b1c464de",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "0d7140c8eda9b44c"
    ],
    "x": 955,
    "y": 4340,
    "wires": [
      [
        "67a2eea7cb0cc9fa"
      ]
    ]
  },
  {
    "id": "67a2eea7cb0cc9fa",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor99', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 4340,
    "wires": [
      [
        "8f3a2d0371351674"
      ]
    ]
  },
  {
    "id": "a07704ec5d99c007",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 4340,
    "wires": []
  },
  {
    "id": "8f3a2d0371351674",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 4340,
    "wires": [
      [
        "a07704ec5d99c007",
        "5597eb3510663d99"
      ]
    ]
  },
  {
    "id": "5597eb3510663d99",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 4340,
    "wires": []
  },
  {
    "id": "25a478666f3c1824",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 4380,
    "wires": [
      [
        "993fd61dacaae0b7"
      ]
    ]
  },
  {
    "id": "bd604dcf0f7bca1a",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 4380,
    "wires": [
      [
        "38ab0d5b5670b009"
      ]
    ]
  },
  {
    "id": "38ab0d5b5670b009",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "034161884c7f0640"
    ],
    "x": 875,
    "y": 4380,
    "wires": []
  },
  {
    "id": "993fd61dacaae0b7",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 4380,
    "wires": [
      [
        "86a5017441ddac60"
      ]
    ]
  },
  {
    "id": "86a5017441ddac60",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 4380,
    "wires": [
      [
        "bd604dcf0f7bca1a"
      ]
    ]
  },
  {
    "id": "034161884c7f0640",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "38ab0d5b5670b009"
    ],
    "x": 955,
    "y": 4380,
    "wires": [
      [
        "be16cf3591a6078f"
      ]
    ]
  },
  {
    "id": "be16cf3591a6078f",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor100', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 4380,
    "wires": [
      [
        "cc05c3d91ceab0f2"
      ]
    ]
  },
  {
    "id": "63c8243306fbeba5",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 4380,
    "wires": []
  },
  {
    "id": "cc05c3d91ceab0f2",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 4380,
    "wires": [
      [
        "63c8243306fbeba5",
        "656bdece4b835908"
      ]
    ]
  },
  {
    "id": "656bdece4b835908",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 4380,
    "wires": []
  },
  {
    "id": "9c8d6d2a45050eba",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 4460,
    "wires": [
      [
        "38e1044d7ae822e8"
      ]
    ]
  },
  {
    "id": "f0ccd34007a796ef",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 4460,
    "wires": [
      [
        "30bb89e2636688c3"
      ]
    ]
  },
  {
    "id": "30bb89e2636688c3",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "ed5b20a96dbc9387"
    ],
    "x": 875,
    "y": 4460,
    "wires": []
  },
  {
    "id": "38e1044d7ae822e8",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 4460,
    "wires": [
      [
        "fd196b387c982120"
      ]
    ]
  },
  {
    "id": "0babd3951e51ff2e",
    "type": "comment",
    "z": "e61d7807.20aac8",
    "name": "101-120",
    "info": "",
    "x": 80,
    "y": 4420,
    "wires": []
  },
  {
    "id": "fd196b387c982120",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 4460,
    "wires": [
      [
        "f0ccd34007a796ef"
      ]
    ]
  },
  {
    "id": "ed5b20a96dbc9387",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "30bb89e2636688c3"
    ],
    "x": 955,
    "y": 4460,
    "wires": [
      [
        "6630fdc156d19fa4"
      ]
    ]
  },
  {
    "id": "6630fdc156d19fa4",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor101', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 4460,
    "wires": [
      [
        "d4bad2e3ba4b70b7"
      ]
    ]
  },
  {
    "id": "6923c9a556b052c5",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 4460,
    "wires": []
  },
  {
    "id": "d4bad2e3ba4b70b7",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 4460,
    "wires": [
      [
        "6923c9a556b052c5",
        "b3908fe99f0a6111"
      ]
    ]
  },
  {
    "id": "b3908fe99f0a6111",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 4460,
    "wires": []
  },
  {
    "id": "043d4953b4908d99",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 4500,
    "wires": [
      [
        "c67c7b1b26f2ee61"
      ]
    ]
  },
  {
    "id": "2be1e5c3d988f4bc",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 4500,
    "wires": [
      [
        "0228a48d200f8479"
      ]
    ]
  },
  {
    "id": "0228a48d200f8479",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "7ea5bada1151d642"
    ],
    "x": 875,
    "y": 4500,
    "wires": []
  },
  {
    "id": "c67c7b1b26f2ee61",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 4500,
    "wires": [
      [
        "0e822a393b60bc80"
      ]
    ]
  },
  {
    "id": "0e822a393b60bc80",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 4500,
    "wires": [
      [
        "2be1e5c3d988f4bc"
      ]
    ]
  },
  {
    "id": "7ea5bada1151d642",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "0228a48d200f8479"
    ],
    "x": 955,
    "y": 4500,
    "wires": [
      [
        "d81f7374249cd034"
      ]
    ]
  },
  {
    "id": "d81f7374249cd034",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor102', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 4500,
    "wires": [
      [
        "8c6254fabfe45e9e"
      ]
    ]
  },
  {
    "id": "e0871c175089cf8e",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 4500,
    "wires": []
  },
  {
    "id": "8c6254fabfe45e9e",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 4500,
    "wires": [
      [
        "e0871c175089cf8e",
        "54887ab69ff6fe9f"
      ]
    ]
  },
  {
    "id": "54887ab69ff6fe9f",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 4500,
    "wires": []
  },
  {
    "id": "f86c4e2c9297efea",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 4540,
    "wires": [
      [
        "7c4a9f8ee48b1c87"
      ]
    ]
  },
  {
    "id": "e87e20e18106ad6b",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 4540,
    "wires": [
      [
        "20b3bc1f304f750a"
      ]
    ]
  },
  {
    "id": "20b3bc1f304f750a",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "9c178b82acaac188"
    ],
    "x": 875,
    "y": 4540,
    "wires": []
  },
  {
    "id": "7c4a9f8ee48b1c87",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 4540,
    "wires": [
      [
        "fed5539f3d715329"
      ]
    ]
  },
  {
    "id": "fed5539f3d715329",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 4540,
    "wires": [
      [
        "e87e20e18106ad6b"
      ]
    ]
  },
  {
    "id": "9c178b82acaac188",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "20b3bc1f304f750a"
    ],
    "x": 955,
    "y": 4540,
    "wires": [
      [
        "32fd332ae25a46d1"
      ]
    ]
  },
  {
    "id": "32fd332ae25a46d1",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor103', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 4540,
    "wires": [
      [
        "02ef86dd9514589a"
      ]
    ]
  },
  {
    "id": "f7ea69523661bf80",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 4540,
    "wires": []
  },
  {
    "id": "02ef86dd9514589a",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 4540,
    "wires": [
      [
        "f7ea69523661bf80",
        "1191da01bd8801e1"
      ]
    ]
  },
  {
    "id": "1191da01bd8801e1",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 4540,
    "wires": []
  },
  {
    "id": "a7c54d6b6c7581fd",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 4580,
    "wires": [
      [
        "05c7f07bce17b310"
      ]
    ]
  },
  {
    "id": "d605f6199c45a097",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 4580,
    "wires": [
      [
        "91f9269774c76691"
      ]
    ]
  },
  {
    "id": "91f9269774c76691",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "860e4317baa7ef75"
    ],
    "x": 875,
    "y": 4580,
    "wires": []
  },
  {
    "id": "05c7f07bce17b310",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 4580,
    "wires": [
      [
        "8e430ef38bf20a8a"
      ]
    ]
  },
  {
    "id": "8e430ef38bf20a8a",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 4580,
    "wires": [
      [
        "d605f6199c45a097"
      ]
    ]
  },
  {
    "id": "860e4317baa7ef75",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "91f9269774c76691"
    ],
    "x": 955,
    "y": 4580,
    "wires": [
      [
        "80713da42609c89a"
      ]
    ]
  },
  {
    "id": "80713da42609c89a",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor104', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 4580,
    "wires": [
      [
        "c5e2dfcbc380e995"
      ]
    ]
  },
  {
    "id": "ece73504d8561cc1",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 4580,
    "wires": []
  },
  {
    "id": "c5e2dfcbc380e995",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 4580,
    "wires": [
      [
        "ece73504d8561cc1",
        "2a5fd5fc362ae5a2"
      ]
    ]
  },
  {
    "id": "2a5fd5fc362ae5a2",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 4580,
    "wires": []
  },
  {
    "id": "c8039172936f5065",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 4620,
    "wires": [
      [
        "f7b781a572648085"
      ]
    ]
  },
  {
    "id": "22c0ad059613d58f",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 4620,
    "wires": [
      [
        "5e84d6dfe69f73d3"
      ]
    ]
  },
  {
    "id": "5e84d6dfe69f73d3",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "c2e933a7e092cb4b"
    ],
    "x": 875,
    "y": 4620,
    "wires": []
  },
  {
    "id": "f7b781a572648085",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 4620,
    "wires": [
      [
        "d1fd78a1c88165c5"
      ]
    ]
  },
  {
    "id": "d1fd78a1c88165c5",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 4620,
    "wires": [
      [
        "22c0ad059613d58f"
      ]
    ]
  },
  {
    "id": "c2e933a7e092cb4b",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "5e84d6dfe69f73d3"
    ],
    "x": 955,
    "y": 4620,
    "wires": [
      [
        "b0e36f71150d6221"
      ]
    ]
  },
  {
    "id": "b0e36f71150d6221",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor105', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 4620,
    "wires": [
      [
        "7989934ad0b0f9c9"
      ]
    ]
  },
  {
    "id": "c1e7cfe23d9c7d39",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 4620,
    "wires": []
  },
  {
    "id": "7989934ad0b0f9c9",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 4620,
    "wires": [
      [
        "c1e7cfe23d9c7d39",
        "dcdea527a457e56b"
      ]
    ]
  },
  {
    "id": "dcdea527a457e56b",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 4620,
    "wires": []
  },
  {
    "id": "5b5984c52c450c01",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 4660,
    "wires": [
      [
        "feefeb432b444172"
      ]
    ]
  },
  {
    "id": "858e46cebe170e1d",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 4660,
    "wires": [
      [
        "1df722404beca62f"
      ]
    ]
  },
  {
    "id": "1df722404beca62f",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "3376b4844b22cf01"
    ],
    "x": 875,
    "y": 4660,
    "wires": []
  },
  {
    "id": "feefeb432b444172",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 4660,
    "wires": [
      [
        "694ccdf856bcb3f5"
      ]
    ]
  },
  {
    "id": "694ccdf856bcb3f5",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 4660,
    "wires": [
      [
        "858e46cebe170e1d"
      ]
    ]
  },
  {
    "id": "3376b4844b22cf01",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "1df722404beca62f"
    ],
    "x": 955,
    "y": 4660,
    "wires": [
      [
        "232caf52387ba670"
      ]
    ]
  },
  {
    "id": "232caf52387ba670",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor106', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 4660,
    "wires": [
      [
        "412ccdc6296a1620"
      ]
    ]
  },
  {
    "id": "6d6d81f77e66e19b",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 4660,
    "wires": []
  },
  {
    "id": "412ccdc6296a1620",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 4660,
    "wires": [
      [
        "6d6d81f77e66e19b",
        "76e7833cb1e16bc8"
      ]
    ]
  },
  {
    "id": "76e7833cb1e16bc8",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 4660,
    "wires": []
  },
  {
    "id": "68c4ae8ca06eecaa",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 4700,
    "wires": [
      [
        "e3a872cf8ad4add3"
      ]
    ]
  },
  {
    "id": "4d4473703fece31f",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 4700,
    "wires": [
      [
        "f17eb572965aa33f"
      ]
    ]
  },
  {
    "id": "f17eb572965aa33f",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "6e3ad36da7d8045a"
    ],
    "x": 875,
    "y": 4700,
    "wires": []
  },
  {
    "id": "e3a872cf8ad4add3",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 4700,
    "wires": [
      [
        "3fbeb3be44eed01a"
      ]
    ]
  },
  {
    "id": "3fbeb3be44eed01a",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 4700,
    "wires": [
      [
        "4d4473703fece31f"
      ]
    ]
  },
  {
    "id": "6e3ad36da7d8045a",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "f17eb572965aa33f"
    ],
    "x": 955,
    "y": 4700,
    "wires": [
      [
        "98b757d7f16b1a8e"
      ]
    ]
  },
  {
    "id": "98b757d7f16b1a8e",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor107', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 4700,
    "wires": [
      [
        "afcf0ad797cc4359"
      ]
    ]
  },
  {
    "id": "fe077665cbf3bd32",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 4700,
    "wires": []
  },
  {
    "id": "afcf0ad797cc4359",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 4700,
    "wires": [
      [
        "fe077665cbf3bd32",
        "9ee7369827a0bfdb"
      ]
    ]
  },
  {
    "id": "9ee7369827a0bfdb",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 4700,
    "wires": []
  },
  {
    "id": "fc7abed62d126321",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 4740,
    "wires": [
      [
        "e3bf65b701659193"
      ]
    ]
  },
  {
    "id": "5f8dc9f48ad111af",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 4740,
    "wires": [
      [
        "25f4f36186ccd915"
      ]
    ]
  },
  {
    "id": "25f4f36186ccd915",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "f805f6e7fb8b49e1"
    ],
    "x": 875,
    "y": 4740,
    "wires": []
  },
  {
    "id": "e3bf65b701659193",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 4740,
    "wires": [
      [
        "d6771caaadd72b49"
      ]
    ]
  },
  {
    "id": "d6771caaadd72b49",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 4740,
    "wires": [
      [
        "5f8dc9f48ad111af"
      ]
    ]
  },
  {
    "id": "f805f6e7fb8b49e1",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "25f4f36186ccd915"
    ],
    "x": 955,
    "y": 4740,
    "wires": [
      [
        "899917c72b9ff51a"
      ]
    ]
  },
  {
    "id": "899917c72b9ff51a",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor108', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 4740,
    "wires": [
      [
        "794659c7b1eb78e6"
      ]
    ]
  },
  {
    "id": "9e450381f263265e",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 4740,
    "wires": []
  },
  {
    "id": "794659c7b1eb78e6",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 4740,
    "wires": [
      [
        "9e450381f263265e",
        "949b17899cc93189"
      ]
    ]
  },
  {
    "id": "949b17899cc93189",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 4740,
    "wires": []
  },
  {
    "id": "80293e2cc656da20",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 4780,
    "wires": [
      [
        "6111cef264fc9166"
      ]
    ]
  },
  {
    "id": "64fc81746b51c74f",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 4780,
    "wires": [
      [
        "dba3258aa29e9860"
      ]
    ]
  },
  {
    "id": "dba3258aa29e9860",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "23661f1db4e7df58"
    ],
    "x": 875,
    "y": 4780,
    "wires": []
  },
  {
    "id": "6111cef264fc9166",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 4780,
    "wires": [
      [
        "970cd66b1c877627"
      ]
    ]
  },
  {
    "id": "970cd66b1c877627",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 4780,
    "wires": [
      [
        "64fc81746b51c74f"
      ]
    ]
  },
  {
    "id": "23661f1db4e7df58",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "dba3258aa29e9860"
    ],
    "x": 955,
    "y": 4780,
    "wires": [
      [
        "2eba8db98040045a"
      ]
    ]
  },
  {
    "id": "2eba8db98040045a",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor109', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 4780,
    "wires": [
      [
        "b26869701179a139"
      ]
    ]
  },
  {
    "id": "715e9687a66f523b",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 4780,
    "wires": []
  },
  {
    "id": "b26869701179a139",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 4780,
    "wires": [
      [
        "715e9687a66f523b",
        "ae2236534c0de284"
      ]
    ]
  },
  {
    "id": "ae2236534c0de284",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 4780,
    "wires": []
  },
  {
    "id": "163da7c13fe757df",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 4820,
    "wires": [
      [
        "e552ecdbf443a45e"
      ]
    ]
  },
  {
    "id": "bc6ed2b8c6f7a774",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 4820,
    "wires": [
      [
        "478758887d244ee2"
      ]
    ]
  },
  {
    "id": "478758887d244ee2",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "46f09557f79a31fa"
    ],
    "x": 875,
    "y": 4820,
    "wires": []
  },
  {
    "id": "e552ecdbf443a45e",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 4820,
    "wires": [
      [
        "c98a9c7a7f7593f0"
      ]
    ]
  },
  {
    "id": "c98a9c7a7f7593f0",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 4820,
    "wires": [
      [
        "bc6ed2b8c6f7a774"
      ]
    ]
  },
  {
    "id": "46f09557f79a31fa",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "478758887d244ee2"
    ],
    "x": 955,
    "y": 4820,
    "wires": [
      [
        "4903e47f642b7a78"
      ]
    ]
  },
  {
    "id": "4903e47f642b7a78",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor110', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 4820,
    "wires": [
      [
        "f7f2d73c31ad6d73"
      ]
    ]
  },
  {
    "id": "c879944cc06f40e8",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 4820,
    "wires": []
  },
  {
    "id": "f7f2d73c31ad6d73",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 4820,
    "wires": [
      [
        "c879944cc06f40e8",
        "75fd6e267d87e7a3"
      ]
    ]
  },
  {
    "id": "75fd6e267d87e7a3",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 4820,
    "wires": []
  },
  {
    "id": "22a051a5e6376813",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 60,
    "wires": [
      [
        "c182bc5acee65efd"
      ]
    ]
  },
  {
    "id": "cf257631120042e4",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 60,
    "wires": [
      [
        "498d590b8bc8e5e6"
      ]
    ]
  },
  {
    "id": "498d590b8bc8e5e6",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "8e8908ed1356932a"
    ],
    "x": 2875,
    "y": 60,
    "wires": []
  },
  {
    "id": "c182bc5acee65efd",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 60,
    "wires": [
      [
        "49a2939fa505b961"
      ]
    ]
  },
  {
    "id": "853f97b0d9d98a74",
    "type": "comment",
    "z": "e61d7807.20aac8",
    "name": "121-130",
    "info": "",
    "x": 2080,
    "y": 20,
    "wires": []
  },
  {
    "id": "49a2939fa505b961",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 60,
    "wires": [
      [
        "cf257631120042e4"
      ]
    ]
  },
  {
    "id": "8e8908ed1356932a",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "498d590b8bc8e5e6"
    ],
    "x": 2955,
    "y": 60,
    "wires": [
      [
        "9c3c38415723f565"
      ]
    ]
  },
  {
    "id": "9c3c38415723f565",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor111', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 60,
    "wires": [
      [
        "9c7b3be7b8b2d2de"
      ]
    ]
  },
  {
    "id": "f012f17f81883edb",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 60,
    "wires": []
  },
  {
    "id": "9c7b3be7b8b2d2de",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 60,
    "wires": [
      [
        "f012f17f81883edb",
        "f1d4546e7783559a"
      ]
    ]
  },
  {
    "id": "f1d4546e7783559a",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 60,
    "wires": []
  },
  {
    "id": "4c37b3b8ee347432",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 100,
    "wires": [
      [
        "ac7a6f1785d2ef73"
      ]
    ]
  },
  {
    "id": "3609399ad6a9dc49",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 100,
    "wires": [
      [
        "a6498feb2cc275db"
      ]
    ]
  },
  {
    "id": "a6498feb2cc275db",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "264f71818f81995c"
    ],
    "x": 2875,
    "y": 100,
    "wires": []
  },
  {
    "id": "ac7a6f1785d2ef73",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 100,
    "wires": [
      [
        "981f9848846ede33"
      ]
    ]
  },
  {
    "id": "981f9848846ede33",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 100,
    "wires": [
      [
        "3609399ad6a9dc49"
      ]
    ]
  },
  {
    "id": "264f71818f81995c",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "a6498feb2cc275db"
    ],
    "x": 2955,
    "y": 100,
    "wires": [
      [
        "974eb38b0bb6c8ad"
      ]
    ]
  },
  {
    "id": "974eb38b0bb6c8ad",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor112', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 100,
    "wires": [
      [
        "df6c0f48c9cb4535"
      ]
    ]
  },
  {
    "id": "865a87a1d50552d3",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 100,
    "wires": []
  },
  {
    "id": "df6c0f48c9cb4535",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 100,
    "wires": [
      [
        "865a87a1d50552d3",
        "36d183a37cd63e09"
      ]
    ]
  },
  {
    "id": "36d183a37cd63e09",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 100,
    "wires": []
  },
  {
    "id": "34c4447e82672ba2",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 140,
    "wires": [
      [
        "14c916d24be68b54"
      ]
    ]
  },
  {
    "id": "3d36162980f223da",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 140,
    "wires": [
      [
        "2d23fc2bad8376d7"
      ]
    ]
  },
  {
    "id": "2d23fc2bad8376d7",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "f156b5774f21426e"
    ],
    "x": 2875,
    "y": 140,
    "wires": []
  },
  {
    "id": "14c916d24be68b54",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 140,
    "wires": [
      [
        "03c85ba536f970ba"
      ]
    ]
  },
  {
    "id": "03c85ba536f970ba",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 140,
    "wires": [
      [
        "3d36162980f223da"
      ]
    ]
  },
  {
    "id": "f156b5774f21426e",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "2d23fc2bad8376d7"
    ],
    "x": 2955,
    "y": 140,
    "wires": [
      [
        "8c6596d0a185af8b"
      ]
    ]
  },
  {
    "id": "8c6596d0a185af8b",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor113', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 140,
    "wires": [
      [
        "0355db5f3b8e5988"
      ]
    ]
  },
  {
    "id": "2dcff8ab1397c580",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 140,
    "wires": []
  },
  {
    "id": "0355db5f3b8e5988",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 140,
    "wires": [
      [
        "2dcff8ab1397c580",
        "aaa7a5b6e5c86f1d"
      ]
    ]
  },
  {
    "id": "aaa7a5b6e5c86f1d",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 140,
    "wires": []
  },
  {
    "id": "1fd9cd3735ba95b4",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 180,
    "wires": [
      [
        "188dfa5714e0e76c"
      ]
    ]
  },
  {
    "id": "8797a24dfd46e48b",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 180,
    "wires": [
      [
        "cdcac8ce28144b41"
      ]
    ]
  },
  {
    "id": "cdcac8ce28144b41",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "6b56eb2f8387b69e"
    ],
    "x": 2875,
    "y": 180,
    "wires": []
  },
  {
    "id": "188dfa5714e0e76c",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 180,
    "wires": [
      [
        "1d1f36649ffbbfc4"
      ]
    ]
  },
  {
    "id": "1d1f36649ffbbfc4",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 180,
    "wires": [
      [
        "8797a24dfd46e48b"
      ]
    ]
  },
  {
    "id": "6b56eb2f8387b69e",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "cdcac8ce28144b41"
    ],
    "x": 2955,
    "y": 180,
    "wires": [
      [
        "fc78f70609fb9d09"
      ]
    ]
  },
  {
    "id": "fc78f70609fb9d09",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor114', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 180,
    "wires": [
      [
        "68af92c5985b235a"
      ]
    ]
  },
  {
    "id": "701cc9b733ffdd5a",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 180,
    "wires": []
  },
  {
    "id": "68af92c5985b235a",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 180,
    "wires": [
      [
        "701cc9b733ffdd5a",
        "ed5375ba9c3c278b"
      ]
    ]
  },
  {
    "id": "ed5375ba9c3c278b",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 180,
    "wires": []
  },
  {
    "id": "12a29c7fcb04c6dc",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 220,
    "wires": [
      [
        "41687bda8de0f875"
      ]
    ]
  },
  {
    "id": "c4661ad47c298c85",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 220,
    "wires": [
      [
        "934b67ea34b84f6e"
      ]
    ]
  },
  {
    "id": "934b67ea34b84f6e",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "6d8d34e8bb3d15d5"
    ],
    "x": 2875,
    "y": 220,
    "wires": []
  },
  {
    "id": "41687bda8de0f875",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 220,
    "wires": [
      [
        "effe5ecda70b3280"
      ]
    ]
  },
  {
    "id": "effe5ecda70b3280",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 220,
    "wires": [
      [
        "c4661ad47c298c85"
      ]
    ]
  },
  {
    "id": "6d8d34e8bb3d15d5",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "934b67ea34b84f6e"
    ],
    "x": 2955,
    "y": 220,
    "wires": [
      [
        "6f4f7a5811677599"
      ]
    ]
  },
  {
    "id": "6f4f7a5811677599",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor115', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 220,
    "wires": [
      [
        "0e9948cd60cf4cd7"
      ]
    ]
  },
  {
    "id": "52229b9de7a9ba2c",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 220,
    "wires": []
  },
  {
    "id": "0e9948cd60cf4cd7",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 220,
    "wires": [
      [
        "52229b9de7a9ba2c",
        "da9b95cf065773d7"
      ]
    ]
  },
  {
    "id": "da9b95cf065773d7",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 220,
    "wires": []
  },
  {
    "id": "36b7c56c369e850a",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 260,
    "wires": [
      [
        "12117636f0433648"
      ]
    ]
  },
  {
    "id": "da3d29efddfa395e",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 260,
    "wires": [
      [
        "6b6e50e099ae7635"
      ]
    ]
  },
  {
    "id": "6b6e50e099ae7635",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "ad7ed58452568f3a"
    ],
    "x": 2875,
    "y": 260,
    "wires": []
  },
  {
    "id": "12117636f0433648",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 260,
    "wires": [
      [
        "13dfee3da74cd8f8"
      ]
    ]
  },
  {
    "id": "13dfee3da74cd8f8",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 260,
    "wires": [
      [
        "da3d29efddfa395e"
      ]
    ]
  },
  {
    "id": "ad7ed58452568f3a",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "6b6e50e099ae7635"
    ],
    "x": 2955,
    "y": 260,
    "wires": [
      [
        "175f6895ca3eb221"
      ]
    ]
  },
  {
    "id": "175f6895ca3eb221",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor116', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 260,
    "wires": [
      [
        "a60776bbcb1fd52d"
      ]
    ]
  },
  {
    "id": "3c048db12bcfcc88",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 260,
    "wires": []
  },
  {
    "id": "a60776bbcb1fd52d",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 260,
    "wires": [
      [
        "3c048db12bcfcc88",
        "c3017de5a11de267"
      ]
    ]
  },
  {
    "id": "c3017de5a11de267",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 260,
    "wires": []
  },
  {
    "id": "437dd3700059bae3",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 300,
    "wires": [
      [
        "2820d72f303ea56e"
      ]
    ]
  },
  {
    "id": "64f463e9b85e6aef",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 300,
    "wires": [
      [
        "581aced99ea954c6"
      ]
    ]
  },
  {
    "id": "581aced99ea954c6",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "0a6e1135a6686fbe"
    ],
    "x": 2875,
    "y": 300,
    "wires": []
  },
  {
    "id": "2820d72f303ea56e",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 300,
    "wires": [
      [
        "ce9af94a74795072"
      ]
    ]
  },
  {
    "id": "ce9af94a74795072",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 300,
    "wires": [
      [
        "64f463e9b85e6aef"
      ]
    ]
  },
  {
    "id": "0a6e1135a6686fbe",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "581aced99ea954c6"
    ],
    "x": 2955,
    "y": 300,
    "wires": [
      [
        "af51a41851adbae4"
      ]
    ]
  },
  {
    "id": "af51a41851adbae4",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor117', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 300,
    "wires": [
      [
        "4057701ff9577fd3"
      ]
    ]
  },
  {
    "id": "84c76a74003178ad",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 300,
    "wires": []
  },
  {
    "id": "4057701ff9577fd3",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 300,
    "wires": [
      [
        "84c76a74003178ad",
        "6eda4450eb22ee5b"
      ]
    ]
  },
  {
    "id": "6eda4450eb22ee5b",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 300,
    "wires": []
  },
  {
    "id": "85606aa9c2c51b68",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 340,
    "wires": [
      [
        "74a343c5ce4929df"
      ]
    ]
  },
  {
    "id": "d1f3c31434f9593f",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 340,
    "wires": [
      [
        "3ae7ab736c951d92"
      ]
    ]
  },
  {
    "id": "3ae7ab736c951d92",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "9f7280e73d257221"
    ],
    "x": 2875,
    "y": 340,
    "wires": []
  },
  {
    "id": "74a343c5ce4929df",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 340,
    "wires": [
      [
        "d12ef8af70e1e8d2"
      ]
    ]
  },
  {
    "id": "d12ef8af70e1e8d2",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 340,
    "wires": [
      [
        "d1f3c31434f9593f"
      ]
    ]
  },
  {
    "id": "9f7280e73d257221",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "3ae7ab736c951d92"
    ],
    "x": 2955,
    "y": 340,
    "wires": [
      [
        "118f2116eb8228fd"
      ]
    ]
  },
  {
    "id": "118f2116eb8228fd",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor118', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 340,
    "wires": [
      [
        "2af64e6ea53fbcc7"
      ]
    ]
  },
  {
    "id": "56b869fd37db6340",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 340,
    "wires": []
  },
  {
    "id": "2af64e6ea53fbcc7",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 340,
    "wires": [
      [
        "56b869fd37db6340",
        "ee44468ba30cce73"
      ]
    ]
  },
  {
    "id": "ee44468ba30cce73",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 340,
    "wires": []
  },
  {
    "id": "b0dae6b57c115ee5",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 380,
    "wires": [
      [
        "b9491a08ea37494f"
      ]
    ]
  },
  {
    "id": "d84ed2956512246c",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 380,
    "wires": [
      [
        "a7d68687ab93ac82"
      ]
    ]
  },
  {
    "id": "a7d68687ab93ac82",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "10cff3badd0a3d9e"
    ],
    "x": 2875,
    "y": 380,
    "wires": []
  },
  {
    "id": "b9491a08ea37494f",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 380,
    "wires": [
      [
        "e4eb926ed5b97c2b"
      ]
    ]
  },
  {
    "id": "e4eb926ed5b97c2b",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 380,
    "wires": [
      [
        "d84ed2956512246c"
      ]
    ]
  },
  {
    "id": "10cff3badd0a3d9e",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "a7d68687ab93ac82"
    ],
    "x": 2955,
    "y": 380,
    "wires": [
      [
        "d52647a79b8d6241"
      ]
    ]
  },
  {
    "id": "d52647a79b8d6241",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor119', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 380,
    "wires": [
      [
        "26b2e2fcd103e2dd"
      ]
    ]
  },
  {
    "id": "82e41e5e1771e6ea",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 380,
    "wires": []
  },
  {
    "id": "26b2e2fcd103e2dd",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 380,
    "wires": [
      [
        "82e41e5e1771e6ea",
        "99e0872f7e30633e"
      ]
    ]
  },
  {
    "id": "99e0872f7e30633e",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 380,
    "wires": []
  },
  {
    "id": "1ccfa04d8bbea23d",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 420,
    "wires": [
      [
        "e722a83497db05d4"
      ]
    ]
  },
  {
    "id": "0e175d2c62ef574d",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 420,
    "wires": [
      [
        "dfe70707050811ef"
      ]
    ]
  },
  {
    "id": "dfe70707050811ef",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "dc28d522dd199dd7"
    ],
    "x": 2875,
    "y": 420,
    "wires": []
  },
  {
    "id": "e722a83497db05d4",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 420,
    "wires": [
      [
        "8200439cefa9b8d9"
      ]
    ]
  },
  {
    "id": "8200439cefa9b8d9",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 420,
    "wires": [
      [
        "0e175d2c62ef574d"
      ]
    ]
  },
  {
    "id": "dc28d522dd199dd7",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "dfe70707050811ef"
    ],
    "x": 2955,
    "y": 420,
    "wires": [
      [
        "ce5cd98768d23d90"
      ]
    ]
  },
  {
    "id": "ce5cd98768d23d90",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor120', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 420,
    "wires": [
      [
        "c49707504951c7dc"
      ]
    ]
  },
  {
    "id": "dbd5b423408fc5f9",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 420,
    "wires": []
  },
  {
    "id": "c49707504951c7dc",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 420,
    "wires": [
      [
        "dbd5b423408fc5f9",
        "52d1ed092bd0ba9e"
      ]
    ]
  },
  {
    "id": "52d1ed092bd0ba9e",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 420,
    "wires": []
  },
  {
    "id": "a876d55346b585d9",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 500,
    "wires": [
      [
        "ba1dd631428eb9f0"
      ]
    ]
  },
  {
    "id": "af6e991e6e22c19c",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 500,
    "wires": [
      [
        "37896de48583fe2d"
      ]
    ]
  },
  {
    "id": "37896de48583fe2d",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "f7c5b073f142fc39"
    ],
    "x": 2875,
    "y": 500,
    "wires": []
  },
  {
    "id": "ba1dd631428eb9f0",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 500,
    "wires": [
      [
        "962b6e61df7dde6a"
      ]
    ]
  },
  {
    "id": "40307b33e3beb90e",
    "type": "comment",
    "z": "e61d7807.20aac8",
    "name": "131-140",
    "info": "",
    "x": 2080,
    "y": 460,
    "wires": []
  },
  {
    "id": "962b6e61df7dde6a",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 500,
    "wires": [
      [
        "af6e991e6e22c19c"
      ]
    ]
  },
  {
    "id": "f7c5b073f142fc39",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "37896de48583fe2d"
    ],
    "x": 2955,
    "y": 500,
    "wires": [
      [
        "407a3932832165e9"
      ]
    ]
  },
  {
    "id": "407a3932832165e9",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor121', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 500,
    "wires": [
      [
        "24ac87929a8d9432"
      ]
    ]
  },
  {
    "id": "c5bf54da50f204a3",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 500,
    "wires": []
  },
  {
    "id": "24ac87929a8d9432",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 500,
    "wires": [
      [
        "c5bf54da50f204a3",
        "41a102a0a4d65cf3"
      ]
    ]
  },
  {
    "id": "41a102a0a4d65cf3",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 500,
    "wires": []
  },
  {
    "id": "a07589cfa76fe487",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 540,
    "wires": [
      [
        "f34048311d82dcdc"
      ]
    ]
  },
  {
    "id": "60fdd8882b1aaab8",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 540,
    "wires": [
      [
        "4e9efe185021f8ee"
      ]
    ]
  },
  {
    "id": "4e9efe185021f8ee",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "b26b9d49cca92cd2"
    ],
    "x": 2875,
    "y": 540,
    "wires": []
  },
  {
    "id": "f34048311d82dcdc",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 540,
    "wires": [
      [
        "44bbf55b178dd256"
      ]
    ]
  },
  {
    "id": "44bbf55b178dd256",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 540,
    "wires": [
      [
        "60fdd8882b1aaab8"
      ]
    ]
  },
  {
    "id": "b26b9d49cca92cd2",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "4e9efe185021f8ee"
    ],
    "x": 2955,
    "y": 540,
    "wires": [
      [
        "4e9658318764b826"
      ]
    ]
  },
  {
    "id": "4e9658318764b826",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor122', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 540,
    "wires": [
      [
        "b8c025cde221dc66"
      ]
    ]
  },
  {
    "id": "85a6c71a6f60a62e",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 540,
    "wires": []
  },
  {
    "id": "b8c025cde221dc66",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 540,
    "wires": [
      [
        "85a6c71a6f60a62e",
        "09697f07ef7c7250"
      ]
    ]
  },
  {
    "id": "09697f07ef7c7250",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 540,
    "wires": []
  },
  {
    "id": "449a5fced02ee50c",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 580,
    "wires": [
      [
        "9738bed3279ee145"
      ]
    ]
  },
  {
    "id": "1e5abe170aa264bb",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 580,
    "wires": [
      [
        "c1e537cc7e81982f"
      ]
    ]
  },
  {
    "id": "c1e537cc7e81982f",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "55592376d7e63710"
    ],
    "x": 2875,
    "y": 580,
    "wires": []
  },
  {
    "id": "9738bed3279ee145",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 580,
    "wires": [
      [
        "d79fb5b4076314d6"
      ]
    ]
  },
  {
    "id": "d79fb5b4076314d6",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 580,
    "wires": [
      [
        "1e5abe170aa264bb"
      ]
    ]
  },
  {
    "id": "55592376d7e63710",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "c1e537cc7e81982f"
    ],
    "x": 2955,
    "y": 580,
    "wires": [
      [
        "171b250f84b0ed51"
      ]
    ]
  },
  {
    "id": "171b250f84b0ed51",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor123', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 580,
    "wires": [
      [
        "2e0e18dfaf0eef8d"
      ]
    ]
  },
  {
    "id": "1f987023ee37182f",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 580,
    "wires": []
  },
  {
    "id": "2e0e18dfaf0eef8d",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 580,
    "wires": [
      [
        "1f987023ee37182f",
        "be6180b4be2b58ca"
      ]
    ]
  },
  {
    "id": "be6180b4be2b58ca",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 580,
    "wires": []
  },
  {
    "id": "f7b41c2a0755822e",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 620,
    "wires": [
      [
        "948ec46acae101af"
      ]
    ]
  },
  {
    "id": "5b5c7dce7307a5fa",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 620,
    "wires": [
      [
        "8bf0f9a7b7f14011"
      ]
    ]
  },
  {
    "id": "8bf0f9a7b7f14011",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "0421ab113f08c92a"
    ],
    "x": 2875,
    "y": 620,
    "wires": []
  },
  {
    "id": "948ec46acae101af",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 620,
    "wires": [
      [
        "3d62fd9416d46380"
      ]
    ]
  },
  {
    "id": "3d62fd9416d46380",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 620,
    "wires": [
      [
        "5b5c7dce7307a5fa"
      ]
    ]
  },
  {
    "id": "0421ab113f08c92a",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "8bf0f9a7b7f14011"
    ],
    "x": 2955,
    "y": 620,
    "wires": [
      [
        "ee9492bea415e3f5"
      ]
    ]
  },
  {
    "id": "ee9492bea415e3f5",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor124', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 620,
    "wires": [
      [
        "b2fb4b426fb8e50e"
      ]
    ]
  },
  {
    "id": "9f5ca817f6938c4d",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 620,
    "wires": []
  },
  {
    "id": "b2fb4b426fb8e50e",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 620,
    "wires": [
      [
        "9f5ca817f6938c4d",
        "2f511fcf7735d6ff"
      ]
    ]
  },
  {
    "id": "2f511fcf7735d6ff",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 620,
    "wires": []
  },
  {
    "id": "c072bca37158fddc",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 660,
    "wires": [
      [
        "1dab6b063dcc3f12"
      ]
    ]
  },
  {
    "id": "7055ca96c21013d0",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 660,
    "wires": [
      [
        "70c64075c0e2080a"
      ]
    ]
  },
  {
    "id": "70c64075c0e2080a",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "cbdd84dde934d414"
    ],
    "x": 2875,
    "y": 660,
    "wires": []
  },
  {
    "id": "1dab6b063dcc3f12",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 660,
    "wires": [
      [
        "d6fabcb7f2d5f116"
      ]
    ]
  },
  {
    "id": "d6fabcb7f2d5f116",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 660,
    "wires": [
      [
        "7055ca96c21013d0"
      ]
    ]
  },
  {
    "id": "cbdd84dde934d414",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "70c64075c0e2080a"
    ],
    "x": 2955,
    "y": 660,
    "wires": [
      [
        "4c2bfdd48ce763a5"
      ]
    ]
  },
  {
    "id": "4c2bfdd48ce763a5",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor125', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 660,
    "wires": [
      [
        "ab2c311923f504f0"
      ]
    ]
  },
  {
    "id": "860694d533c9faec",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 660,
    "wires": []
  },
  {
    "id": "ab2c311923f504f0",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 660,
    "wires": [
      [
        "860694d533c9faec",
        "63f4336eeebdbaf0"
      ]
    ]
  },
  {
    "id": "63f4336eeebdbaf0",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 660,
    "wires": []
  },
  {
    "id": "4216d13c6397e5d5",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 700,
    "wires": [
      [
        "71d636a83c83d653"
      ]
    ]
  },
  {
    "id": "434989ba37ef52a8",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 700,
    "wires": [
      [
        "12a9996a8c709dbb"
      ]
    ]
  },
  {
    "id": "12a9996a8c709dbb",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "7a91f4f33c23cab6"
    ],
    "x": 2875,
    "y": 700,
    "wires": []
  },
  {
    "id": "71d636a83c83d653",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 700,
    "wires": [
      [
        "ea555d6ce1f8e8d3"
      ]
    ]
  },
  {
    "id": "ea555d6ce1f8e8d3",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 700,
    "wires": [
      [
        "434989ba37ef52a8"
      ]
    ]
  },
  {
    "id": "7a91f4f33c23cab6",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "12a9996a8c709dbb"
    ],
    "x": 2955,
    "y": 700,
    "wires": [
      [
        "403b8ac3c170868f"
      ]
    ]
  },
  {
    "id": "403b8ac3c170868f",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor126', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 700,
    "wires": [
      [
        "55d0b98f41c94012"
      ]
    ]
  },
  {
    "id": "e491d0a7de86fe55",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 700,
    "wires": []
  },
  {
    "id": "55d0b98f41c94012",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 700,
    "wires": [
      [
        "e491d0a7de86fe55",
        "8be9260c3444c201"
      ]
    ]
  },
  {
    "id": "8be9260c3444c201",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 700,
    "wires": []
  },
  {
    "id": "621e38fbd137ab04",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 740,
    "wires": [
      [
        "40a37aa66e34b75c"
      ]
    ]
  },
  {
    "id": "924688092020d9dd",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 740,
    "wires": [
      [
        "447c30a620bc0ebb"
      ]
    ]
  },
  {
    "id": "447c30a620bc0ebb",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "5527827e2d4a3094"
    ],
    "x": 2875,
    "y": 740,
    "wires": []
  },
  {
    "id": "40a37aa66e34b75c",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 740,
    "wires": [
      [
        "33fee308ede69ae0"
      ]
    ]
  },
  {
    "id": "33fee308ede69ae0",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 740,
    "wires": [
      [
        "924688092020d9dd"
      ]
    ]
  },
  {
    "id": "5527827e2d4a3094",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "447c30a620bc0ebb"
    ],
    "x": 2955,
    "y": 740,
    "wires": [
      [
        "7b5d58bc5d32fcd2"
      ]
    ]
  },
  {
    "id": "7b5d58bc5d32fcd2",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor127', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 740,
    "wires": [
      [
        "1b16a42f78d93f78"
      ]
    ]
  },
  {
    "id": "60ce9fcc4660740c",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 740,
    "wires": []
  },
  {
    "id": "1b16a42f78d93f78",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 740,
    "wires": [
      [
        "60ce9fcc4660740c",
        "6de07ff1cb6fc3be"
      ]
    ]
  },
  {
    "id": "6de07ff1cb6fc3be",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 740,
    "wires": []
  },
  {
    "id": "a806a07a83e3cacd",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 780,
    "wires": [
      [
        "f14c725c6290f53f"
      ]
    ]
  },
  {
    "id": "1bf1865004d37053",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 780,
    "wires": [
      [
        "61e4016cec0e0d98"
      ]
    ]
  },
  {
    "id": "61e4016cec0e0d98",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "85ce86d6fa4dc52e"
    ],
    "x": 2875,
    "y": 780,
    "wires": []
  },
  {
    "id": "f14c725c6290f53f",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 780,
    "wires": [
      [
        "6faaa5e25472d833"
      ]
    ]
  },
  {
    "id": "6faaa5e25472d833",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 780,
    "wires": [
      [
        "1bf1865004d37053"
      ]
    ]
  },
  {
    "id": "85ce86d6fa4dc52e",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "61e4016cec0e0d98"
    ],
    "x": 2955,
    "y": 780,
    "wires": [
      [
        "e33c860acf3ebc2c"
      ]
    ]
  },
  {
    "id": "e33c860acf3ebc2c",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor128', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 780,
    "wires": [
      [
        "fc31626ab125ce18"
      ]
    ]
  },
  {
    "id": "a42c042703c33e03",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 780,
    "wires": []
  },
  {
    "id": "fc31626ab125ce18",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 780,
    "wires": [
      [
        "a42c042703c33e03",
        "c81b212a698ed7b8"
      ]
    ]
  },
  {
    "id": "c81b212a698ed7b8",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 780,
    "wires": []
  },
  {
    "id": "ab33af7c1b545314",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 820,
    "wires": [
      [
        "9fdac14f9cd505a0"
      ]
    ]
  },
  {
    "id": "a0b9029ca0ad76cc",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 820,
    "wires": [
      [
        "b9f5565833130b0e"
      ]
    ]
  },
  {
    "id": "b9f5565833130b0e",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "088d1f2630fecc90"
    ],
    "x": 2875,
    "y": 820,
    "wires": []
  },
  {
    "id": "9fdac14f9cd505a0",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 820,
    "wires": [
      [
        "adc42fe7131dfe9e"
      ]
    ]
  },
  {
    "id": "adc42fe7131dfe9e",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 820,
    "wires": [
      [
        "a0b9029ca0ad76cc"
      ]
    ]
  },
  {
    "id": "088d1f2630fecc90",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "b9f5565833130b0e"
    ],
    "x": 2955,
    "y": 820,
    "wires": [
      [
        "18e7465915130abf"
      ]
    ]
  },
  {
    "id": "18e7465915130abf",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor129', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 820,
    "wires": [
      [
        "8a8dfb9b01ebd9ca"
      ]
    ]
  },
  {
    "id": "77ae56156a55f7df",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 820,
    "wires": []
  },
  {
    "id": "8a8dfb9b01ebd9ca",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 820,
    "wires": [
      [
        "77ae56156a55f7df",
        "70f91cd320e1265a"
      ]
    ]
  },
  {
    "id": "70f91cd320e1265a",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 820,
    "wires": []
  },
  {
    "id": "b67bae4918502dab",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 860,
    "wires": [
      [
        "e4c3528ad95683a9"
      ]
    ]
  },
  {
    "id": "3a3e5bef72a5a233",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 860,
    "wires": [
      [
        "fe7f335a9ee49222"
      ]
    ]
  },
  {
    "id": "fe7f335a9ee49222",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "f2a59ab284045b0d"
    ],
    "x": 2875,
    "y": 860,
    "wires": []
  },
  {
    "id": "e4c3528ad95683a9",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 860,
    "wires": [
      [
        "dcef9b035ca37fbc"
      ]
    ]
  },
  {
    "id": "dcef9b035ca37fbc",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 860,
    "wires": [
      [
        "3a3e5bef72a5a233"
      ]
    ]
  },
  {
    "id": "f2a59ab284045b0d",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fe7f335a9ee49222"
    ],
    "x": 2955,
    "y": 860,
    "wires": [
      [
        "45bb2cbd55985b83"
      ]
    ]
  },
  {
    "id": "45bb2cbd55985b83",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor130', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 860,
    "wires": [
      [
        "6397c198298503ab"
      ]
    ]
  },
  {
    "id": "52cf959557eb8ba1",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 860,
    "wires": []
  },
  {
    "id": "6397c198298503ab",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 860,
    "wires": [
      [
        "52cf959557eb8ba1",
        "bca1d9df90e55fc9"
      ]
    ]
  },
  {
    "id": "bca1d9df90e55fc9",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 860,
    "wires": []
  },
  {
    "id": "69918d30218ed43a",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 940,
    "wires": [
      [
        "19af35c5fc60a489"
      ]
    ]
  },
  {
    "id": "0e99563a39608fda",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 940,
    "wires": [
      [
        "54766a0475d178f8"
      ]
    ]
  },
  {
    "id": "54766a0475d178f8",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "92cad6935f87ef02"
    ],
    "x": 2875,
    "y": 940,
    "wires": []
  },
  {
    "id": "19af35c5fc60a489",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 940,
    "wires": [
      [
        "5f7972dc33e67e87"
      ]
    ]
  },
  {
    "id": "996662767acd37dc",
    "type": "comment",
    "z": "e61d7807.20aac8",
    "name": "141-150",
    "info": "",
    "x": 2080,
    "y": 900,
    "wires": []
  },
  {
    "id": "5f7972dc33e67e87",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 940,
    "wires": [
      [
        "0e99563a39608fda"
      ]
    ]
  },
  {
    "id": "92cad6935f87ef02",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "54766a0475d178f8"
    ],
    "x": 2955,
    "y": 940,
    "wires": [
      [
        "7ce442dea236194c"
      ]
    ]
  },
  {
    "id": "7ce442dea236194c",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor131', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 940,
    "wires": [
      [
        "5f464509d0cf7cbe"
      ]
    ]
  },
  {
    "id": "1d7e66d459671d1c",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 940,
    "wires": []
  },
  {
    "id": "5f464509d0cf7cbe",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 940,
    "wires": [
      [
        "1d7e66d459671d1c",
        "1a0b04750e96088d"
      ]
    ]
  },
  {
    "id": "1a0b04750e96088d",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 940,
    "wires": []
  },
  {
    "id": "6c84346129713ba5",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 980,
    "wires": [
      [
        "f7dbbd92bf13fc1c"
      ]
    ]
  },
  {
    "id": "1d39297c3348744e",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 980,
    "wires": [
      [
        "eed1f0d470c812a1"
      ]
    ]
  },
  {
    "id": "eed1f0d470c812a1",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "8d424f8e7a5ff145"
    ],
    "x": 2875,
    "y": 980,
    "wires": []
  },
  {
    "id": "f7dbbd92bf13fc1c",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 980,
    "wires": [
      [
        "5c8d0cf6ad8a7485"
      ]
    ]
  },
  {
    "id": "5c8d0cf6ad8a7485",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 980,
    "wires": [
      [
        "1d39297c3348744e"
      ]
    ]
  },
  {
    "id": "8d424f8e7a5ff145",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "eed1f0d470c812a1"
    ],
    "x": 2955,
    "y": 980,
    "wires": [
      [
        "b243323b71baa935"
      ]
    ]
  },
  {
    "id": "b243323b71baa935",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor132', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 980,
    "wires": [
      [
        "2d08a98fdc95057d"
      ]
    ]
  },
  {
    "id": "8dfbd28e1cd26776",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 980,
    "wires": []
  },
  {
    "id": "2d08a98fdc95057d",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 980,
    "wires": [
      [
        "8dfbd28e1cd26776",
        "7ab4a25ecae305a9"
      ]
    ]
  },
  {
    "id": "7ab4a25ecae305a9",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 980,
    "wires": []
  },
  {
    "id": "417727d2bd89ca9b",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 1020,
    "wires": [
      [
        "902030de01fcfe31"
      ]
    ]
  },
  {
    "id": "12fdf41bc32fc886",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 1020,
    "wires": [
      [
        "cefa0585e546f05c"
      ]
    ]
  },
  {
    "id": "cefa0585e546f05c",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "886207594dfe1e45"
    ],
    "x": 2875,
    "y": 1020,
    "wires": []
  },
  {
    "id": "902030de01fcfe31",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 1020,
    "wires": [
      [
        "33ec7066b27185a1"
      ]
    ]
  },
  {
    "id": "33ec7066b27185a1",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 1020,
    "wires": [
      [
        "12fdf41bc32fc886"
      ]
    ]
  },
  {
    "id": "886207594dfe1e45",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "cefa0585e546f05c"
    ],
    "x": 2955,
    "y": 1020,
    "wires": [
      [
        "a2a4a38178302cfc"
      ]
    ]
  },
  {
    "id": "a2a4a38178302cfc",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor133', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 1020,
    "wires": [
      [
        "f37bb169f8db8eb4"
      ]
    ]
  },
  {
    "id": "b70f4eb7182550fc",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 1020,
    "wires": []
  },
  {
    "id": "f37bb169f8db8eb4",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 1020,
    "wires": [
      [
        "b70f4eb7182550fc",
        "10859bb38c063269"
      ]
    ]
  },
  {
    "id": "10859bb38c063269",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 1020,
    "wires": []
  },
  {
    "id": "d7fc45b4c2da8f94",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 1060,
    "wires": [
      [
        "49a7eed5647b7f84"
      ]
    ]
  },
  {
    "id": "90d7b2aede37790e",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 1060,
    "wires": [
      [
        "cac6200801accc6f"
      ]
    ]
  },
  {
    "id": "cac6200801accc6f",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "d70056a937bfa356"
    ],
    "x": 2875,
    "y": 1060,
    "wires": []
  },
  {
    "id": "49a7eed5647b7f84",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 1060,
    "wires": [
      [
        "74f8bd3e28251a5f"
      ]
    ]
  },
  {
    "id": "74f8bd3e28251a5f",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 1060,
    "wires": [
      [
        "90d7b2aede37790e"
      ]
    ]
  },
  {
    "id": "d70056a937bfa356",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "cac6200801accc6f"
    ],
    "x": 2955,
    "y": 1060,
    "wires": [
      [
        "956a200594fa1780"
      ]
    ]
  },
  {
    "id": "956a200594fa1780",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor134', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 1060,
    "wires": [
      [
        "80fddeb4f344cf1d"
      ]
    ]
  },
  {
    "id": "a3a8fe7e91f227f1",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 1060,
    "wires": []
  },
  {
    "id": "80fddeb4f344cf1d",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 1060,
    "wires": [
      [
        "a3a8fe7e91f227f1",
        "61961610bca88392"
      ]
    ]
  },
  {
    "id": "61961610bca88392",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 1060,
    "wires": []
  },
  {
    "id": "4ffeff22160bdbcd",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 1100,
    "wires": [
      [
        "d2bce2de4bb712fe"
      ]
    ]
  },
  {
    "id": "5e6859062b4ed092",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 1100,
    "wires": [
      [
        "d3ce09d027a1404d"
      ]
    ]
  },
  {
    "id": "d3ce09d027a1404d",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "d26f4a624bcf38c4"
    ],
    "x": 2875,
    "y": 1100,
    "wires": []
  },
  {
    "id": "d2bce2de4bb712fe",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 1100,
    "wires": [
      [
        "1e11ad4458b6b0bc"
      ]
    ]
  },
  {
    "id": "1e11ad4458b6b0bc",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 1100,
    "wires": [
      [
        "5e6859062b4ed092"
      ]
    ]
  },
  {
    "id": "d26f4a624bcf38c4",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "d3ce09d027a1404d"
    ],
    "x": 2955,
    "y": 1100,
    "wires": [
      [
        "f54d8f63c8d4e116"
      ]
    ]
  },
  {
    "id": "f54d8f63c8d4e116",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor135', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 1100,
    "wires": [
      [
        "f9f4d00e63c7fa55"
      ]
    ]
  },
  {
    "id": "be9c097c97f25d3d",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 1100,
    "wires": []
  },
  {
    "id": "f9f4d00e63c7fa55",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 1100,
    "wires": [
      [
        "be9c097c97f25d3d",
        "953cf1b56648a9f0"
      ]
    ]
  },
  {
    "id": "953cf1b56648a9f0",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 1100,
    "wires": []
  },
  {
    "id": "0a06ffcf5f6e378c",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 1140,
    "wires": [
      [
        "f2c2527070972c33"
      ]
    ]
  },
  {
    "id": "a46caeb29a04c1e8",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 1140,
    "wires": [
      [
        "25cc3cd5f32cb1f4"
      ]
    ]
  },
  {
    "id": "25cc3cd5f32cb1f4",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "96969ad1dd2a1368"
    ],
    "x": 2875,
    "y": 1140,
    "wires": []
  },
  {
    "id": "f2c2527070972c33",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 1140,
    "wires": [
      [
        "10b6bc5d03f2dd18"
      ]
    ]
  },
  {
    "id": "10b6bc5d03f2dd18",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 1140,
    "wires": [
      [
        "a46caeb29a04c1e8"
      ]
    ]
  },
  {
    "id": "96969ad1dd2a1368",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "25cc3cd5f32cb1f4"
    ],
    "x": 2955,
    "y": 1140,
    "wires": [
      [
        "278dfa1e69b5e260"
      ]
    ]
  },
  {
    "id": "278dfa1e69b5e260",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor136', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 1140,
    "wires": [
      [
        "f1db2ae2260f20e3"
      ]
    ]
  },
  {
    "id": "66b111945b5e1913",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 1140,
    "wires": []
  },
  {
    "id": "f1db2ae2260f20e3",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 1140,
    "wires": [
      [
        "66b111945b5e1913",
        "2bbb08ad3d6fb2e7"
      ]
    ]
  },
  {
    "id": "2bbb08ad3d6fb2e7",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 1140,
    "wires": []
  },
  {
    "id": "f103687c11ea3ee0",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 1180,
    "wires": [
      [
        "4975a24373c79b2c"
      ]
    ]
  },
  {
    "id": "98f41b0107b167fd",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 1180,
    "wires": [
      [
        "a8eb65e5efe039a4"
      ]
    ]
  },
  {
    "id": "a8eb65e5efe039a4",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "c9b54ace990a02ba"
    ],
    "x": 2875,
    "y": 1180,
    "wires": []
  },
  {
    "id": "4975a24373c79b2c",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 1180,
    "wires": [
      [
        "90cd797e07da8c25"
      ]
    ]
  },
  {
    "id": "90cd797e07da8c25",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 1180,
    "wires": [
      [
        "98f41b0107b167fd"
      ]
    ]
  },
  {
    "id": "c9b54ace990a02ba",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "a8eb65e5efe039a4"
    ],
    "x": 2955,
    "y": 1180,
    "wires": [
      [
        "0c6a60331a32e285"
      ]
    ]
  },
  {
    "id": "0c6a60331a32e285",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor137', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 1180,
    "wires": [
      [
        "a0e0e96c51ac4b0e"
      ]
    ]
  },
  {
    "id": "7e74cd460810ca1a",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 1180,
    "wires": []
  },
  {
    "id": "a0e0e96c51ac4b0e",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 1180,
    "wires": [
      [
        "7e74cd460810ca1a",
        "a0f3dc9f88a1843a"
      ]
    ]
  },
  {
    "id": "a0f3dc9f88a1843a",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 1180,
    "wires": []
  },
  {
    "id": "a6bd371bb0ab9231",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 1220,
    "wires": [
      [
        "2c34cb6b29c34b78"
      ]
    ]
  },
  {
    "id": "5e942d2ea2e8f847",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 1220,
    "wires": [
      [
        "34ce334adc5a3a13"
      ]
    ]
  },
  {
    "id": "34ce334adc5a3a13",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "c2c013206b3d9827"
    ],
    "x": 2875,
    "y": 1220,
    "wires": []
  },
  {
    "id": "2c34cb6b29c34b78",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 1220,
    "wires": [
      [
        "2ce4ca00ba306910"
      ]
    ]
  },
  {
    "id": "2ce4ca00ba306910",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 1220,
    "wires": [
      [
        "5e942d2ea2e8f847"
      ]
    ]
  },
  {
    "id": "c2c013206b3d9827",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "34ce334adc5a3a13"
    ],
    "x": 2955,
    "y": 1220,
    "wires": [
      [
        "3bcb17dfec76a209"
      ]
    ]
  },
  {
    "id": "3bcb17dfec76a209",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor138', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 1220,
    "wires": [
      [
        "c5c144553d4738b0"
      ]
    ]
  },
  {
    "id": "fbb0b2cfd8f7821b",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 1220,
    "wires": []
  },
  {
    "id": "c5c144553d4738b0",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 1220,
    "wires": [
      [
        "fbb0b2cfd8f7821b",
        "ddb783b94047844c"
      ]
    ]
  },
  {
    "id": "ddb783b94047844c",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 1220,
    "wires": []
  },
  {
    "id": "6920359bc70bbbfc",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 1260,
    "wires": [
      [
        "72861421d6250dce"
      ]
    ]
  },
  {
    "id": "0eed17c59101efe4",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 1260,
    "wires": [
      [
        "2faa1cfaede5e3ac"
      ]
    ]
  },
  {
    "id": "2faa1cfaede5e3ac",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "c44593df41635bd5"
    ],
    "x": 2875,
    "y": 1260,
    "wires": []
  },
  {
    "id": "72861421d6250dce",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 1260,
    "wires": [
      [
        "c72b5ac19fad1f17"
      ]
    ]
  },
  {
    "id": "c72b5ac19fad1f17",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 1260,
    "wires": [
      [
        "0eed17c59101efe4"
      ]
    ]
  },
  {
    "id": "c44593df41635bd5",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "2faa1cfaede5e3ac"
    ],
    "x": 2955,
    "y": 1260,
    "wires": [
      [
        "3de49c043121e91b"
      ]
    ]
  },
  {
    "id": "3de49c043121e91b",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor139', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 1260,
    "wires": [
      [
        "c5255b93dc3e840c"
      ]
    ]
  },
  {
    "id": "b85147903a360ef5",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 1260,
    "wires": []
  },
  {
    "id": "c5255b93dc3e840c",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 1260,
    "wires": [
      [
        "b85147903a360ef5",
        "f07e55826baf52e4"
      ]
    ]
  },
  {
    "id": "f07e55826baf52e4",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 1260,
    "wires": []
  },
  {
    "id": "9a55a1ea3b831847",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 1300,
    "wires": [
      [
        "8534b3268f80ede5"
      ]
    ]
  },
  {
    "id": "1bfa972b83399af2",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 1300,
    "wires": [
      [
        "777df1159c87b16d"
      ]
    ]
  },
  {
    "id": "777df1159c87b16d",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "060f369700db0bad"
    ],
    "x": 2875,
    "y": 1300,
    "wires": []
  },
  {
    "id": "8534b3268f80ede5",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 1300,
    "wires": [
      [
        "b7ef1d31a421b227"
      ]
    ]
  },
  {
    "id": "b7ef1d31a421b227",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 1300,
    "wires": [
      [
        "1bfa972b83399af2"
      ]
    ]
  },
  {
    "id": "060f369700db0bad",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "777df1159c87b16d"
    ],
    "x": 2955,
    "y": 1300,
    "wires": [
      [
        "acd22f8775e3d0f9"
      ]
    ]
  },
  {
    "id": "acd22f8775e3d0f9",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor140', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 1300,
    "wires": [
      [
        "8494dd5bbfabc099"
      ]
    ]
  },
  {
    "id": "431853c483236c4e",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 1300,
    "wires": []
  },
  {
    "id": "8494dd5bbfabc099",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 1300,
    "wires": [
      [
        "431853c483236c4e",
        "90b51f92e5cd1d66"
      ]
    ]
  },
  {
    "id": "90b51f92e5cd1d66",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 1300,
    "wires": []
  },
  {
    "id": "cf2e19bd8d9d59aa",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 1380,
    "wires": [
      [
        "1764eb478b716c53"
      ]
    ]
  },
  {
    "id": "7a727c7636148462",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 1380,
    "wires": [
      [
        "48bbb3a33260ad4c"
      ]
    ]
  },
  {
    "id": "48bbb3a33260ad4c",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "aadea45a3b96e97b"
    ],
    "x": 2875,
    "y": 1380,
    "wires": []
  },
  {
    "id": "1764eb478b716c53",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 1380,
    "wires": [
      [
        "fc3369aed7fb5260"
      ]
    ]
  },
  {
    "id": "733f1945f39f349d",
    "type": "comment",
    "z": "e61d7807.20aac8",
    "name": "151-160",
    "info": "",
    "x": 2080,
    "y": 1340,
    "wires": []
  },
  {
    "id": "fc3369aed7fb5260",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 1380,
    "wires": [
      [
        "7a727c7636148462"
      ]
    ]
  },
  {
    "id": "aadea45a3b96e97b",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "48bbb3a33260ad4c"
    ],
    "x": 2955,
    "y": 1380,
    "wires": [
      [
        "ec1c0e3535833a79"
      ]
    ]
  },
  {
    "id": "ec1c0e3535833a79",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor141', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 1380,
    "wires": [
      [
        "f52a3311bcae8b6f"
      ]
    ]
  },
  {
    "id": "07f09916c5423f21",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 1380,
    "wires": []
  },
  {
    "id": "f52a3311bcae8b6f",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 1380,
    "wires": [
      [
        "07f09916c5423f21",
        "0507335330873415"
      ]
    ]
  },
  {
    "id": "0507335330873415",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 1380,
    "wires": []
  },
  {
    "id": "736d0ef3f1f9b459",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 1420,
    "wires": [
      [
        "997d36b9a2b60308"
      ]
    ]
  },
  {
    "id": "938f76c24fce589b",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 1420,
    "wires": [
      [
        "5586c0dc238f59d1"
      ]
    ]
  },
  {
    "id": "5586c0dc238f59d1",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "b26f6202a3505a9b"
    ],
    "x": 2875,
    "y": 1420,
    "wires": []
  },
  {
    "id": "997d36b9a2b60308",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 1420,
    "wires": [
      [
        "4e673c2f54e98fc7"
      ]
    ]
  },
  {
    "id": "4e673c2f54e98fc7",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 1420,
    "wires": [
      [
        "938f76c24fce589b"
      ]
    ]
  },
  {
    "id": "b26f6202a3505a9b",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "5586c0dc238f59d1"
    ],
    "x": 2955,
    "y": 1420,
    "wires": [
      [
        "5afd43211353a86f"
      ]
    ]
  },
  {
    "id": "5afd43211353a86f",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor142', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 1420,
    "wires": [
      [
        "716ec94ec5303240"
      ]
    ]
  },
  {
    "id": "8cfbd9b9698159a9",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 1420,
    "wires": []
  },
  {
    "id": "716ec94ec5303240",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 1420,
    "wires": [
      [
        "8cfbd9b9698159a9",
        "1039847f7046802d"
      ]
    ]
  },
  {
    "id": "1039847f7046802d",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 1420,
    "wires": []
  },
  {
    "id": "709ae31d1c2ca2b4",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 1460,
    "wires": [
      [
        "42e90549ebc60174"
      ]
    ]
  },
  {
    "id": "22895b997ab37bf1",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 1460,
    "wires": [
      [
        "30a28e85c61a7cd2"
      ]
    ]
  },
  {
    "id": "30a28e85c61a7cd2",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "04108741d3d79a84"
    ],
    "x": 2875,
    "y": 1460,
    "wires": []
  },
  {
    "id": "42e90549ebc60174",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 1460,
    "wires": [
      [
        "6781c315f9a8c392"
      ]
    ]
  },
  {
    "id": "6781c315f9a8c392",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 1460,
    "wires": [
      [
        "22895b997ab37bf1"
      ]
    ]
  },
  {
    "id": "04108741d3d79a84",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "30a28e85c61a7cd2"
    ],
    "x": 2955,
    "y": 1460,
    "wires": [
      [
        "0c2440937e5be0e8"
      ]
    ]
  },
  {
    "id": "0c2440937e5be0e8",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor143', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 1460,
    "wires": [
      [
        "e59ec9909741befb"
      ]
    ]
  },
  {
    "id": "109abfc850cad447",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 1460,
    "wires": []
  },
  {
    "id": "e59ec9909741befb",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 1460,
    "wires": [
      [
        "109abfc850cad447",
        "26158a939aa56120"
      ]
    ]
  },
  {
    "id": "26158a939aa56120",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 1460,
    "wires": []
  },
  {
    "id": "47f06f1209c152e1",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 1500,
    "wires": [
      [
        "a145cae3f78cdf3c"
      ]
    ]
  },
  {
    "id": "eaf73154a2d2f264",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 1500,
    "wires": [
      [
        "65386ee752fa76ea"
      ]
    ]
  },
  {
    "id": "65386ee752fa76ea",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "7d682aa449a094ef"
    ],
    "x": 2875,
    "y": 1500,
    "wires": []
  },
  {
    "id": "a145cae3f78cdf3c",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 1500,
    "wires": [
      [
        "ab2b58e680531420"
      ]
    ]
  },
  {
    "id": "ab2b58e680531420",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 1500,
    "wires": [
      [
        "eaf73154a2d2f264"
      ]
    ]
  },
  {
    "id": "7d682aa449a094ef",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "65386ee752fa76ea"
    ],
    "x": 2955,
    "y": 1500,
    "wires": [
      [
        "843401eae959fb78"
      ]
    ]
  },
  {
    "id": "843401eae959fb78",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor144', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 1500,
    "wires": [
      [
        "f7bcfd9ced8f1a66"
      ]
    ]
  },
  {
    "id": "b3a94b4db9a946cd",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 1500,
    "wires": []
  },
  {
    "id": "f7bcfd9ced8f1a66",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 1500,
    "wires": [
      [
        "b3a94b4db9a946cd",
        "2d301490ef59c0d4"
      ]
    ]
  },
  {
    "id": "2d301490ef59c0d4",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 1500,
    "wires": []
  },
  {
    "id": "faa2aa64ad02a7a2",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 1540,
    "wires": [
      [
        "25dd08049b5fa49a"
      ]
    ]
  },
  {
    "id": "dd67d084d1447ea4",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 1540,
    "wires": [
      [
        "244ce230a5e826ed"
      ]
    ]
  },
  {
    "id": "244ce230a5e826ed",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "0e67fef93bf246d6"
    ],
    "x": 2875,
    "y": 1540,
    "wires": []
  },
  {
    "id": "25dd08049b5fa49a",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 1540,
    "wires": [
      [
        "3f96a8915b4a6cb0"
      ]
    ]
  },
  {
    "id": "3f96a8915b4a6cb0",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 1540,
    "wires": [
      [
        "dd67d084d1447ea4"
      ]
    ]
  },
  {
    "id": "0e67fef93bf246d6",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "244ce230a5e826ed"
    ],
    "x": 2955,
    "y": 1540,
    "wires": [
      [
        "f8638cdbeb5ad7c5"
      ]
    ]
  },
  {
    "id": "f8638cdbeb5ad7c5",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor145', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 1540,
    "wires": [
      [
        "4738dfd0d3b8ebac"
      ]
    ]
  },
  {
    "id": "f253be6254db39e2",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 1540,
    "wires": []
  },
  {
    "id": "4738dfd0d3b8ebac",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 1540,
    "wires": [
      [
        "f253be6254db39e2",
        "f85e319eca215fdb"
      ]
    ]
  },
  {
    "id": "f85e319eca215fdb",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 1540,
    "wires": []
  },
  {
    "id": "5d7fa1e1ee205927",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 1580,
    "wires": [
      [
        "eb4215d37a09a2fe"
      ]
    ]
  },
  {
    "id": "28140bddf7310f4d",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 1580,
    "wires": [
      [
        "c3fe3e96348cff49"
      ]
    ]
  },
  {
    "id": "c3fe3e96348cff49",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "4b9d71ab0516899d"
    ],
    "x": 2875,
    "y": 1580,
    "wires": []
  },
  {
    "id": "eb4215d37a09a2fe",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 1580,
    "wires": [
      [
        "58f01314e9405862"
      ]
    ]
  },
  {
    "id": "58f01314e9405862",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 1580,
    "wires": [
      [
        "28140bddf7310f4d"
      ]
    ]
  },
  {
    "id": "4b9d71ab0516899d",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "c3fe3e96348cff49"
    ],
    "x": 2955,
    "y": 1580,
    "wires": [
      [
        "2524b688f815761b"
      ]
    ]
  },
  {
    "id": "2524b688f815761b",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor146', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 1580,
    "wires": [
      [
        "37694e2e152a88b2"
      ]
    ]
  },
  {
    "id": "c67a600f9451d5dc",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 1580,
    "wires": []
  },
  {
    "id": "37694e2e152a88b2",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 1580,
    "wires": [
      [
        "c67a600f9451d5dc",
        "db036f6301f8fa33"
      ]
    ]
  },
  {
    "id": "db036f6301f8fa33",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 1580,
    "wires": []
  },
  {
    "id": "c8952dfb67d3d23f",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 1620,
    "wires": [
      [
        "b6a14b5ba80c2e6b"
      ]
    ]
  },
  {
    "id": "f9895cf2d4dc4a50",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 1620,
    "wires": [
      [
        "d4565bd367b8d314"
      ]
    ]
  },
  {
    "id": "d4565bd367b8d314",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "e865f15103a242fb"
    ],
    "x": 2875,
    "y": 1620,
    "wires": []
  },
  {
    "id": "b6a14b5ba80c2e6b",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 1620,
    "wires": [
      [
        "6ddbc5950165cb2e"
      ]
    ]
  },
  {
    "id": "6ddbc5950165cb2e",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 1620,
    "wires": [
      [
        "f9895cf2d4dc4a50"
      ]
    ]
  },
  {
    "id": "e865f15103a242fb",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "d4565bd367b8d314"
    ],
    "x": 2955,
    "y": 1620,
    "wires": [
      [
        "08b02c65934540fc"
      ]
    ]
  },
  {
    "id": "08b02c65934540fc",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor147', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 1620,
    "wires": [
      [
        "4669b72fb7340075"
      ]
    ]
  },
  {
    "id": "c51dff6deab96f28",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 1620,
    "wires": []
  },
  {
    "id": "4669b72fb7340075",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 1620,
    "wires": [
      [
        "c51dff6deab96f28",
        "10d7d4f0dd1b3990"
      ]
    ]
  },
  {
    "id": "10d7d4f0dd1b3990",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 1620,
    "wires": []
  },
  {
    "id": "d0bead9b2b04e653",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 1660,
    "wires": [
      [
        "f18ce8502a161584"
      ]
    ]
  },
  {
    "id": "aeb04fca9e85cbd9",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 1660,
    "wires": [
      [
        "5128e285a3e81538"
      ]
    ]
  },
  {
    "id": "5128e285a3e81538",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "357e7a6e3ca656d6"
    ],
    "x": 2875,
    "y": 1660,
    "wires": []
  },
  {
    "id": "f18ce8502a161584",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 1660,
    "wires": [
      [
        "8f52af52fae1b013"
      ]
    ]
  },
  {
    "id": "8f52af52fae1b013",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 1660,
    "wires": [
      [
        "aeb04fca9e85cbd9"
      ]
    ]
  },
  {
    "id": "357e7a6e3ca656d6",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "5128e285a3e81538"
    ],
    "x": 2955,
    "y": 1660,
    "wires": [
      [
        "95fa57396d531f4a"
      ]
    ]
  },
  {
    "id": "95fa57396d531f4a",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor148', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 1660,
    "wires": [
      [
        "5d02a6dbd5573a9d"
      ]
    ]
  },
  {
    "id": "e01b80d47cef98e8",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 1660,
    "wires": []
  },
  {
    "id": "5d02a6dbd5573a9d",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 1660,
    "wires": [
      [
        "e01b80d47cef98e8",
        "4c37fac95f542c43"
      ]
    ]
  },
  {
    "id": "4c37fac95f542c43",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 1660,
    "wires": []
  },
  {
    "id": "93d62832f9d89906",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 1700,
    "wires": [
      [
        "14addb914d7c617c"
      ]
    ]
  },
  {
    "id": "eafabcae695adfdc",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 1700,
    "wires": [
      [
        "8605beabd09a79d8"
      ]
    ]
  },
  {
    "id": "8605beabd09a79d8",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "8cd0823f6ddd7676"
    ],
    "x": 2875,
    "y": 1700,
    "wires": []
  },
  {
    "id": "14addb914d7c617c",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 1700,
    "wires": [
      [
        "ebd948d387090bac"
      ]
    ]
  },
  {
    "id": "ebd948d387090bac",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 1700,
    "wires": [
      [
        "eafabcae695adfdc"
      ]
    ]
  },
  {
    "id": "8cd0823f6ddd7676",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "8605beabd09a79d8"
    ],
    "x": 2955,
    "y": 1700,
    "wires": [
      [
        "62abd67101fdb344"
      ]
    ]
  },
  {
    "id": "62abd67101fdb344",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor149', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 1700,
    "wires": [
      [
        "ea8c2bbcdda6f7d1"
      ]
    ]
  },
  {
    "id": "73f181554803313a",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 1700,
    "wires": []
  },
  {
    "id": "ea8c2bbcdda6f7d1",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 1700,
    "wires": [
      [
        "73f181554803313a",
        "9f45a89411f005fc"
      ]
    ]
  },
  {
    "id": "9f45a89411f005fc",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 1700,
    "wires": []
  },
  {
    "id": "2905259ce7c9ae27",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 1740,
    "wires": [
      [
        "bb308b26341fb017"
      ]
    ]
  },
  {
    "id": "57d87f2e5c20dad2",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 1740,
    "wires": [
      [
        "2793b9f01465240c"
      ]
    ]
  },
  {
    "id": "2793b9f01465240c",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "971ccb4658588bd8"
    ],
    "x": 2875,
    "y": 1740,
    "wires": []
  },
  {
    "id": "bb308b26341fb017",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 1740,
    "wires": [
      [
        "f111225c1bdb7c2a"
      ]
    ]
  },
  {
    "id": "f111225c1bdb7c2a",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 1740,
    "wires": [
      [
        "57d87f2e5c20dad2"
      ]
    ]
  },
  {
    "id": "971ccb4658588bd8",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "2793b9f01465240c"
    ],
    "x": 2955,
    "y": 1740,
    "wires": [
      [
        "8fc8525527ce71f0"
      ]
    ]
  },
  {
    "id": "8fc8525527ce71f0",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor150', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 1740,
    "wires": [
      [
        "59963b9fd73c9daf"
      ]
    ]
  },
  {
    "id": "bc4f9b5611eb5a34",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 1740,
    "wires": []
  },
  {
    "id": "59963b9fd73c9daf",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 1740,
    "wires": [
      [
        "bc4f9b5611eb5a34",
        "f7083b759eed0774"
      ]
    ]
  },
  {
    "id": "f7083b759eed0774",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 1740,
    "wires": []
  },
  {
    "id": "e2e4b72b7269b98a",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 1820,
    "wires": [
      [
        "9c770376d1bfa61a"
      ]
    ]
  },
  {
    "id": "e70af7f599b87ec5",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 1820,
    "wires": [
      [
        "b5279c260145ae84"
      ]
    ]
  },
  {
    "id": "b5279c260145ae84",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "e2eaa6507dff49b0"
    ],
    "x": 2875,
    "y": 1820,
    "wires": []
  },
  {
    "id": "9c770376d1bfa61a",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 1820,
    "wires": [
      [
        "26b8fa7c72f1fc92"
      ]
    ]
  },
  {
    "id": "bde43637a24dd077",
    "type": "comment",
    "z": "e61d7807.20aac8",
    "name": "161-170",
    "info": "",
    "x": 2080,
    "y": 1780,
    "wires": []
  },
  {
    "id": "26b8fa7c72f1fc92",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 1820,
    "wires": [
      [
        "e70af7f599b87ec5"
      ]
    ]
  },
  {
    "id": "e2eaa6507dff49b0",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "b5279c260145ae84"
    ],
    "x": 2955,
    "y": 1820,
    "wires": [
      [
        "855d4c75dd1b96c2"
      ]
    ]
  },
  {
    "id": "855d4c75dd1b96c2",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor151', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 1820,
    "wires": [
      [
        "c2b6f962bbe38c65"
      ]
    ]
  },
  {
    "id": "5f0f46972d5e85dc",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 1820,
    "wires": []
  },
  {
    "id": "c2b6f962bbe38c65",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 1820,
    "wires": [
      [
        "5f0f46972d5e85dc",
        "fc9a691fc473d206"
      ]
    ]
  },
  {
    "id": "fc9a691fc473d206",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 1820,
    "wires": []
  },
  {
    "id": "71ef3386383ead6d",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 1860,
    "wires": [
      [
        "9f4390ac758e25ee"
      ]
    ]
  },
  {
    "id": "3f6275c45dfbf164",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 1860,
    "wires": [
      [
        "80677b94e0f007c6"
      ]
    ]
  },
  {
    "id": "80677b94e0f007c6",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "d46f8eb7507e1de5"
    ],
    "x": 2875,
    "y": 1860,
    "wires": []
  },
  {
    "id": "9f4390ac758e25ee",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 1860,
    "wires": [
      [
        "eb8df0949b733279"
      ]
    ]
  },
  {
    "id": "eb8df0949b733279",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 1860,
    "wires": [
      [
        "3f6275c45dfbf164"
      ]
    ]
  },
  {
    "id": "d46f8eb7507e1de5",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "80677b94e0f007c6"
    ],
    "x": 2955,
    "y": 1860,
    "wires": [
      [
        "1f50e51cb5f9107d"
      ]
    ]
  },
  {
    "id": "1f50e51cb5f9107d",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor152', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 1860,
    "wires": [
      [
        "24a322011949b3fa"
      ]
    ]
  },
  {
    "id": "96131281f92e88da",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 1860,
    "wires": []
  },
  {
    "id": "24a322011949b3fa",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 1860,
    "wires": [
      [
        "96131281f92e88da",
        "d51528192b6fa717"
      ]
    ]
  },
  {
    "id": "d51528192b6fa717",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 1860,
    "wires": []
  },
  {
    "id": "0fcceacdf4844b13",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 1900,
    "wires": [
      [
        "c06abb13ef606a73"
      ]
    ]
  },
  {
    "id": "7e23396514e152b4",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 1900,
    "wires": [
      [
        "093b2e4f370b3ba9"
      ]
    ]
  },
  {
    "id": "093b2e4f370b3ba9",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "1389871a18b82ed9"
    ],
    "x": 2875,
    "y": 1900,
    "wires": []
  },
  {
    "id": "c06abb13ef606a73",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 1900,
    "wires": [
      [
        "f6c76b967c02a86c"
      ]
    ]
  },
  {
    "id": "f6c76b967c02a86c",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 1900,
    "wires": [
      [
        "7e23396514e152b4"
      ]
    ]
  },
  {
    "id": "1389871a18b82ed9",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "093b2e4f370b3ba9"
    ],
    "x": 2955,
    "y": 1900,
    "wires": [
      [
        "92275817d984b3a3"
      ]
    ]
  },
  {
    "id": "92275817d984b3a3",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor153', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 1900,
    "wires": [
      [
        "4e6373eb0007b1fe"
      ]
    ]
  },
  {
    "id": "c1085d78bb09919a",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 1900,
    "wires": []
  },
  {
    "id": "4e6373eb0007b1fe",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 1900,
    "wires": [
      [
        "c1085d78bb09919a",
        "41ff585ddd1e2a1d"
      ]
    ]
  },
  {
    "id": "41ff585ddd1e2a1d",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 1900,
    "wires": []
  },
  {
    "id": "569cae9a9a5563cb",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 1940,
    "wires": [
      [
        "b0b4dbdc2d195913"
      ]
    ]
  },
  {
    "id": "4adcf2dd9b876c4d",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 1940,
    "wires": [
      [
        "44b79465ecfae1b4"
      ]
    ]
  },
  {
    "id": "44b79465ecfae1b4",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "8d0e1658de5ff9f1"
    ],
    "x": 2875,
    "y": 1940,
    "wires": []
  },
  {
    "id": "b0b4dbdc2d195913",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 1940,
    "wires": [
      [
        "ad7fa2c311def2fc"
      ]
    ]
  },
  {
    "id": "ad7fa2c311def2fc",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 1940,
    "wires": [
      [
        "4adcf2dd9b876c4d"
      ]
    ]
  },
  {
    "id": "8d0e1658de5ff9f1",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "44b79465ecfae1b4"
    ],
    "x": 2955,
    "y": 1940,
    "wires": [
      [
        "4f438df0703d3b73"
      ]
    ]
  },
  {
    "id": "4f438df0703d3b73",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor154', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 1940,
    "wires": [
      [
        "cc47d6f6d6ec76f7"
      ]
    ]
  },
  {
    "id": "f1de92fae9278110",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 1940,
    "wires": []
  },
  {
    "id": "cc47d6f6d6ec76f7",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 1940,
    "wires": [
      [
        "f1de92fae9278110",
        "647a52309397c727"
      ]
    ]
  },
  {
    "id": "647a52309397c727",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 1940,
    "wires": []
  },
  {
    "id": "9180399760cc8c5b",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 1980,
    "wires": [
      [
        "8b6b847a11c960bf"
      ]
    ]
  },
  {
    "id": "f918897612dd4186",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 1980,
    "wires": [
      [
        "2abd152a62a9426d"
      ]
    ]
  },
  {
    "id": "2abd152a62a9426d",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "9b4ec3bed77fd4e8"
    ],
    "x": 2875,
    "y": 1980,
    "wires": []
  },
  {
    "id": "8b6b847a11c960bf",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 1980,
    "wires": [
      [
        "513a5ad28f1c4cbe"
      ]
    ]
  },
  {
    "id": "513a5ad28f1c4cbe",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 1980,
    "wires": [
      [
        "f918897612dd4186"
      ]
    ]
  },
  {
    "id": "9b4ec3bed77fd4e8",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "2abd152a62a9426d"
    ],
    "x": 2955,
    "y": 1980,
    "wires": [
      [
        "8331b67d020637c1"
      ]
    ]
  },
  {
    "id": "8331b67d020637c1",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor155', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 1980,
    "wires": [
      [
        "3b7df2dae1081bd1"
      ]
    ]
  },
  {
    "id": "1ee86d879cb91c9b",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 1980,
    "wires": []
  },
  {
    "id": "3b7df2dae1081bd1",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 1980,
    "wires": [
      [
        "1ee86d879cb91c9b",
        "682bf296e8ac5c87"
      ]
    ]
  },
  {
    "id": "682bf296e8ac5c87",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 1980,
    "wires": []
  },
  {
    "id": "c51825ea4e778c42",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 2020,
    "wires": [
      [
        "33602d55146c2933"
      ]
    ]
  },
  {
    "id": "f5160ca8a7dfafb1",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 2020,
    "wires": [
      [
        "7dbb58d222715f1a"
      ]
    ]
  },
  {
    "id": "7dbb58d222715f1a",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "c2e25bf39e0f19b5"
    ],
    "x": 2875,
    "y": 2020,
    "wires": []
  },
  {
    "id": "33602d55146c2933",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 2020,
    "wires": [
      [
        "67685310b4166728"
      ]
    ]
  },
  {
    "id": "67685310b4166728",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 2020,
    "wires": [
      [
        "f5160ca8a7dfafb1"
      ]
    ]
  },
  {
    "id": "c2e25bf39e0f19b5",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "7dbb58d222715f1a"
    ],
    "x": 2955,
    "y": 2020,
    "wires": [
      [
        "485bf0970ea016e1"
      ]
    ]
  },
  {
    "id": "485bf0970ea016e1",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor156', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 2020,
    "wires": [
      [
        "7e66261e73e9882d"
      ]
    ]
  },
  {
    "id": "6d3105c83a9457fe",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 2020,
    "wires": []
  },
  {
    "id": "7e66261e73e9882d",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 2020,
    "wires": [
      [
        "6d3105c83a9457fe",
        "98826d23df2a8904"
      ]
    ]
  },
  {
    "id": "98826d23df2a8904",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 2020,
    "wires": []
  },
  {
    "id": "15c32b9b26d9505d",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 2060,
    "wires": [
      [
        "fd3f2f2710ca0af1"
      ]
    ]
  },
  {
    "id": "6c9c25d006dab319",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 2060,
    "wires": [
      [
        "629594e881fa0d72"
      ]
    ]
  },
  {
    "id": "629594e881fa0d72",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "6de1c86a15a45ad1"
    ],
    "x": 2875,
    "y": 2060,
    "wires": []
  },
  {
    "id": "fd3f2f2710ca0af1",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 2060,
    "wires": [
      [
        "3e3cdf4cba7e3359"
      ]
    ]
  },
  {
    "id": "3e3cdf4cba7e3359",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 2060,
    "wires": [
      [
        "6c9c25d006dab319"
      ]
    ]
  },
  {
    "id": "6de1c86a15a45ad1",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "629594e881fa0d72"
    ],
    "x": 2955,
    "y": 2060,
    "wires": [
      [
        "8befe3374d5c44e4"
      ]
    ]
  },
  {
    "id": "8befe3374d5c44e4",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor157', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 2060,
    "wires": [
      [
        "3543ba38da9cd731"
      ]
    ]
  },
  {
    "id": "db6c50b04a52586c",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 2060,
    "wires": []
  },
  {
    "id": "3543ba38da9cd731",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 2060,
    "wires": [
      [
        "db6c50b04a52586c",
        "7e914d5391f5aeef"
      ]
    ]
  },
  {
    "id": "7e914d5391f5aeef",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 2060,
    "wires": []
  },
  {
    "id": "af4880923ce2c51f",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 2100,
    "wires": [
      [
        "505c6234bb5ee6e6"
      ]
    ]
  },
  {
    "id": "5327bab8321fae3d",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 2100,
    "wires": [
      [
        "7f7d5d2fff44eee7"
      ]
    ]
  },
  {
    "id": "7f7d5d2fff44eee7",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "adca38f88a2fb2a4"
    ],
    "x": 2875,
    "y": 2100,
    "wires": []
  },
  {
    "id": "505c6234bb5ee6e6",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 2100,
    "wires": [
      [
        "1cf266808289b02b"
      ]
    ]
  },
  {
    "id": "1cf266808289b02b",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 2100,
    "wires": [
      [
        "5327bab8321fae3d"
      ]
    ]
  },
  {
    "id": "adca38f88a2fb2a4",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "7f7d5d2fff44eee7"
    ],
    "x": 2955,
    "y": 2100,
    "wires": [
      [
        "1e66179959b683f3"
      ]
    ]
  },
  {
    "id": "1e66179959b683f3",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor158', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 2100,
    "wires": [
      [
        "e7f30225f8a47140"
      ]
    ]
  },
  {
    "id": "38bccc4ebe64b69a",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 2100,
    "wires": []
  },
  {
    "id": "e7f30225f8a47140",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 2100,
    "wires": [
      [
        "38bccc4ebe64b69a",
        "37553bb0ddb756f6"
      ]
    ]
  },
  {
    "id": "37553bb0ddb756f6",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 2100,
    "wires": []
  },
  {
    "id": "50b2c9827448406d",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 2140,
    "wires": [
      [
        "25a846f33777c2f8"
      ]
    ]
  },
  {
    "id": "5a0bc0f9e79f580a",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 2140,
    "wires": [
      [
        "b3a1f691421689bb"
      ]
    ]
  },
  {
    "id": "b3a1f691421689bb",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "4cfb05c3716252f7"
    ],
    "x": 2875,
    "y": 2140,
    "wires": []
  },
  {
    "id": "25a846f33777c2f8",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 2140,
    "wires": [
      [
        "64c8121e62f45161"
      ]
    ]
  },
  {
    "id": "64c8121e62f45161",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 2140,
    "wires": [
      [
        "5a0bc0f9e79f580a"
      ]
    ]
  },
  {
    "id": "4cfb05c3716252f7",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "b3a1f691421689bb"
    ],
    "x": 2955,
    "y": 2140,
    "wires": [
      [
        "fa136542dff8e566"
      ]
    ]
  },
  {
    "id": "fa136542dff8e566",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor159', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 2140,
    "wires": [
      [
        "22cf0c979492062e"
      ]
    ]
  },
  {
    "id": "95c74034b0ca6213",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 2140,
    "wires": []
  },
  {
    "id": "22cf0c979492062e",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 2140,
    "wires": [
      [
        "95c74034b0ca6213",
        "cb0fc0a202d5c245"
      ]
    ]
  },
  {
    "id": "cb0fc0a202d5c245",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 2140,
    "wires": []
  },
  {
    "id": "d4d7650170c00c2b",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 2180,
    "wires": [
      [
        "59d32c06f4a856b3"
      ]
    ]
  },
  {
    "id": "fa1bd70d19ebba3c",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 2180,
    "wires": [
      [
        "d57a0d8f1354dc24"
      ]
    ]
  },
  {
    "id": "d57a0d8f1354dc24",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "e0b203b3fa8a742f"
    ],
    "x": 2875,
    "y": 2180,
    "wires": []
  },
  {
    "id": "59d32c06f4a856b3",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 2180,
    "wires": [
      [
        "f9a3ec0bfac3286e"
      ]
    ]
  },
  {
    "id": "f9a3ec0bfac3286e",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 2180,
    "wires": [
      [
        "fa1bd70d19ebba3c"
      ]
    ]
  },
  {
    "id": "e0b203b3fa8a742f",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "d57a0d8f1354dc24"
    ],
    "x": 2955,
    "y": 2180,
    "wires": [
      [
        "243fefef96ef4c90"
      ]
    ]
  },
  {
    "id": "243fefef96ef4c90",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor160', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 2180,
    "wires": [
      [
        "17a0644abdb2dc2e"
      ]
    ]
  },
  {
    "id": "f9f58b4adc5a861a",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 2180,
    "wires": []
  },
  {
    "id": "17a0644abdb2dc2e",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 2180,
    "wires": [
      [
        "f9f58b4adc5a861a",
        "918b9c7d8ab61b40"
      ]
    ]
  },
  {
    "id": "918b9c7d8ab61b40",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 2180,
    "wires": []
  },
  {
    "id": "ad498abed9d8321f",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 2260,
    "wires": [
      [
        "27c20df475d2e59a"
      ]
    ]
  },
  {
    "id": "40404a140d7571ca",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 2260,
    "wires": [
      [
        "83cad6d4af66946d"
      ]
    ]
  },
  {
    "id": "83cad6d4af66946d",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "b0a337ee37c33bed"
    ],
    "x": 2875,
    "y": 2260,
    "wires": []
  },
  {
    "id": "27c20df475d2e59a",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 2260,
    "wires": [
      [
        "3da7715a6384eb78"
      ]
    ]
  },
  {
    "id": "522b89b0bebe04fa",
    "type": "comment",
    "z": "e61d7807.20aac8",
    "name": "171-180",
    "info": "",
    "x": 2080,
    "y": 2220,
    "wires": []
  },
  {
    "id": "3da7715a6384eb78",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 2260,
    "wires": [
      [
        "40404a140d7571ca"
      ]
    ]
  },
  {
    "id": "b0a337ee37c33bed",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "83cad6d4af66946d"
    ],
    "x": 2955,
    "y": 2260,
    "wires": [
      [
        "8c8c20e9ec500df5"
      ]
    ]
  },
  {
    "id": "8c8c20e9ec500df5",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor161', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 2260,
    "wires": [
      [
        "1832f544f1d241c5"
      ]
    ]
  },
  {
    "id": "b5ccc75d78f4ab36",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 2260,
    "wires": []
  },
  {
    "id": "1832f544f1d241c5",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 2260,
    "wires": [
      [
        "b5ccc75d78f4ab36",
        "ee8fb10c5f422c61"
      ]
    ]
  },
  {
    "id": "ee8fb10c5f422c61",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 2260,
    "wires": []
  },
  {
    "id": "d1d794d379560512",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 2300,
    "wires": [
      [
        "b39107dfd917d951"
      ]
    ]
  },
  {
    "id": "be971f0a78854a3b",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 2300,
    "wires": [
      [
        "6ec63fb6612e490d"
      ]
    ]
  },
  {
    "id": "6ec63fb6612e490d",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "20a09825468c2167"
    ],
    "x": 2875,
    "y": 2300,
    "wires": []
  },
  {
    "id": "b39107dfd917d951",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 2300,
    "wires": [
      [
        "3ec958fb19244374"
      ]
    ]
  },
  {
    "id": "3ec958fb19244374",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 2300,
    "wires": [
      [
        "be971f0a78854a3b"
      ]
    ]
  },
  {
    "id": "20a09825468c2167",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "6ec63fb6612e490d"
    ],
    "x": 2955,
    "y": 2300,
    "wires": [
      [
        "3bc76163acc3d407"
      ]
    ]
  },
  {
    "id": "3bc76163acc3d407",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor162', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 2300,
    "wires": [
      [
        "97e54d774ed4b157"
      ]
    ]
  },
  {
    "id": "59aa23dee1cf7e64",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 2300,
    "wires": []
  },
  {
    "id": "97e54d774ed4b157",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 2300,
    "wires": [
      [
        "59aa23dee1cf7e64",
        "f1423cecdcf6e3dc"
      ]
    ]
  },
  {
    "id": "f1423cecdcf6e3dc",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 2300,
    "wires": []
  },
  {
    "id": "7986a7f13ed4e7be",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 2340,
    "wires": [
      [
        "09351454b395a8ba"
      ]
    ]
  },
  {
    "id": "1e5f97e6b383f42a",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 2340,
    "wires": [
      [
        "0d85686f744d601c"
      ]
    ]
  },
  {
    "id": "0d85686f744d601c",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "b8389efd4cf146b6"
    ],
    "x": 2875,
    "y": 2340,
    "wires": []
  },
  {
    "id": "09351454b395a8ba",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 2340,
    "wires": [
      [
        "59202ae8846cc778"
      ]
    ]
  },
  {
    "id": "59202ae8846cc778",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 2340,
    "wires": [
      [
        "1e5f97e6b383f42a"
      ]
    ]
  },
  {
    "id": "b8389efd4cf146b6",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "0d85686f744d601c"
    ],
    "x": 2955,
    "y": 2340,
    "wires": [
      [
        "0116aef8b2093f75"
      ]
    ]
  },
  {
    "id": "0116aef8b2093f75",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor163', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 2340,
    "wires": [
      [
        "ae362546bc207e86"
      ]
    ]
  },
  {
    "id": "600a74a6885155de",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 2340,
    "wires": []
  },
  {
    "id": "ae362546bc207e86",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 2340,
    "wires": [
      [
        "600a74a6885155de",
        "bb79189e340d0a5c"
      ]
    ]
  },
  {
    "id": "bb79189e340d0a5c",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 2340,
    "wires": []
  },
  {
    "id": "ddb454745ff0855b",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 2380,
    "wires": [
      [
        "e256833dcacacfd6"
      ]
    ]
  },
  {
    "id": "ddcf9243849b596f",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 2380,
    "wires": [
      [
        "fd76ad384c81c872"
      ]
    ]
  },
  {
    "id": "fd76ad384c81c872",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "beeea356b8ed0f89"
    ],
    "x": 2875,
    "y": 2380,
    "wires": []
  },
  {
    "id": "e256833dcacacfd6",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 2380,
    "wires": [
      [
        "5d4b5ca89e7848e4"
      ]
    ]
  },
  {
    "id": "5d4b5ca89e7848e4",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 2380,
    "wires": [
      [
        "ddcf9243849b596f"
      ]
    ]
  },
  {
    "id": "beeea356b8ed0f89",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fd76ad384c81c872"
    ],
    "x": 2955,
    "y": 2380,
    "wires": [
      [
        "5d944c87505b35b6"
      ]
    ]
  },
  {
    "id": "5d944c87505b35b6",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor164', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 2380,
    "wires": [
      [
        "a085565e991c615b"
      ]
    ]
  },
  {
    "id": "6f475e26c151adf6",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 2380,
    "wires": []
  },
  {
    "id": "a085565e991c615b",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 2380,
    "wires": [
      [
        "6f475e26c151adf6",
        "2cb5eeff6dbf8794"
      ]
    ]
  },
  {
    "id": "2cb5eeff6dbf8794",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 2380,
    "wires": []
  },
  {
    "id": "dc1c2b9caad91f4b",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 2420,
    "wires": [
      [
        "63c79249d5ed5ef4"
      ]
    ]
  },
  {
    "id": "bff516cc727e09e2",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 2420,
    "wires": [
      [
        "a1897eda71d377c6"
      ]
    ]
  },
  {
    "id": "a1897eda71d377c6",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "b3c8c8b4aa38fe19"
    ],
    "x": 2875,
    "y": 2420,
    "wires": []
  },
  {
    "id": "63c79249d5ed5ef4",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 2420,
    "wires": [
      [
        "fbc6005a4d313f47"
      ]
    ]
  },
  {
    "id": "fbc6005a4d313f47",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 2420,
    "wires": [
      [
        "bff516cc727e09e2"
      ]
    ]
  },
  {
    "id": "b3c8c8b4aa38fe19",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "a1897eda71d377c6"
    ],
    "x": 2955,
    "y": 2420,
    "wires": [
      [
        "75b2b4b023294bd5"
      ]
    ]
  },
  {
    "id": "75b2b4b023294bd5",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor165', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 2420,
    "wires": [
      [
        "04a8d2023be8a399"
      ]
    ]
  },
  {
    "id": "cf8ecacbb42d3cc6",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 2420,
    "wires": []
  },
  {
    "id": "04a8d2023be8a399",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 2420,
    "wires": [
      [
        "cf8ecacbb42d3cc6",
        "4388344b491f545e"
      ]
    ]
  },
  {
    "id": "4388344b491f545e",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 2420,
    "wires": []
  },
  {
    "id": "d9665f5f50bfb3f4",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 2460,
    "wires": [
      [
        "323feea39bb0bef0"
      ]
    ]
  },
  {
    "id": "0e01a9affdefc187",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 2460,
    "wires": [
      [
        "2358a3e978b40555"
      ]
    ]
  },
  {
    "id": "2358a3e978b40555",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "49fb869f07fd8a01"
    ],
    "x": 2875,
    "y": 2460,
    "wires": []
  },
  {
    "id": "323feea39bb0bef0",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 2460,
    "wires": [
      [
        "dc86688d258dc57d"
      ]
    ]
  },
  {
    "id": "dc86688d258dc57d",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 2460,
    "wires": [
      [
        "0e01a9affdefc187"
      ]
    ]
  },
  {
    "id": "49fb869f07fd8a01",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "2358a3e978b40555"
    ],
    "x": 2955,
    "y": 2460,
    "wires": [
      [
        "7a989fe07924632a"
      ]
    ]
  },
  {
    "id": "7a989fe07924632a",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor166', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 2460,
    "wires": [
      [
        "ab7a003e5eabc883"
      ]
    ]
  },
  {
    "id": "24ed81eb2d47552f",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 2460,
    "wires": []
  },
  {
    "id": "ab7a003e5eabc883",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 2460,
    "wires": [
      [
        "24ed81eb2d47552f",
        "622c3cce244cab34"
      ]
    ]
  },
  {
    "id": "622c3cce244cab34",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 2460,
    "wires": []
  },
  {
    "id": "33b1abac03ecda18",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 2500,
    "wires": [
      [
        "de425da4ce40b4ee"
      ]
    ]
  },
  {
    "id": "b63099ea41cbb2e2",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 2500,
    "wires": [
      [
        "6ee788e6c686de71"
      ]
    ]
  },
  {
    "id": "6ee788e6c686de71",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "c09787f7144c5f62"
    ],
    "x": 2875,
    "y": 2500,
    "wires": []
  },
  {
    "id": "de425da4ce40b4ee",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 2500,
    "wires": [
      [
        "b93d55f41b9a0934"
      ]
    ]
  },
  {
    "id": "b93d55f41b9a0934",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 2500,
    "wires": [
      [
        "b63099ea41cbb2e2"
      ]
    ]
  },
  {
    "id": "c09787f7144c5f62",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "6ee788e6c686de71"
    ],
    "x": 2955,
    "y": 2500,
    "wires": [
      [
        "d4d0a2878af5b636"
      ]
    ]
  },
  {
    "id": "d4d0a2878af5b636",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor167', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 2500,
    "wires": [
      [
        "d9ac6f84e3a26a95"
      ]
    ]
  },
  {
    "id": "471bb5769320349e",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 2500,
    "wires": []
  },
  {
    "id": "d9ac6f84e3a26a95",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 2500,
    "wires": [
      [
        "471bb5769320349e",
        "a60e0df275de9982"
      ]
    ]
  },
  {
    "id": "a60e0df275de9982",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 2500,
    "wires": []
  },
  {
    "id": "1502c7f501383592",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 2540,
    "wires": [
      [
        "f4509a5299484cb0"
      ]
    ]
  },
  {
    "id": "0246d86e9ab6b873",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 2540,
    "wires": [
      [
        "0eb2c297f593aa93"
      ]
    ]
  },
  {
    "id": "0eb2c297f593aa93",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "8bb747d6852ea89e"
    ],
    "x": 2875,
    "y": 2540,
    "wires": []
  },
  {
    "id": "f4509a5299484cb0",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 2540,
    "wires": [
      [
        "9f12a41c93e70ef8"
      ]
    ]
  },
  {
    "id": "9f12a41c93e70ef8",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 2540,
    "wires": [
      [
        "0246d86e9ab6b873"
      ]
    ]
  },
  {
    "id": "8bb747d6852ea89e",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "0eb2c297f593aa93"
    ],
    "x": 2955,
    "y": 2540,
    "wires": [
      [
        "f7da68b919facddf"
      ]
    ]
  },
  {
    "id": "f7da68b919facddf",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor168', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 2540,
    "wires": [
      [
        "109cd95147a41c0a"
      ]
    ]
  },
  {
    "id": "ea9f9c79acaf9671",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 2540,
    "wires": []
  },
  {
    "id": "109cd95147a41c0a",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 2540,
    "wires": [
      [
        "ea9f9c79acaf9671",
        "109a84284b1d6191"
      ]
    ]
  },
  {
    "id": "109a84284b1d6191",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 2540,
    "wires": []
  },
  {
    "id": "7be6ac6cdcfb6d6b",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 2580,
    "wires": [
      [
        "a9eabf706e5542d0"
      ]
    ]
  },
  {
    "id": "75fa71751ffc3eed",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 2580,
    "wires": [
      [
        "df807471a5cb1b6d"
      ]
    ]
  },
  {
    "id": "df807471a5cb1b6d",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "866539fa4076475a"
    ],
    "x": 2875,
    "y": 2580,
    "wires": []
  },
  {
    "id": "a9eabf706e5542d0",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 2580,
    "wires": [
      [
        "19d27c6f80630bf7"
      ]
    ]
  },
  {
    "id": "19d27c6f80630bf7",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 2580,
    "wires": [
      [
        "75fa71751ffc3eed"
      ]
    ]
  },
  {
    "id": "866539fa4076475a",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "df807471a5cb1b6d"
    ],
    "x": 2955,
    "y": 2580,
    "wires": [
      [
        "492e0d80f5277df0"
      ]
    ]
  },
  {
    "id": "492e0d80f5277df0",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor169', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 2580,
    "wires": [
      [
        "f3524b7651aea6f6"
      ]
    ]
  },
  {
    "id": "a39eedf3c66a7f02",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 2580,
    "wires": []
  },
  {
    "id": "f3524b7651aea6f6",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 2580,
    "wires": [
      [
        "a39eedf3c66a7f02",
        "db221b5862dcc838"
      ]
    ]
  },
  {
    "id": "db221b5862dcc838",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 2580,
    "wires": []
  },
  {
    "id": "a486e8c5c6815305",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 2620,
    "wires": [
      [
        "be6757577f047372"
      ]
    ]
  },
  {
    "id": "a21f12243d49597d",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 2620,
    "wires": [
      [
        "22e45532fad1b9f4"
      ]
    ]
  },
  {
    "id": "22e45532fad1b9f4",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "c6668169125dbde1"
    ],
    "x": 2875,
    "y": 2620,
    "wires": []
  },
  {
    "id": "be6757577f047372",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 2620,
    "wires": [
      [
        "147bf7ef6dac77e7"
      ]
    ]
  },
  {
    "id": "147bf7ef6dac77e7",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 2620,
    "wires": [
      [
        "a21f12243d49597d"
      ]
    ]
  },
  {
    "id": "c6668169125dbde1",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "22e45532fad1b9f4"
    ],
    "x": 2955,
    "y": 2620,
    "wires": [
      [
        "985f72aad7a3aea6"
      ]
    ]
  },
  {
    "id": "985f72aad7a3aea6",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor170', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 2620,
    "wires": [
      [
        "2f57a773914deea2"
      ]
    ]
  },
  {
    "id": "410ed2385aea98d5",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 2620,
    "wires": []
  },
  {
    "id": "2f57a773914deea2",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 2620,
    "wires": [
      [
        "410ed2385aea98d5",
        "9583fd80b8eefd14"
      ]
    ]
  },
  {
    "id": "9583fd80b8eefd14",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 2620,
    "wires": []
  },
  {
    "id": "6a6e9713e42b6721",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 2700,
    "wires": [
      [
        "71ad2de86d617cc0"
      ]
    ]
  },
  {
    "id": "3681bb190e9f8a4f",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 2700,
    "wires": [
      [
        "84f68393a2604bf2"
      ]
    ]
  },
  {
    "id": "84f68393a2604bf2",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "d139de961689d5db"
    ],
    "x": 2875,
    "y": 2700,
    "wires": []
  },
  {
    "id": "71ad2de86d617cc0",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 2700,
    "wires": [
      [
        "ced4189ddf3735a0"
      ]
    ]
  },
  {
    "id": "f6935d2c2f8bea57",
    "type": "comment",
    "z": "e61d7807.20aac8",
    "name": "181-190",
    "info": "",
    "x": 2080,
    "y": 2660,
    "wires": []
  },
  {
    "id": "ced4189ddf3735a0",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 2700,
    "wires": [
      [
        "3681bb190e9f8a4f"
      ]
    ]
  },
  {
    "id": "d139de961689d5db",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "84f68393a2604bf2"
    ],
    "x": 2955,
    "y": 2700,
    "wires": [
      [
        "5b891ce18a400c26"
      ]
    ]
  },
  {
    "id": "5b891ce18a400c26",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor171', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 2700,
    "wires": [
      [
        "881d4d0a16d45fd6"
      ]
    ]
  },
  {
    "id": "507767e0671a26e0",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 2700,
    "wires": []
  },
  {
    "id": "881d4d0a16d45fd6",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 2700,
    "wires": [
      [
        "507767e0671a26e0",
        "2cf736c0fa94b2fa"
      ]
    ]
  },
  {
    "id": "2cf736c0fa94b2fa",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 2700,
    "wires": []
  },
  {
    "id": "8359bb3830938ede",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 2740,
    "wires": [
      [
        "d92a5ec7019458c2"
      ]
    ]
  },
  {
    "id": "7a7ddd730aeca874",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 2740,
    "wires": [
      [
        "518996394767bcd3"
      ]
    ]
  },
  {
    "id": "518996394767bcd3",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "d1caf91a83cc586f"
    ],
    "x": 2875,
    "y": 2740,
    "wires": []
  },
  {
    "id": "d92a5ec7019458c2",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 2740,
    "wires": [
      [
        "1b3888c7476be8b4"
      ]
    ]
  },
  {
    "id": "1b3888c7476be8b4",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 2740,
    "wires": [
      [
        "7a7ddd730aeca874"
      ]
    ]
  },
  {
    "id": "d1caf91a83cc586f",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "518996394767bcd3"
    ],
    "x": 2955,
    "y": 2740,
    "wires": [
      [
        "18341bf779c772f9"
      ]
    ]
  },
  {
    "id": "18341bf779c772f9",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor172', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 2740,
    "wires": [
      [
        "6fbbb6553ecae1b7"
      ]
    ]
  },
  {
    "id": "f57e4dce2c8b41e9",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 2740,
    "wires": []
  },
  {
    "id": "6fbbb6553ecae1b7",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 2740,
    "wires": [
      [
        "f57e4dce2c8b41e9",
        "ca6e4d7d6cb5f594"
      ]
    ]
  },
  {
    "id": "ca6e4d7d6cb5f594",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 2740,
    "wires": []
  },
  {
    "id": "4cd8546e42fd67dd",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 2780,
    "wires": [
      [
        "bf4ac7e24c3a266d"
      ]
    ]
  },
  {
    "id": "a106b19c529fef1e",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 2780,
    "wires": [
      [
        "eece6558e852c819"
      ]
    ]
  },
  {
    "id": "eece6558e852c819",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "ea23184eb43b8339"
    ],
    "x": 2875,
    "y": 2780,
    "wires": []
  },
  {
    "id": "bf4ac7e24c3a266d",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 2780,
    "wires": [
      [
        "b5a30231cfb525ee"
      ]
    ]
  },
  {
    "id": "b5a30231cfb525ee",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 2780,
    "wires": [
      [
        "a106b19c529fef1e"
      ]
    ]
  },
  {
    "id": "ea23184eb43b8339",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "eece6558e852c819"
    ],
    "x": 2955,
    "y": 2780,
    "wires": [
      [
        "2eae661d71f54f30"
      ]
    ]
  },
  {
    "id": "2eae661d71f54f30",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor173', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 2780,
    "wires": [
      [
        "96e324756e8a534b"
      ]
    ]
  },
  {
    "id": "6c7c2f83548908d2",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 2780,
    "wires": []
  },
  {
    "id": "96e324756e8a534b",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 2780,
    "wires": [
      [
        "6c7c2f83548908d2",
        "8b79b897b39dfba1"
      ]
    ]
  },
  {
    "id": "8b79b897b39dfba1",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 2780,
    "wires": []
  },
  {
    "id": "6b88334ddbf056e3",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 2820,
    "wires": [
      [
        "55ee79c9d7ced4ed"
      ]
    ]
  },
  {
    "id": "87ab22f0e9c607d0",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 2820,
    "wires": [
      [
        "44fbc03c3196fe04"
      ]
    ]
  },
  {
    "id": "44fbc03c3196fe04",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "640961bddff2e8d7"
    ],
    "x": 2875,
    "y": 2820,
    "wires": []
  },
  {
    "id": "55ee79c9d7ced4ed",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 2820,
    "wires": [
      [
        "684db11e4552c9f3"
      ]
    ]
  },
  {
    "id": "684db11e4552c9f3",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 2820,
    "wires": [
      [
        "87ab22f0e9c607d0"
      ]
    ]
  },
  {
    "id": "640961bddff2e8d7",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "44fbc03c3196fe04"
    ],
    "x": 2955,
    "y": 2820,
    "wires": [
      [
        "73fc32a9d7e93132"
      ]
    ]
  },
  {
    "id": "73fc32a9d7e93132",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor174', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 2820,
    "wires": [
      [
        "e7949f92340f2927"
      ]
    ]
  },
  {
    "id": "3c5f9c2bd9fb3db3",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 2820,
    "wires": []
  },
  {
    "id": "e7949f92340f2927",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 2820,
    "wires": [
      [
        "3c5f9c2bd9fb3db3",
        "fd6741e032c1571e"
      ]
    ]
  },
  {
    "id": "fd6741e032c1571e",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 2820,
    "wires": []
  },
  {
    "id": "58a0aac476d91a62",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 2860,
    "wires": [
      [
        "013f2a3ec1509975"
      ]
    ]
  },
  {
    "id": "f27e14c54098984e",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 2860,
    "wires": [
      [
        "402eeea7ee5e59da"
      ]
    ]
  },
  {
    "id": "402eeea7ee5e59da",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "485a9443bc9e527c"
    ],
    "x": 2875,
    "y": 2860,
    "wires": []
  },
  {
    "id": "013f2a3ec1509975",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 2860,
    "wires": [
      [
        "b9ed3618be40c169"
      ]
    ]
  },
  {
    "id": "b9ed3618be40c169",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 2860,
    "wires": [
      [
        "f27e14c54098984e"
      ]
    ]
  },
  {
    "id": "485a9443bc9e527c",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "402eeea7ee5e59da"
    ],
    "x": 2955,
    "y": 2860,
    "wires": [
      [
        "0605f86f05ee7345"
      ]
    ]
  },
  {
    "id": "0605f86f05ee7345",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor175', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 2860,
    "wires": [
      [
        "3ccf516a535eab55"
      ]
    ]
  },
  {
    "id": "1832bd8ce50ad018",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 2860,
    "wires": []
  },
  {
    "id": "3ccf516a535eab55",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 2860,
    "wires": [
      [
        "1832bd8ce50ad018",
        "94f6162c2c08e29d"
      ]
    ]
  },
  {
    "id": "94f6162c2c08e29d",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 2860,
    "wires": []
  },
  {
    "id": "a81362f6204005f5",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 2900,
    "wires": [
      [
        "531182bc23d14989"
      ]
    ]
  },
  {
    "id": "954b30d7864c410d",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 2900,
    "wires": [
      [
        "8493fd4935b42251"
      ]
    ]
  },
  {
    "id": "8493fd4935b42251",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "f2090c57d45c058b"
    ],
    "x": 2875,
    "y": 2900,
    "wires": []
  },
  {
    "id": "531182bc23d14989",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 2900,
    "wires": [
      [
        "f7da7eb6e05b5cb4"
      ]
    ]
  },
  {
    "id": "f7da7eb6e05b5cb4",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 2900,
    "wires": [
      [
        "954b30d7864c410d"
      ]
    ]
  },
  {
    "id": "f2090c57d45c058b",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "8493fd4935b42251"
    ],
    "x": 2955,
    "y": 2900,
    "wires": [
      [
        "0a3c0280044d3bd5"
      ]
    ]
  },
  {
    "id": "0a3c0280044d3bd5",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor176', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 2900,
    "wires": [
      [
        "9eb5fe6b63258d86"
      ]
    ]
  },
  {
    "id": "1488d65e3faa9736",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 2900,
    "wires": []
  },
  {
    "id": "9eb5fe6b63258d86",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 2900,
    "wires": [
      [
        "1488d65e3faa9736",
        "416586fe3325e0a7"
      ]
    ]
  },
  {
    "id": "416586fe3325e0a7",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 2900,
    "wires": []
  },
  {
    "id": "2f8d8a4a057bbafc",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 2940,
    "wires": [
      [
        "7b0cbf378651b7ec"
      ]
    ]
  },
  {
    "id": "572ebfb116d8b13d",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 2940,
    "wires": [
      [
        "b2b955906eee74f4"
      ]
    ]
  },
  {
    "id": "b2b955906eee74f4",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "b7814441755e7bf2"
    ],
    "x": 2875,
    "y": 2940,
    "wires": []
  },
  {
    "id": "7b0cbf378651b7ec",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 2940,
    "wires": [
      [
        "63b243d4a5f130d3"
      ]
    ]
  },
  {
    "id": "63b243d4a5f130d3",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 2940,
    "wires": [
      [
        "572ebfb116d8b13d"
      ]
    ]
  },
  {
    "id": "b7814441755e7bf2",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "b2b955906eee74f4"
    ],
    "x": 2955,
    "y": 2940,
    "wires": [
      [
        "903eebb158a9a471"
      ]
    ]
  },
  {
    "id": "903eebb158a9a471",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor177', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 2940,
    "wires": [
      [
        "cc432f6ecf0d4484"
      ]
    ]
  },
  {
    "id": "a0463fb7150265fc",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 2940,
    "wires": []
  },
  {
    "id": "cc432f6ecf0d4484",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 2940,
    "wires": [
      [
        "a0463fb7150265fc",
        "944d8c49b5478dbd"
      ]
    ]
  },
  {
    "id": "944d8c49b5478dbd",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 2940,
    "wires": []
  },
  {
    "id": "245d3de253d1deea",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 2980,
    "wires": [
      [
        "de781c7aa803ba8b"
      ]
    ]
  },
  {
    "id": "d154a3fd11689f6b",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 2980,
    "wires": [
      [
        "cd7df94ddc231fef"
      ]
    ]
  },
  {
    "id": "cd7df94ddc231fef",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "3d055317694b6374"
    ],
    "x": 2875,
    "y": 2980,
    "wires": []
  },
  {
    "id": "de781c7aa803ba8b",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 2980,
    "wires": [
      [
        "d7f6ba9376b1db5e"
      ]
    ]
  },
  {
    "id": "d7f6ba9376b1db5e",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 2980,
    "wires": [
      [
        "d154a3fd11689f6b"
      ]
    ]
  },
  {
    "id": "3d055317694b6374",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "cd7df94ddc231fef"
    ],
    "x": 2955,
    "y": 2980,
    "wires": [
      [
        "b7b2fca3ec93fee2"
      ]
    ]
  },
  {
    "id": "b7b2fca3ec93fee2",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor178', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 2980,
    "wires": [
      [
        "cc25bc7efd520b07"
      ]
    ]
  },
  {
    "id": "748511761d50c32b",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 2980,
    "wires": []
  },
  {
    "id": "cc25bc7efd520b07",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 2980,
    "wires": [
      [
        "748511761d50c32b",
        "130bafb46ee3d781"
      ]
    ]
  },
  {
    "id": "130bafb46ee3d781",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 2980,
    "wires": []
  },
  {
    "id": "ecb08bacf9d04f12",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 3020,
    "wires": [
      [
        "b398bb200d4eb125"
      ]
    ]
  },
  {
    "id": "5b839d4ae0aa98ec",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 3020,
    "wires": [
      [
        "dd0fc83b4cc08a5f"
      ]
    ]
  },
  {
    "id": "dd0fc83b4cc08a5f",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "50083f5fcfbf2f2a"
    ],
    "x": 2875,
    "y": 3020,
    "wires": []
  },
  {
    "id": "b398bb200d4eb125",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 3020,
    "wires": [
      [
        "8c018db2eae83179"
      ]
    ]
  },
  {
    "id": "8c018db2eae83179",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 3020,
    "wires": [
      [
        "5b839d4ae0aa98ec"
      ]
    ]
  },
  {
    "id": "50083f5fcfbf2f2a",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "dd0fc83b4cc08a5f"
    ],
    "x": 2955,
    "y": 3020,
    "wires": [
      [
        "50b6ac81f392e73b"
      ]
    ]
  },
  {
    "id": "50b6ac81f392e73b",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor179', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 3020,
    "wires": [
      [
        "e77209ac85d0c913"
      ]
    ]
  },
  {
    "id": "31533a27667f7231",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 3020,
    "wires": []
  },
  {
    "id": "e77209ac85d0c913",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 3020,
    "wires": [
      [
        "31533a27667f7231",
        "1c50889a1e7ef4f8"
      ]
    ]
  },
  {
    "id": "1c50889a1e7ef4f8",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 3020,
    "wires": []
  },
  {
    "id": "6678a16a5fb8e5a2",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 3060,
    "wires": [
      [
        "db1aa1105a8fac88"
      ]
    ]
  },
  {
    "id": "8d06d40b14957801",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 3060,
    "wires": [
      [
        "82e732fa03de4623"
      ]
    ]
  },
  {
    "id": "82e732fa03de4623",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "8c4d186c17c02453"
    ],
    "x": 2875,
    "y": 3060,
    "wires": []
  },
  {
    "id": "db1aa1105a8fac88",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 3060,
    "wires": [
      [
        "a3c948190d779dbd"
      ]
    ]
  },
  {
    "id": "a3c948190d779dbd",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 3060,
    "wires": [
      [
        "8d06d40b14957801"
      ]
    ]
  },
  {
    "id": "8c4d186c17c02453",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "82e732fa03de4623"
    ],
    "x": 2955,
    "y": 3060,
    "wires": [
      [
        "9f8a2d3ff1725a05"
      ]
    ]
  },
  {
    "id": "9f8a2d3ff1725a05",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor180', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 3060,
    "wires": [
      [
        "6c95336c7672e485"
      ]
    ]
  },
  {
    "id": "0452267b1865c079",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 3060,
    "wires": []
  },
  {
    "id": "6c95336c7672e485",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 3060,
    "wires": [
      [
        "0452267b1865c079",
        "0dba855ffe033887"
      ]
    ]
  },
  {
    "id": "0dba855ffe033887",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 3060,
    "wires": []
  },
  {
    "id": "4a606f830d93101f",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 3140,
    "wires": [
      [
        "e880301f45211b66"
      ]
    ]
  },
  {
    "id": "efe9e58cd78da803",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 3140,
    "wires": [
      [
        "46fc62cfa79b3f1d"
      ]
    ]
  },
  {
    "id": "46fc62cfa79b3f1d",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "49fa637242f03c05"
    ],
    "x": 2875,
    "y": 3140,
    "wires": []
  },
  {
    "id": "e880301f45211b66",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 3140,
    "wires": [
      [
        "b6706a1a85b04b55"
      ]
    ]
  },
  {
    "id": "ddd4dde109ca0152",
    "type": "comment",
    "z": "e61d7807.20aac8",
    "name": "191-200",
    "info": "",
    "x": 2080,
    "y": 3100,
    "wires": []
  },
  {
    "id": "b6706a1a85b04b55",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 3140,
    "wires": [
      [
        "efe9e58cd78da803"
      ]
    ]
  },
  {
    "id": "49fa637242f03c05",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "46fc62cfa79b3f1d"
    ],
    "x": 2955,
    "y": 3140,
    "wires": [
      [
        "8a1e81fb475d0254"
      ]
    ]
  },
  {
    "id": "8a1e81fb475d0254",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor181', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 3140,
    "wires": [
      [
        "57b6235a9f6277af"
      ]
    ]
  },
  {
    "id": "bbb29ee059937041",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 3140,
    "wires": []
  },
  {
    "id": "57b6235a9f6277af",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 3140,
    "wires": [
      [
        "bbb29ee059937041",
        "b454a2db3537f061"
      ]
    ]
  },
  {
    "id": "b454a2db3537f061",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 3140,
    "wires": []
  },
  {
    "id": "efaccc4a5a1661ef",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 3180,
    "wires": [
      [
        "379a592e54284300"
      ]
    ]
  },
  {
    "id": "b5d635e24efd73f3",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 3180,
    "wires": [
      [
        "273325254028f4e9"
      ]
    ]
  },
  {
    "id": "273325254028f4e9",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "de1fd9d5f2c710e7"
    ],
    "x": 2875,
    "y": 3180,
    "wires": []
  },
  {
    "id": "379a592e54284300",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 3180,
    "wires": [
      [
        "7f404b5e4b5b1bb5"
      ]
    ]
  },
  {
    "id": "7f404b5e4b5b1bb5",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 3180,
    "wires": [
      [
        "b5d635e24efd73f3"
      ]
    ]
  },
  {
    "id": "de1fd9d5f2c710e7",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "273325254028f4e9"
    ],
    "x": 2955,
    "y": 3180,
    "wires": [
      [
        "b09265a67ab427e7"
      ]
    ]
  },
  {
    "id": "b09265a67ab427e7",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor182', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 3180,
    "wires": [
      [
        "6c823b659ac9ed5d"
      ]
    ]
  },
  {
    "id": "8f54051e63051fac",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 3180,
    "wires": []
  },
  {
    "id": "6c823b659ac9ed5d",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 3180,
    "wires": [
      [
        "8f54051e63051fac",
        "f6389e21a968da57"
      ]
    ]
  },
  {
    "id": "f6389e21a968da57",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 3180,
    "wires": []
  },
  {
    "id": "3e44b32c75d1a99a",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 3220,
    "wires": [
      [
        "41994772d4ca2ff0"
      ]
    ]
  },
  {
    "id": "ae7daf9139621e63",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 3220,
    "wires": [
      [
        "b58bac3c084714a8"
      ]
    ]
  },
  {
    "id": "b58bac3c084714a8",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "1d3183966f508d13"
    ],
    "x": 2875,
    "y": 3220,
    "wires": []
  },
  {
    "id": "41994772d4ca2ff0",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 3220,
    "wires": [
      [
        "345477288f8ee6ba"
      ]
    ]
  },
  {
    "id": "345477288f8ee6ba",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 3220,
    "wires": [
      [
        "ae7daf9139621e63"
      ]
    ]
  },
  {
    "id": "1d3183966f508d13",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "b58bac3c084714a8"
    ],
    "x": 2955,
    "y": 3220,
    "wires": [
      [
        "c045a86fc0921af4"
      ]
    ]
  },
  {
    "id": "c045a86fc0921af4",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor183', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 3220,
    "wires": [
      [
        "d8dcd2d865779435"
      ]
    ]
  },
  {
    "id": "d9e54b0e6f3693c9",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 3220,
    "wires": []
  },
  {
    "id": "d8dcd2d865779435",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 3220,
    "wires": [
      [
        "d9e54b0e6f3693c9",
        "ea6d790c90316089"
      ]
    ]
  },
  {
    "id": "ea6d790c90316089",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 3220,
    "wires": []
  },
  {
    "id": "74e48b6f8cdcc149",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 3260,
    "wires": [
      [
        "b957e1c0b278549f"
      ]
    ]
  },
  {
    "id": "d0f941051405b746",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 3260,
    "wires": [
      [
        "c0b99b6624ed150b"
      ]
    ]
  },
  {
    "id": "c0b99b6624ed150b",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "9fbe5b0b9ea24c9a"
    ],
    "x": 2875,
    "y": 3260,
    "wires": []
  },
  {
    "id": "b957e1c0b278549f",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 3260,
    "wires": [
      [
        "8d29eb5cd39f2689"
      ]
    ]
  },
  {
    "id": "8d29eb5cd39f2689",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 3260,
    "wires": [
      [
        "d0f941051405b746"
      ]
    ]
  },
  {
    "id": "9fbe5b0b9ea24c9a",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "c0b99b6624ed150b"
    ],
    "x": 2955,
    "y": 3260,
    "wires": [
      [
        "120d73e7a06cb5fb"
      ]
    ]
  },
  {
    "id": "120d73e7a06cb5fb",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor184', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 3260,
    "wires": [
      [
        "4c60778757ddc9dd"
      ]
    ]
  },
  {
    "id": "25762ec6e47a0eb1",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 3260,
    "wires": []
  },
  {
    "id": "4c60778757ddc9dd",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 3260,
    "wires": [
      [
        "25762ec6e47a0eb1",
        "0b07999ba1a8c013"
      ]
    ]
  },
  {
    "id": "0b07999ba1a8c013",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 3260,
    "wires": []
  },
  {
    "id": "a1a6a219b5eb3c41",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 3300,
    "wires": [
      [
        "130e61fb0ce2d33e"
      ]
    ]
  },
  {
    "id": "87995a1147161986",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 3300,
    "wires": [
      [
        "339a2edf6065c532"
      ]
    ]
  },
  {
    "id": "339a2edf6065c532",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "0699b95226b85a22"
    ],
    "x": 2875,
    "y": 3300,
    "wires": []
  },
  {
    "id": "130e61fb0ce2d33e",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 3300,
    "wires": [
      [
        "92fb173f64ed5a55"
      ]
    ]
  },
  {
    "id": "92fb173f64ed5a55",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 3300,
    "wires": [
      [
        "87995a1147161986"
      ]
    ]
  },
  {
    "id": "0699b95226b85a22",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "339a2edf6065c532"
    ],
    "x": 2955,
    "y": 3300,
    "wires": [
      [
        "42782a0fe8e32c3e"
      ]
    ]
  },
  {
    "id": "42782a0fe8e32c3e",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor185', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 3300,
    "wires": [
      [
        "4017557d40b737fd"
      ]
    ]
  },
  {
    "id": "d52c2a5e6e68c613",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 3300,
    "wires": []
  },
  {
    "id": "4017557d40b737fd",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 3300,
    "wires": [
      [
        "d52c2a5e6e68c613",
        "d2744b85f4d0752c"
      ]
    ]
  },
  {
    "id": "d2744b85f4d0752c",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 3300,
    "wires": []
  },
  {
    "id": "996cc75c9f051552",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 3340,
    "wires": [
      [
        "5461f169cde14e4e"
      ]
    ]
  },
  {
    "id": "be185a5b1cb10bbb",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 3340,
    "wires": [
      [
        "32d752de97d2c277"
      ]
    ]
  },
  {
    "id": "32d752de97d2c277",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "5cab6c384309555c"
    ],
    "x": 2875,
    "y": 3340,
    "wires": []
  },
  {
    "id": "5461f169cde14e4e",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 3340,
    "wires": [
      [
        "b369a2e8af0363ed"
      ]
    ]
  },
  {
    "id": "b369a2e8af0363ed",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 3340,
    "wires": [
      [
        "be185a5b1cb10bbb"
      ]
    ]
  },
  {
    "id": "5cab6c384309555c",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "32d752de97d2c277"
    ],
    "x": 2955,
    "y": 3340,
    "wires": [
      [
        "4fd3b3b402db5418"
      ]
    ]
  },
  {
    "id": "4fd3b3b402db5418",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor186', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 3340,
    "wires": [
      [
        "c3b8ea81384fa2e9"
      ]
    ]
  },
  {
    "id": "8821c1a1bdfa0ed2",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 3340,
    "wires": []
  },
  {
    "id": "c3b8ea81384fa2e9",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 3340,
    "wires": [
      [
        "8821c1a1bdfa0ed2",
        "adfe385448ea2a96"
      ]
    ]
  },
  {
    "id": "adfe385448ea2a96",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 3340,
    "wires": []
  },
  {
    "id": "dc3cee2cfab880a4",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 3380,
    "wires": [
      [
        "db4805ce11704385"
      ]
    ]
  },
  {
    "id": "e0c52065fc310fdf",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 3380,
    "wires": [
      [
        "e2256cd645933fad"
      ]
    ]
  },
  {
    "id": "e2256cd645933fad",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "b780d494accb95ca"
    ],
    "x": 2875,
    "y": 3380,
    "wires": []
  },
  {
    "id": "db4805ce11704385",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 3380,
    "wires": [
      [
        "6f2f03695028279e"
      ]
    ]
  },
  {
    "id": "6f2f03695028279e",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 3380,
    "wires": [
      [
        "e0c52065fc310fdf"
      ]
    ]
  },
  {
    "id": "b780d494accb95ca",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "e2256cd645933fad"
    ],
    "x": 2955,
    "y": 3380,
    "wires": [
      [
        "7bf2da0bfd9c41bc"
      ]
    ]
  },
  {
    "id": "7bf2da0bfd9c41bc",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor187', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 3380,
    "wires": [
      [
        "11718c4368e6a6f6"
      ]
    ]
  },
  {
    "id": "e8a090ce8c62f13a",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 3380,
    "wires": []
  },
  {
    "id": "11718c4368e6a6f6",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 3380,
    "wires": [
      [
        "e8a090ce8c62f13a",
        "fe950168fed86b52"
      ]
    ]
  },
  {
    "id": "fe950168fed86b52",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 3380,
    "wires": []
  },
  {
    "id": "b851faa583469145",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 3420,
    "wires": [
      [
        "593c08337dd9a63f"
      ]
    ]
  },
  {
    "id": "c0784295547d350e",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 3420,
    "wires": [
      [
        "09819d81edc130f0"
      ]
    ]
  },
  {
    "id": "09819d81edc130f0",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "1625d27b6d84cee1"
    ],
    "x": 2875,
    "y": 3420,
    "wires": []
  },
  {
    "id": "593c08337dd9a63f",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 3420,
    "wires": [
      [
        "80d3d70045dc3ce6"
      ]
    ]
  },
  {
    "id": "80d3d70045dc3ce6",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 3420,
    "wires": [
      [
        "c0784295547d350e"
      ]
    ]
  },
  {
    "id": "1625d27b6d84cee1",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "09819d81edc130f0"
    ],
    "x": 2955,
    "y": 3420,
    "wires": [
      [
        "a2f2764bafd1254f"
      ]
    ]
  },
  {
    "id": "a2f2764bafd1254f",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor188', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 3420,
    "wires": [
      [
        "a87015c4e41d1b9e"
      ]
    ]
  },
  {
    "id": "9594e46ba37b326b",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 3420,
    "wires": []
  },
  {
    "id": "a87015c4e41d1b9e",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 3420,
    "wires": [
      [
        "9594e46ba37b326b",
        "e86931b5a29e6fd7"
      ]
    ]
  },
  {
    "id": "e86931b5a29e6fd7",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 3420,
    "wires": []
  },
  {
    "id": "93629d4e6df15768",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 3460,
    "wires": [
      [
        "5caf17f0d8151160"
      ]
    ]
  },
  {
    "id": "4068a17ec21b9370",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 3460,
    "wires": [
      [
        "7a4693282dc19e05"
      ]
    ]
  },
  {
    "id": "7a4693282dc19e05",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "d3850b6ea42a3ab8"
    ],
    "x": 2875,
    "y": 3460,
    "wires": []
  },
  {
    "id": "5caf17f0d8151160",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 3460,
    "wires": [
      [
        "6769549fa27eee23"
      ]
    ]
  },
  {
    "id": "6769549fa27eee23",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 3460,
    "wires": [
      [
        "4068a17ec21b9370"
      ]
    ]
  },
  {
    "id": "d3850b6ea42a3ab8",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "7a4693282dc19e05"
    ],
    "x": 2955,
    "y": 3460,
    "wires": [
      [
        "fee1fc83e340de48"
      ]
    ]
  },
  {
    "id": "fee1fc83e340de48",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor189', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 3460,
    "wires": [
      [
        "4e562a05d34b1fe0"
      ]
    ]
  },
  {
    "id": "e28b177865efa9f5",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 3460,
    "wires": []
  },
  {
    "id": "4e562a05d34b1fe0",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 3460,
    "wires": [
      [
        "e28b177865efa9f5",
        "ceb15882d1066dd1"
      ]
    ]
  },
  {
    "id": "ceb15882d1066dd1",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 3460,
    "wires": []
  },
  {
    "id": "2f119520f25d92f9",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 3500,
    "wires": [
      [
        "ff24c7e04cddfc0e"
      ]
    ]
  },
  {
    "id": "d5b2e7e05231a749",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 3500,
    "wires": [
      [
        "366ab40acc02f6fe"
      ]
    ]
  },
  {
    "id": "366ab40acc02f6fe",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "c3271066a6715a14"
    ],
    "x": 2875,
    "y": 3500,
    "wires": []
  },
  {
    "id": "ff24c7e04cddfc0e",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 3500,
    "wires": [
      [
        "27a092f23e4ef334"
      ]
    ]
  },
  {
    "id": "27a092f23e4ef334",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 3500,
    "wires": [
      [
        "d5b2e7e05231a749"
      ]
    ]
  },
  {
    "id": "c3271066a6715a14",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "366ab40acc02f6fe"
    ],
    "x": 2955,
    "y": 3500,
    "wires": [
      [
        "a2cb9cfcf82e9fd4"
      ]
    ]
  },
  {
    "id": "a2cb9cfcf82e9fd4",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor190', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 3500,
    "wires": [
      [
        "7bd4d038c354bf7b"
      ]
    ]
  },
  {
    "id": "a6e14107595b4956",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 3500,
    "wires": []
  },
  {
    "id": "7bd4d038c354bf7b",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 3500,
    "wires": [
      [
        "a6e14107595b4956",
        "fcf300e269cd4a53"
      ]
    ]
  },
  {
    "id": "fcf300e269cd4a53",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 3500,
    "wires": []
  },
  {
    "id": "5bc7373d15cc35b9",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 3580,
    "wires": [
      [
        "6a6b4d6b1e619de1"
      ]
    ]
  },
  {
    "id": "e7f855f24726a856",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 3580,
    "wires": [
      [
        "eb206535161fa7c5"
      ]
    ]
  },
  {
    "id": "eb206535161fa7c5",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "cb31608c39576806"
    ],
    "x": 2875,
    "y": 3580,
    "wires": []
  },
  {
    "id": "6a6b4d6b1e619de1",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 3580,
    "wires": [
      [
        "88d23b1561d46e45"
      ]
    ]
  },
  {
    "id": "3cdbcc76eaf771f3",
    "type": "comment",
    "z": "e61d7807.20aac8",
    "name": "201-210",
    "info": "",
    "x": 2080,
    "y": 3540,
    "wires": []
  },
  {
    "id": "88d23b1561d46e45",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 3580,
    "wires": [
      [
        "e7f855f24726a856"
      ]
    ]
  },
  {
    "id": "cb31608c39576806",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "eb206535161fa7c5"
    ],
    "x": 2955,
    "y": 3580,
    "wires": [
      [
        "61dd0c2b195f9185"
      ]
    ]
  },
  {
    "id": "61dd0c2b195f9185",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor191', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 3580,
    "wires": [
      [
        "627a93ef92d1d38b"
      ]
    ]
  },
  {
    "id": "f8becab93909987c",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 3580,
    "wires": []
  },
  {
    "id": "627a93ef92d1d38b",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 3580,
    "wires": [
      [
        "f8becab93909987c",
        "e96d92747f4dcbc8"
      ]
    ]
  },
  {
    "id": "e96d92747f4dcbc8",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 3580,
    "wires": []
  },
  {
    "id": "d7d2f0192e243fff",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 3620,
    "wires": [
      [
        "4c4b820a0149e9fb"
      ]
    ]
  },
  {
    "id": "1eea5836ed23bded",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 3620,
    "wires": [
      [
        "260cd0b0fe587ace"
      ]
    ]
  },
  {
    "id": "260cd0b0fe587ace",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "ee7d82c86919b97e"
    ],
    "x": 2875,
    "y": 3620,
    "wires": []
  },
  {
    "id": "4c4b820a0149e9fb",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 3620,
    "wires": [
      [
        "01347f88b27172f9"
      ]
    ]
  },
  {
    "id": "01347f88b27172f9",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 3620,
    "wires": [
      [
        "1eea5836ed23bded"
      ]
    ]
  },
  {
    "id": "ee7d82c86919b97e",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "260cd0b0fe587ace"
    ],
    "x": 2955,
    "y": 3620,
    "wires": [
      [
        "dc20e6f98c073411"
      ]
    ]
  },
  {
    "id": "dc20e6f98c073411",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor192', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 3620,
    "wires": [
      [
        "733b6ecf159b655a"
      ]
    ]
  },
  {
    "id": "e30a07a85cf70579",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 3620,
    "wires": []
  },
  {
    "id": "733b6ecf159b655a",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 3620,
    "wires": [
      [
        "e30a07a85cf70579",
        "f8eef0650f99d585"
      ]
    ]
  },
  {
    "id": "f8eef0650f99d585",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 3620,
    "wires": []
  },
  {
    "id": "3c68d2903ee48f79",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 3660,
    "wires": [
      [
        "41f10f6a23cf9dc3"
      ]
    ]
  },
  {
    "id": "4a50a121e264bfc8",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 3660,
    "wires": [
      [
        "9514a78824663267"
      ]
    ]
  },
  {
    "id": "9514a78824663267",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "e1aad0bc3997f226"
    ],
    "x": 2875,
    "y": 3660,
    "wires": []
  },
  {
    "id": "41f10f6a23cf9dc3",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 3660,
    "wires": [
      [
        "6cb1583878677e1e"
      ]
    ]
  },
  {
    "id": "6cb1583878677e1e",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 3660,
    "wires": [
      [
        "4a50a121e264bfc8"
      ]
    ]
  },
  {
    "id": "e1aad0bc3997f226",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "9514a78824663267"
    ],
    "x": 2955,
    "y": 3660,
    "wires": [
      [
        "e8718f6fb39104cc"
      ]
    ]
  },
  {
    "id": "e8718f6fb39104cc",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor193', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 3660,
    "wires": [
      [
        "5cea2b06e424ee0d"
      ]
    ]
  },
  {
    "id": "ecd07be5c75c54b2",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 3660,
    "wires": []
  },
  {
    "id": "5cea2b06e424ee0d",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 3660,
    "wires": [
      [
        "ecd07be5c75c54b2",
        "5842631bbf2cba72"
      ]
    ]
  },
  {
    "id": "5842631bbf2cba72",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 3660,
    "wires": []
  },
  {
    "id": "502d5a82084a8b0f",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 3700,
    "wires": [
      [
        "e7553b3b0701d773"
      ]
    ]
  },
  {
    "id": "8fb80318434ab70b",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 3700,
    "wires": [
      [
        "9e9505c852c979ad"
      ]
    ]
  },
  {
    "id": "9e9505c852c979ad",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "ce445c285376dc51"
    ],
    "x": 2875,
    "y": 3700,
    "wires": []
  },
  {
    "id": "e7553b3b0701d773",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 3700,
    "wires": [
      [
        "a555c8e07e4d497d"
      ]
    ]
  },
  {
    "id": "a555c8e07e4d497d",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 3700,
    "wires": [
      [
        "8fb80318434ab70b"
      ]
    ]
  },
  {
    "id": "ce445c285376dc51",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "9e9505c852c979ad"
    ],
    "x": 2955,
    "y": 3700,
    "wires": [
      [
        "3fe1fa11e4188731"
      ]
    ]
  },
  {
    "id": "3fe1fa11e4188731",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor194', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 3700,
    "wires": [
      [
        "b1074d1b15b110f5"
      ]
    ]
  },
  {
    "id": "9b0b07023ad40876",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 3700,
    "wires": []
  },
  {
    "id": "b1074d1b15b110f5",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 3700,
    "wires": [
      [
        "9b0b07023ad40876",
        "119131fa3f1d8b5d"
      ]
    ]
  },
  {
    "id": "119131fa3f1d8b5d",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 3700,
    "wires": []
  },
  {
    "id": "5b8534d10b74c990",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 3740,
    "wires": [
      [
        "eb857c9d076b4c75"
      ]
    ]
  },
  {
    "id": "d2e5433b04290b02",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 3740,
    "wires": [
      [
        "a53b0dbaa1f94868"
      ]
    ]
  },
  {
    "id": "a53b0dbaa1f94868",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "4071c246c81ea669"
    ],
    "x": 2875,
    "y": 3740,
    "wires": []
  },
  {
    "id": "eb857c9d076b4c75",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 3740,
    "wires": [
      [
        "05c0170da9258070"
      ]
    ]
  },
  {
    "id": "05c0170da9258070",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 3740,
    "wires": [
      [
        "d2e5433b04290b02"
      ]
    ]
  },
  {
    "id": "4071c246c81ea669",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "a53b0dbaa1f94868"
    ],
    "x": 2955,
    "y": 3740,
    "wires": [
      [
        "55265202b866a6bc"
      ]
    ]
  },
  {
    "id": "55265202b866a6bc",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor195', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 3740,
    "wires": [
      [
        "7441128aacf811e5"
      ]
    ]
  },
  {
    "id": "b91fbbe81e9fbb62",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 3740,
    "wires": []
  },
  {
    "id": "7441128aacf811e5",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 3740,
    "wires": [
      [
        "b91fbbe81e9fbb62",
        "099de19a565f7831"
      ]
    ]
  },
  {
    "id": "099de19a565f7831",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 3740,
    "wires": []
  },
  {
    "id": "de31a28b8c59e55e",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 3780,
    "wires": [
      [
        "e413eb24288a283a"
      ]
    ]
  },
  {
    "id": "ccb60f6eafb281a1",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 3780,
    "wires": [
      [
        "14338268b2386360"
      ]
    ]
  },
  {
    "id": "14338268b2386360",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "42227e1791fc3a8c"
    ],
    "x": 2875,
    "y": 3780,
    "wires": []
  },
  {
    "id": "e413eb24288a283a",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 3780,
    "wires": [
      [
        "533dcbb19a0e354e"
      ]
    ]
  },
  {
    "id": "533dcbb19a0e354e",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 3780,
    "wires": [
      [
        "ccb60f6eafb281a1"
      ]
    ]
  },
  {
    "id": "42227e1791fc3a8c",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "14338268b2386360"
    ],
    "x": 2955,
    "y": 3780,
    "wires": [
      [
        "176cdc145e9b7038"
      ]
    ]
  },
  {
    "id": "176cdc145e9b7038",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor196', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 3780,
    "wires": [
      [
        "829b070ff7df60f0"
      ]
    ]
  },
  {
    "id": "e0355a3e50e31185",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 3780,
    "wires": []
  },
  {
    "id": "829b070ff7df60f0",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 3780,
    "wires": [
      [
        "e0355a3e50e31185",
        "be10596f37d913ba"
      ]
    ]
  },
  {
    "id": "be10596f37d913ba",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 3780,
    "wires": []
  },
  {
    "id": "021aeceea51ef485",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 3820,
    "wires": [
      [
        "3005356c977d5ab6"
      ]
    ]
  },
  {
    "id": "3f2cabcbd83c4228",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 3820,
    "wires": [
      [
        "9829c28513315c5b"
      ]
    ]
  },
  {
    "id": "9829c28513315c5b",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "01c31e8e0bb36899"
    ],
    "x": 2875,
    "y": 3820,
    "wires": []
  },
  {
    "id": "3005356c977d5ab6",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 3820,
    "wires": [
      [
        "08d47ee6a3fc14b9"
      ]
    ]
  },
  {
    "id": "08d47ee6a3fc14b9",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 3820,
    "wires": [
      [
        "3f2cabcbd83c4228"
      ]
    ]
  },
  {
    "id": "01c31e8e0bb36899",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "9829c28513315c5b"
    ],
    "x": 2955,
    "y": 3820,
    "wires": [
      [
        "dfc0da8259297e59"
      ]
    ]
  },
  {
    "id": "dfc0da8259297e59",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor197', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 3820,
    "wires": [
      [
        "6c76cdde6d331d7e"
      ]
    ]
  },
  {
    "id": "5d719ea9e0185744",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 3820,
    "wires": []
  },
  {
    "id": "6c76cdde6d331d7e",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 3820,
    "wires": [
      [
        "5d719ea9e0185744",
        "9f84bceaed6d41d0"
      ]
    ]
  },
  {
    "id": "9f84bceaed6d41d0",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 3820,
    "wires": []
  },
  {
    "id": "ee9cd3d91f385a8b",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 3860,
    "wires": [
      [
        "1df493a955871b42"
      ]
    ]
  },
  {
    "id": "705bb3cb95aa22e2",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 3860,
    "wires": [
      [
        "869017eb8b4ac6f9"
      ]
    ]
  },
  {
    "id": "869017eb8b4ac6f9",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "d8fb741151e2e9ee"
    ],
    "x": 2875,
    "y": 3860,
    "wires": []
  },
  {
    "id": "1df493a955871b42",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 3860,
    "wires": [
      [
        "7feb9f145c5f1459"
      ]
    ]
  },
  {
    "id": "7feb9f145c5f1459",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 3860,
    "wires": [
      [
        "705bb3cb95aa22e2"
      ]
    ]
  },
  {
    "id": "d8fb741151e2e9ee",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "869017eb8b4ac6f9"
    ],
    "x": 2955,
    "y": 3860,
    "wires": [
      [
        "1612d1e300b7d6b4"
      ]
    ]
  },
  {
    "id": "1612d1e300b7d6b4",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor198', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 3860,
    "wires": [
      [
        "0d985423ab31035f"
      ]
    ]
  },
  {
    "id": "489cfddd25ab2818",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 3860,
    "wires": []
  },
  {
    "id": "0d985423ab31035f",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 3860,
    "wires": [
      [
        "489cfddd25ab2818",
        "4ac20cdb7424e01f"
      ]
    ]
  },
  {
    "id": "4ac20cdb7424e01f",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 3860,
    "wires": []
  },
  {
    "id": "733061610958d153",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 3900,
    "wires": [
      [
        "727889c6c2f98be5"
      ]
    ]
  },
  {
    "id": "39f64169b99a8e84",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 3900,
    "wires": [
      [
        "bb22f642fad7347b"
      ]
    ]
  },
  {
    "id": "bb22f642fad7347b",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "f1011902ec3443c0"
    ],
    "x": 2875,
    "y": 3900,
    "wires": []
  },
  {
    "id": "727889c6c2f98be5",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 3900,
    "wires": [
      [
        "988880dd029cdbc4"
      ]
    ]
  },
  {
    "id": "988880dd029cdbc4",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 3900,
    "wires": [
      [
        "39f64169b99a8e84"
      ]
    ]
  },
  {
    "id": "f1011902ec3443c0",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "bb22f642fad7347b"
    ],
    "x": 2955,
    "y": 3900,
    "wires": [
      [
        "74b80779aed142c9"
      ]
    ]
  },
  {
    "id": "74b80779aed142c9",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor199', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 3900,
    "wires": [
      [
        "5562df031f5f6b0d"
      ]
    ]
  },
  {
    "id": "42aaca9bd56c958c",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 3900,
    "wires": []
  },
  {
    "id": "5562df031f5f6b0d",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 3900,
    "wires": [
      [
        "42aaca9bd56c958c",
        "787c298146b3fe41"
      ]
    ]
  },
  {
    "id": "787c298146b3fe41",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 3900,
    "wires": []
  },
  {
    "id": "411b34eb2455d4a8",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 3940,
    "wires": [
      [
        "ca03cf593223129a"
      ]
    ]
  },
  {
    "id": "b5749ecdda7b030c",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 3940,
    "wires": [
      [
        "176c443299931bca"
      ]
    ]
  },
  {
    "id": "176c443299931bca",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "c91eabd826465616"
    ],
    "x": 2875,
    "y": 3940,
    "wires": []
  },
  {
    "id": "ca03cf593223129a",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 3940,
    "wires": [
      [
        "925ec529ecc15a7f"
      ]
    ]
  },
  {
    "id": "925ec529ecc15a7f",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 3940,
    "wires": [
      [
        "b5749ecdda7b030c"
      ]
    ]
  },
  {
    "id": "c91eabd826465616",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "176c443299931bca"
    ],
    "x": 2955,
    "y": 3940,
    "wires": [
      [
        "7fc635f9431ab6a6"
      ]
    ]
  },
  {
    "id": "7fc635f9431ab6a6",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor200', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 3940,
    "wires": [
      [
        "79867dfa11da81f2"
      ]
    ]
  },
  {
    "id": "46dae50a79318504",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 3940,
    "wires": []
  },
  {
    "id": "79867dfa11da81f2",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 3940,
    "wires": [
      [
        "46dae50a79318504",
        "ef4e345b924d883f"
      ]
    ]
  },
  {
    "id": "ef4e345b924d883f",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 3940,
    "wires": []
  },
  {
    "id": "278dcf3552fc8270",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 4020,
    "wires": [
      [
        "6e3fa9d0a1d0db5d"
      ]
    ]
  },
  {
    "id": "f73d8a68bfa249f3",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 4020,
    "wires": [
      [
        "8e175cf41ef2f2ff"
      ]
    ]
  },
  {
    "id": "8e175cf41ef2f2ff",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "c673cfb022daab02"
    ],
    "x": 2875,
    "y": 4020,
    "wires": []
  },
  {
    "id": "6e3fa9d0a1d0db5d",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 4020,
    "wires": [
      [
        "7512278d553ff2b7"
      ]
    ]
  },
  {
    "id": "7512278d553ff2b7",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 4020,
    "wires": [
      [
        "f73d8a68bfa249f3"
      ]
    ]
  },
  {
    "id": "c673cfb022daab02",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "8e175cf41ef2f2ff"
    ],
    "x": 2955,
    "y": 4020,
    "wires": [
      [
        "db0f24192b9b5e8f"
      ]
    ]
  },
  {
    "id": "db0f24192b9b5e8f",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor201', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 4020,
    "wires": [
      [
        "111e77aa87bae3ca"
      ]
    ]
  },
  {
    "id": "7dbbb5e42db4c75e",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 4020,
    "wires": []
  },
  {
    "id": "111e77aa87bae3ca",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 4020,
    "wires": [
      [
        "7dbbb5e42db4c75e",
        "10e25e0c8eeed2c6"
      ]
    ]
  },
  {
    "id": "10e25e0c8eeed2c6",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 4020,
    "wires": []
  },
  {
    "id": "288e61450fe71a40",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 4060,
    "wires": [
      [
        "0fc88021554dda8d"
      ]
    ]
  },
  {
    "id": "567e47ac4c271588",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 4060,
    "wires": [
      [
        "2d0f3b43a8a79920"
      ]
    ]
  },
  {
    "id": "2d0f3b43a8a79920",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "fd4a1a6d59f8c20e"
    ],
    "x": 2875,
    "y": 4060,
    "wires": []
  },
  {
    "id": "0fc88021554dda8d",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 4060,
    "wires": [
      [
        "9fc2e9756167f22f"
      ]
    ]
  },
  {
    "id": "9fc2e9756167f22f",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 4060,
    "wires": [
      [
        "567e47ac4c271588"
      ]
    ]
  },
  {
    "id": "fd4a1a6d59f8c20e",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "2d0f3b43a8a79920"
    ],
    "x": 2955,
    "y": 4060,
    "wires": [
      [
        "3b5325f263088f2a"
      ]
    ]
  },
  {
    "id": "3b5325f263088f2a",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor202', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 4060,
    "wires": [
      [
        "4da9320929a2a9d0"
      ]
    ]
  },
  {
    "id": "50484b9541dd986a",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 4060,
    "wires": []
  },
  {
    "id": "4da9320929a2a9d0",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 4060,
    "wires": [
      [
        "50484b9541dd986a",
        "f845d57e1f8a8870"
      ]
    ]
  },
  {
    "id": "f845d57e1f8a8870",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 4060,
    "wires": []
  },
  {
    "id": "a3e66d438316f1f6",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 4100,
    "wires": [
      [
        "d5ada9bbc2cdb4d7"
      ]
    ]
  },
  {
    "id": "f2308ab094d68942",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 4100,
    "wires": [
      [
        "c61599276fabb4b5"
      ]
    ]
  },
  {
    "id": "c61599276fabb4b5",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "a10645f024cc28f2"
    ],
    "x": 2875,
    "y": 4100,
    "wires": []
  },
  {
    "id": "d5ada9bbc2cdb4d7",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 4100,
    "wires": [
      [
        "b4aa2b45da7e9786"
      ]
    ]
  },
  {
    "id": "b4aa2b45da7e9786",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 4100,
    "wires": [
      [
        "f2308ab094d68942"
      ]
    ]
  },
  {
    "id": "a10645f024cc28f2",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "c61599276fabb4b5"
    ],
    "x": 2955,
    "y": 4100,
    "wires": [
      [
        "063d50297967acd8"
      ]
    ]
  },
  {
    "id": "063d50297967acd8",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor203', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 4100,
    "wires": [
      [
        "dcbc8aa08eaaf9ef"
      ]
    ]
  },
  {
    "id": "fbd644fbbf2f4ef3",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 4100,
    "wires": []
  },
  {
    "id": "dcbc8aa08eaaf9ef",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 4100,
    "wires": [
      [
        "fbd644fbbf2f4ef3",
        "37103da6724fff72"
      ]
    ]
  },
  {
    "id": "37103da6724fff72",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 4100,
    "wires": []
  },
  {
    "id": "ca0009441101a728",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 4140,
    "wires": [
      [
        "3aee4e399b4ff139"
      ]
    ]
  },
  {
    "id": "c8be65944d86cc1e",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 4140,
    "wires": [
      [
        "f433986b8dab8898"
      ]
    ]
  },
  {
    "id": "f433986b8dab8898",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "047f8ef3315beeb7"
    ],
    "x": 2875,
    "y": 4140,
    "wires": []
  },
  {
    "id": "3aee4e399b4ff139",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 4140,
    "wires": [
      [
        "42d21107e6600736"
      ]
    ]
  },
  {
    "id": "42d21107e6600736",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 4140,
    "wires": [
      [
        "c8be65944d86cc1e"
      ]
    ]
  },
  {
    "id": "047f8ef3315beeb7",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "f433986b8dab8898"
    ],
    "x": 2955,
    "y": 4140,
    "wires": [
      [
        "b7b0c958ae505e3e"
      ]
    ]
  },
  {
    "id": "b7b0c958ae505e3e",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor204', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 4140,
    "wires": [
      [
        "76546398c8c2df32"
      ]
    ]
  },
  {
    "id": "3fef0182cdb45503",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 4140,
    "wires": []
  },
  {
    "id": "76546398c8c2df32",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 4140,
    "wires": [
      [
        "3fef0182cdb45503",
        "f4e9cbe6dc97997c"
      ]
    ]
  },
  {
    "id": "f4e9cbe6dc97997c",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 4140,
    "wires": []
  },
  {
    "id": "15976e8b2feb11b5",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 4180,
    "wires": [
      [
        "f9063abf0ce2a785"
      ]
    ]
  },
  {
    "id": "1e5f502dc622a29d",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 4180,
    "wires": [
      [
        "e673b0e5e2f929c2"
      ]
    ]
  },
  {
    "id": "e673b0e5e2f929c2",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "d88f2f1455d70c41"
    ],
    "x": 2875,
    "y": 4180,
    "wires": []
  },
  {
    "id": "f9063abf0ce2a785",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 4180,
    "wires": [
      [
        "ee70eed0d4cdc22e"
      ]
    ]
  },
  {
    "id": "ee70eed0d4cdc22e",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 4180,
    "wires": [
      [
        "1e5f502dc622a29d"
      ]
    ]
  },
  {
    "id": "d88f2f1455d70c41",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "e673b0e5e2f929c2"
    ],
    "x": 2955,
    "y": 4180,
    "wires": [
      [
        "6abd4597249f196d"
      ]
    ]
  },
  {
    "id": "6abd4597249f196d",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor205', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 4180,
    "wires": [
      [
        "0547dd8ffb7310f3"
      ]
    ]
  },
  {
    "id": "4504557bb07cecf0",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 4180,
    "wires": []
  },
  {
    "id": "0547dd8ffb7310f3",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 4180,
    "wires": [
      [
        "4504557bb07cecf0",
        "a82bfbae7abdf051"
      ]
    ]
  },
  {
    "id": "a82bfbae7abdf051",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 4180,
    "wires": []
  },
  {
    "id": "d8ef43e509784aa0",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 4220,
    "wires": [
      [
        "21332b2c662c269d"
      ]
    ]
  },
  {
    "id": "c843c602bb139231",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 4220,
    "wires": [
      [
        "6ebaa408a7d2f01f"
      ]
    ]
  },
  {
    "id": "6ebaa408a7d2f01f",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "20d94c532ce6c82d"
    ],
    "x": 2875,
    "y": 4220,
    "wires": []
  },
  {
    "id": "21332b2c662c269d",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 4220,
    "wires": [
      [
        "5e24fbaad4ee4a9e"
      ]
    ]
  },
  {
    "id": "5e24fbaad4ee4a9e",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 4220,
    "wires": [
      [
        "c843c602bb139231"
      ]
    ]
  },
  {
    "id": "20d94c532ce6c82d",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "6ebaa408a7d2f01f"
    ],
    "x": 2955,
    "y": 4220,
    "wires": [
      [
        "85fa039056c0b510"
      ]
    ]
  },
  {
    "id": "85fa039056c0b510",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor206', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 4220,
    "wires": [
      [
        "98df3d963304f4fb"
      ]
    ]
  },
  {
    "id": "edfa137764bc99ba",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 4220,
    "wires": []
  },
  {
    "id": "98df3d963304f4fb",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 4220,
    "wires": [
      [
        "edfa137764bc99ba",
        "e8a3502ddec0af80"
      ]
    ]
  },
  {
    "id": "e8a3502ddec0af80",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 4220,
    "wires": []
  },
  {
    "id": "ac042db0704b28ce",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 4260,
    "wires": [
      [
        "771d2a11e6abd457"
      ]
    ]
  },
  {
    "id": "691de39c380aaf60",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 4260,
    "wires": [
      [
        "8e453c0d81d582c0"
      ]
    ]
  },
  {
    "id": "8e453c0d81d582c0",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "77110df31ceae811"
    ],
    "x": 2875,
    "y": 4260,
    "wires": []
  },
  {
    "id": "771d2a11e6abd457",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 4260,
    "wires": [
      [
        "90cd079424f72fc5"
      ]
    ]
  },
  {
    "id": "90cd079424f72fc5",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 4260,
    "wires": [
      [
        "691de39c380aaf60"
      ]
    ]
  },
  {
    "id": "77110df31ceae811",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "8e453c0d81d582c0"
    ],
    "x": 2955,
    "y": 4260,
    "wires": [
      [
        "c4f4ce7c16d9172a"
      ]
    ]
  },
  {
    "id": "c4f4ce7c16d9172a",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor207', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 4260,
    "wires": [
      [
        "964b42dc74567ee0"
      ]
    ]
  },
  {
    "id": "c78d41baa36160bc",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 4260,
    "wires": []
  },
  {
    "id": "964b42dc74567ee0",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 4260,
    "wires": [
      [
        "c78d41baa36160bc",
        "c7d6d97000eb0206"
      ]
    ]
  },
  {
    "id": "c7d6d97000eb0206",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 4260,
    "wires": []
  },
  {
    "id": "3b0021bdc83f86e8",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 4300,
    "wires": [
      [
        "c7d39b4cd7952ca2"
      ]
    ]
  },
  {
    "id": "bb865388bb723855",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 4300,
    "wires": [
      [
        "93306c015280eb29"
      ]
    ]
  },
  {
    "id": "93306c015280eb29",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "9bad7eb6d7f994c4"
    ],
    "x": 2875,
    "y": 4300,
    "wires": []
  },
  {
    "id": "c7d39b4cd7952ca2",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 4300,
    "wires": [
      [
        "40b971caee40266e"
      ]
    ]
  },
  {
    "id": "40b971caee40266e",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 4300,
    "wires": [
      [
        "bb865388bb723855"
      ]
    ]
  },
  {
    "id": "9bad7eb6d7f994c4",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "93306c015280eb29"
    ],
    "x": 2955,
    "y": 4300,
    "wires": [
      [
        "bc25052001c0bd2e"
      ]
    ]
  },
  {
    "id": "bc25052001c0bd2e",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor208', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 4300,
    "wires": [
      [
        "a694d23331c04fd8"
      ]
    ]
  },
  {
    "id": "87a66330515f575a",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 4300,
    "wires": []
  },
  {
    "id": "a694d23331c04fd8",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 4300,
    "wires": [
      [
        "87a66330515f575a",
        "495c9144e807e6cf"
      ]
    ]
  },
  {
    "id": "495c9144e807e6cf",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 4300,
    "wires": []
  },
  {
    "id": "a532326041bb5cc6",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 4340,
    "wires": [
      [
        "a18e50ddf00fb1f1"
      ]
    ]
  },
  {
    "id": "e691a999ea6d0866",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 4340,
    "wires": [
      [
        "de93f610be4b941d"
      ]
    ]
  },
  {
    "id": "de93f610be4b941d",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "7eb7df353368e144"
    ],
    "x": 2875,
    "y": 4340,
    "wires": []
  },
  {
    "id": "a18e50ddf00fb1f1",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 4340,
    "wires": [
      [
        "ae2318abc4b5be23"
      ]
    ]
  },
  {
    "id": "ae2318abc4b5be23",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 4340,
    "wires": [
      [
        "e691a999ea6d0866"
      ]
    ]
  },
  {
    "id": "7eb7df353368e144",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "de93f610be4b941d"
    ],
    "x": 2955,
    "y": 4340,
    "wires": [
      [
        "36896ae8590a4175"
      ]
    ]
  },
  {
    "id": "36896ae8590a4175",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor209', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 4340,
    "wires": [
      [
        "752fc7acafcbf3ce"
      ]
    ]
  },
  {
    "id": "25e83ca6eedc2ce1",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 4340,
    "wires": []
  },
  {
    "id": "752fc7acafcbf3ce",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 4340,
    "wires": [
      [
        "25e83ca6eedc2ce1",
        "529c2aadba04176d"
      ]
    ]
  },
  {
    "id": "529c2aadba04176d",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 4340,
    "wires": []
  },
  {
    "id": "f65787314cc693d4",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 4380,
    "wires": [
      [
        "f7dea94ae6c00f3a"
      ]
    ]
  },
  {
    "id": "feb6ea05dad91b03",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 4380,
    "wires": [
      [
        "d4b026ae03a24c8f"
      ]
    ]
  },
  {
    "id": "d4b026ae03a24c8f",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "a4ddc7b913e81965"
    ],
    "x": 2875,
    "y": 4380,
    "wires": []
  },
  {
    "id": "f7dea94ae6c00f3a",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 4380,
    "wires": [
      [
        "2a35c31efd97ee57"
      ]
    ]
  },
  {
    "id": "2a35c31efd97ee57",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 4380,
    "wires": [
      [
        "feb6ea05dad91b03"
      ]
    ]
  },
  {
    "id": "a4ddc7b913e81965",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "d4b026ae03a24c8f"
    ],
    "x": 2955,
    "y": 4380,
    "wires": [
      [
        "c937f62fb2427f5a"
      ]
    ]
  },
  {
    "id": "c937f62fb2427f5a",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor210', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 4380,
    "wires": [
      [
        "a7bac18b8a9c3518"
      ]
    ]
  },
  {
    "id": "ace20e727f68c2b3",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 4380,
    "wires": []
  },
  {
    "id": "a7bac18b8a9c3518",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 4380,
    "wires": [
      [
        "ace20e727f68c2b3",
        "9ea4a73dd40419a3"
      ]
    ]
  },
  {
    "id": "9ea4a73dd40419a3",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 4380,
    "wires": []
  },
  {
    "id": "087a7f5e356ecb53",
    "type": "comment",
    "z": "e61d7807.20aac8",
    "name": "211-220",
    "info": "",
    "x": 2070,
    "y": 3980,
    "wires": []
  },
  {
    "id": "3a553a18b4315810",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 4460,
    "wires": [
      [
        "559696af94c8d74d"
      ]
    ]
  },
  {
    "id": "d6c2645eba095a76",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 4460,
    "wires": [
      [
        "3f5af86bf597bda1"
      ]
    ]
  },
  {
    "id": "3f5af86bf597bda1",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "abb50be6e0febfbe",
      "7da2cb752a2367ab",
      "446494b56b8edd18"
    ],
    "x": 2875,
    "y": 4460,
    "wires": []
  },
  {
    "id": "559696af94c8d74d",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 4460,
    "wires": [
      [
        "cbc2641eb963e501"
      ]
    ]
  },
  {
    "id": "cbc2641eb963e501",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 4460,
    "wires": [
      [
        "d6c2645eba095a76"
      ]
    ]
  },
  {
    "id": "abb50be6e0febfbe",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "3f5af86bf597bda1",
      "403ea9330c466d7f"
    ],
    "x": 2955,
    "y": 4460,
    "wires": [
      [
        "3cdfd4bedd70a3fd"
      ]
    ]
  },
  {
    "id": "3cdfd4bedd70a3fd",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor211', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 4460,
    "wires": [
      [
        "f8fb6ac707f747fb"
      ]
    ]
  },
  {
    "id": "4d0b280e6e33996a",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 4460,
    "wires": []
  },
  {
    "id": "f8fb6ac707f747fb",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 4460,
    "wires": [
      [
        "4d0b280e6e33996a",
        "f7748aa0b6fabc1d"
      ]
    ]
  },
  {
    "id": "f7748aa0b6fabc1d",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 4460,
    "wires": []
  },
  {
    "id": "34fdf0d6ef5c5f3e",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 4500,
    "wires": [
      [
        "4862de1f51a5b7d4"
      ]
    ]
  },
  {
    "id": "c2b8ec80be9abcf2",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 4500,
    "wires": [
      [
        "c347fa7955c7a190"
      ]
    ]
  },
  {
    "id": "c347fa7955c7a190",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "9196ee1504d3284a",
      "7ad928a05b3f8348",
      "135acb851939fd2c"
    ],
    "x": 2875,
    "y": 4500,
    "wires": []
  },
  {
    "id": "4862de1f51a5b7d4",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 4500,
    "wires": [
      [
        "b973c53f3fc29d30"
      ]
    ]
  },
  {
    "id": "b973c53f3fc29d30",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 4500,
    "wires": [
      [
        "c2b8ec80be9abcf2"
      ]
    ]
  },
  {
    "id": "9196ee1504d3284a",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "c347fa7955c7a190",
      "4f0b13d2306d7ca4"
    ],
    "x": 2955,
    "y": 4500,
    "wires": [
      [
        "a313dced1894e701"
      ]
    ]
  },
  {
    "id": "a313dced1894e701",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor212', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 4500,
    "wires": [
      [
        "97bdfd942f51bb14"
      ]
    ]
  },
  {
    "id": "bd6e8ae7a7673726",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 4500,
    "wires": []
  },
  {
    "id": "97bdfd942f51bb14",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 4500,
    "wires": [
      [
        "bd6e8ae7a7673726",
        "0442fd642e83d4ba"
      ]
    ]
  },
  {
    "id": "0442fd642e83d4ba",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 4500,
    "wires": []
  },
  {
    "id": "b7a1d243a22c96d6",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 4540,
    "wires": [
      [
        "2d40939ef0a74c7c"
      ]
    ]
  },
  {
    "id": "7995dc0ab56dd29e",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 4540,
    "wires": [
      [
        "a54cb7651160c7f0"
      ]
    ]
  },
  {
    "id": "a54cb7651160c7f0",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "d64eebe06aed33c5",
      "ebe83ed9b4c391a5",
      "f336ef7efdceb130",
      "2c4ce00bdfb4e918"
    ],
    "x": 2875,
    "y": 4540,
    "wires": []
  },
  {
    "id": "2d40939ef0a74c7c",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 4540,
    "wires": [
      [
        "deab12847c98efdc"
      ]
    ]
  },
  {
    "id": "deab12847c98efdc",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 4540,
    "wires": [
      [
        "7995dc0ab56dd29e"
      ]
    ]
  },
  {
    "id": "d64eebe06aed33c5",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "a54cb7651160c7f0",
      "a22b7dd28d9d5d4c"
    ],
    "x": 2955,
    "y": 4540,
    "wires": [
      [
        "f5615adacc08da13"
      ]
    ]
  },
  {
    "id": "f5615adacc08da13",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor213', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 4540,
    "wires": [
      [
        "3c8d5997bdf1e856"
      ]
    ]
  },
  {
    "id": "19347f3feef00ba1",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 4540,
    "wires": []
  },
  {
    "id": "3c8d5997bdf1e856",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 4540,
    "wires": [
      [
        "19347f3feef00ba1",
        "73f930536c84c73f"
      ]
    ]
  },
  {
    "id": "73f930536c84c73f",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 4540,
    "wires": []
  },
  {
    "id": "77f2ad38897a058f",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 4580,
    "wires": [
      [
        "2e1dd66f036b4899"
      ]
    ]
  },
  {
    "id": "cc1f157770436cdc",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 4580,
    "wires": [
      [
        "9f5c4c37b6c38fcb"
      ]
    ]
  },
  {
    "id": "9f5c4c37b6c38fcb",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "a56ece4165beec98",
      "cce3bffda86390dc",
      "123ee6ce1e18cd5f",
      "d1807c53a25f0999"
    ],
    "x": 2875,
    "y": 4580,
    "wires": []
  },
  {
    "id": "2e1dd66f036b4899",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 4580,
    "wires": [
      [
        "6031d1122c0c4475"
      ]
    ]
  },
  {
    "id": "6031d1122c0c4475",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 4580,
    "wires": [
      [
        "cc1f157770436cdc"
      ]
    ]
  },
  {
    "id": "a56ece4165beec98",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "9f5c4c37b6c38fcb",
      "d781ec9e2db72794",
      "26af75ac23322d17",
      "0125e76f534adbaa"
    ],
    "x": 2955,
    "y": 4580,
    "wires": [
      [
        "53e596bebf310698"
      ]
    ]
  },
  {
    "id": "53e596bebf310698",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor214', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 4580,
    "wires": [
      [
        "68a2a2e4146c25d3"
      ]
    ]
  },
  {
    "id": "66f42f0c1ffa8fa9",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 4580,
    "wires": []
  },
  {
    "id": "68a2a2e4146c25d3",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 4580,
    "wires": [
      [
        "66f42f0c1ffa8fa9",
        "bbcf556788066850"
      ]
    ]
  },
  {
    "id": "bbcf556788066850",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 4580,
    "wires": []
  },
  {
    "id": "80a7f77ff9408e7f",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 4620,
    "wires": [
      [
        "b13445679384cd40"
      ]
    ]
  },
  {
    "id": "617a7e7191d09071",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 4620,
    "wires": [
      [
        "efbb9a2bf95929b8"
      ]
    ]
  },
  {
    "id": "efbb9a2bf95929b8",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "f8174b4c30403232",
      "915f252b8cc59667",
      "eada324a54a341b3",
      "e66cf2fba7f5e7a0"
    ],
    "x": 2875,
    "y": 4620,
    "wires": []
  },
  {
    "id": "b13445679384cd40",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 4620,
    "wires": [
      [
        "05a8a26a2552abcc"
      ]
    ]
  },
  {
    "id": "05a8a26a2552abcc",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 4620,
    "wires": [
      [
        "617a7e7191d09071"
      ]
    ]
  },
  {
    "id": "f8174b4c30403232",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "efbb9a2bf95929b8",
      "a836be0a9c51edbb",
      "b354e8e49f466741",
      "55c71dc31c8a4043",
      "22f43215f6c06a8d"
    ],
    "x": 2955,
    "y": 4620,
    "wires": [
      [
        "8bc1552ecc2c6b30"
      ]
    ]
  },
  {
    "id": "8bc1552ecc2c6b30",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor215', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 4620,
    "wires": [
      [
        "a8fe61767ddd730c"
      ]
    ]
  },
  {
    "id": "fce8551f5a320192",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 4620,
    "wires": []
  },
  {
    "id": "a8fe61767ddd730c",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 4620,
    "wires": [
      [
        "fce8551f5a320192",
        "23d2a62f491f984b"
      ]
    ]
  },
  {
    "id": "23d2a62f491f984b",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 4620,
    "wires": []
  },
  {
    "id": "e2b91ace31f9721a",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 4660,
    "wires": [
      [
        "49b6f7a09e97b89c"
      ]
    ]
  },
  {
    "id": "6dbe9d50912c8a36",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 4660,
    "wires": [
      [
        "0be1996c26ca9af5"
      ]
    ]
  },
  {
    "id": "0be1996c26ca9af5",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "23a99dd697c1fab1",
      "bd7eadd667175503",
      "e7ca575c43a2dac1",
      "6806699efe3e6e3d",
      "1cbbcf6985e6e2d4"
    ],
    "x": 2875,
    "y": 4660,
    "wires": []
  },
  {
    "id": "49b6f7a09e97b89c",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 4660,
    "wires": [
      [
        "4d2f1c35bdde2ab7"
      ]
    ]
  },
  {
    "id": "4d2f1c35bdde2ab7",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 4660,
    "wires": [
      [
        "6dbe9d50912c8a36"
      ]
    ]
  },
  {
    "id": "23a99dd697c1fab1",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "0be1996c26ca9af5",
      "8c84d75e9e249148",
      "fc367347b1d431e1",
      "7f2e42f42224d386",
      "c729acfc80044ea4"
    ],
    "x": 2955,
    "y": 4660,
    "wires": [
      [
        "cfce5ae763a3e4d4"
      ]
    ]
  },
  {
    "id": "cfce5ae763a3e4d4",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor216', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 4660,
    "wires": [
      [
        "bb7dea60e6c19846"
      ]
    ]
  },
  {
    "id": "a4af2d223c8d063c",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 4660,
    "wires": []
  },
  {
    "id": "bb7dea60e6c19846",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 4660,
    "wires": [
      [
        "a4af2d223c8d063c",
        "a77f0c6cce29a72d"
      ]
    ]
  },
  {
    "id": "a77f0c6cce29a72d",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 4660,
    "wires": []
  },
  {
    "id": "4bbf09893c2670f8",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 4700,
    "wires": [
      [
        "5562d56ee2390f8c"
      ]
    ]
  },
  {
    "id": "fe5fedfd95340877",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 4700,
    "wires": [
      [
        "d6d4c7ee23ea9b2c"
      ]
    ]
  },
  {
    "id": "d6d4c7ee23ea9b2c",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "82effe136ed84b3e",
      "68b2759b858b3f76",
      "720468c4916034d9",
      "a922350176850238",
      "e0ab7234a6d9f198"
    ],
    "x": 2875,
    "y": 4700,
    "wires": []
  },
  {
    "id": "5562d56ee2390f8c",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 4700,
    "wires": [
      [
        "9e35507f33bcac65"
      ]
    ]
  },
  {
    "id": "9e35507f33bcac65",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 4700,
    "wires": [
      [
        "fe5fedfd95340877"
      ]
    ]
  },
  {
    "id": "82effe136ed84b3e",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "d6d4c7ee23ea9b2c",
      "882e6c4fe73200b1",
      "a931799efa74dfa9",
      "bb45777195366d46",
      "26f16d532a98d7dc",
      "9f9367b881a02f01"
    ],
    "x": 2955,
    "y": 4700,
    "wires": [
      [
        "348bd3c08e36c5c9"
      ]
    ]
  },
  {
    "id": "348bd3c08e36c5c9",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor217', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 4700,
    "wires": [
      [
        "82752f35d9d2bb14"
      ]
    ]
  },
  {
    "id": "e538a5234bc95b7e",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 4700,
    "wires": []
  },
  {
    "id": "82752f35d9d2bb14",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 4700,
    "wires": [
      [
        "e538a5234bc95b7e",
        "a4a41f5ff71819de"
      ]
    ]
  },
  {
    "id": "a4a41f5ff71819de",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 4700,
    "wires": []
  },
  {
    "id": "d59926b3514b6b3b",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 4740,
    "wires": [
      [
        "425f012b9197d105"
      ]
    ]
  },
  {
    "id": "4d43396633a43a3e",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 4740,
    "wires": [
      [
        "8bdf8b8e30deacd5"
      ]
    ]
  },
  {
    "id": "8bdf8b8e30deacd5",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "03e12831a968196f",
      "964f4059f158231f",
      "9f2b266b9bcd6d61",
      "62bc6c7d77872735"
    ],
    "x": 2875,
    "y": 4740,
    "wires": []
  },
  {
    "id": "425f012b9197d105",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 4740,
    "wires": [
      [
        "0159c4b446cf211f"
      ]
    ]
  },
  {
    "id": "0159c4b446cf211f",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 4740,
    "wires": [
      [
        "4d43396633a43a3e"
      ]
    ]
  },
  {
    "id": "03e12831a968196f",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "8bdf8b8e30deacd5",
      "bb1a6d435b8f9065",
      "ecf59080b4c7557a",
      "afb4f541c6d41366",
      "a6dfbe42d258413b",
      "7ff2aeb604fcd9de"
    ],
    "x": 2955,
    "y": 4740,
    "wires": [
      [
        "c15e36f66e88c71a"
      ]
    ]
  },
  {
    "id": "c15e36f66e88c71a",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor218', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 4740,
    "wires": [
      [
        "b3b85aa50eba834c"
      ]
    ]
  },
  {
    "id": "f1ca90eda89eb008",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 4740,
    "wires": []
  },
  {
    "id": "b3b85aa50eba834c",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 4740,
    "wires": [
      [
        "f1ca90eda89eb008",
        "6ccdb6be37453ee5"
      ]
    ]
  },
  {
    "id": "6ccdb6be37453ee5",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 4740,
    "wires": []
  },
  {
    "id": "6cd4af2e0ffa16ad",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 4780,
    "wires": [
      [
        "5ea517437f73a5aa"
      ]
    ]
  },
  {
    "id": "f6d978377c446a45",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 4780,
    "wires": [
      [
        "76737969b630130b"
      ]
    ]
  },
  {
    "id": "76737969b630130b",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "dee476d2cd1fe87f",
      "604af4e08ea659e4",
      "50e03a15e8097fc4",
      "e957a6d0591f622a",
      "9dd1d5caa6053b5a"
    ],
    "x": 2875,
    "y": 4780,
    "wires": []
  },
  {
    "id": "5ea517437f73a5aa",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 4780,
    "wires": [
      [
        "4f53bf7f40a7cd76"
      ]
    ]
  },
  {
    "id": "4f53bf7f40a7cd76",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 4780,
    "wires": [
      [
        "f6d978377c446a45"
      ]
    ]
  },
  {
    "id": "dee476d2cd1fe87f",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "76737969b630130b",
      "1480dd5997c8bd58",
      "079b87c903ea2387",
      "6868c83c00f16e4d",
      "c01aba9ffab87625",
      "ddee5ff3e0b3497b"
    ],
    "x": 2955,
    "y": 4780,
    "wires": [
      [
        "22a024cd9e9bb56d"
      ]
    ]
  },
  {
    "id": "22a024cd9e9bb56d",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor219', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 4780,
    "wires": [
      [
        "0a0dd3e871725626"
      ]
    ]
  },
  {
    "id": "dfdc985683e7ae44",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 4780,
    "wires": []
  },
  {
    "id": "0a0dd3e871725626",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 4780,
    "wires": [
      [
        "dfdc985683e7ae44",
        "179f467294420d2f"
      ]
    ]
  },
  {
    "id": "179f467294420d2f",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 4780,
    "wires": []
  },
  {
    "id": "e7df4b6c39bf9116",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 4820,
    "wires": [
      [
        "0fde9fd97fc420b5"
      ]
    ]
  },
  {
    "id": "d16b23d88e871cae",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 4820,
    "wires": [
      [
        "dea3cb45b708a203"
      ]
    ]
  },
  {
    "id": "dea3cb45b708a203",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "5fd1b42da6fff86b",
      "d6e4cd0921bfcb07",
      "1a45ccfc7e59f881",
      "8339f4cd9f6d03f8",
      "50a8038380c1d3ce",
      "f149680fd3adb077"
    ],
    "x": 2875,
    "y": 4820,
    "wires": []
  },
  {
    "id": "0fde9fd97fc420b5",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 4820,
    "wires": [
      [
        "507e2f0676ea0e86"
      ]
    ]
  },
  {
    "id": "507e2f0676ea0e86",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 4820,
    "wires": [
      [
        "d16b23d88e871cae"
      ]
    ]
  },
  {
    "id": "5fd1b42da6fff86b",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "dea3cb45b708a203",
      "76961c076988c012",
      "59dc63f7370af390",
      "0891ae6666d2ccb0",
      "552125327087edae",
      "eb5631aac7de493b",
      "9f2db5521e3ee41d"
    ],
    "x": 2955,
    "y": 4820,
    "wires": [
      [
        "586ca5ea1f715778"
      ]
    ]
  },
  {
    "id": "586ca5ea1f715778",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor220', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 4820,
    "wires": [
      [
        "2737b3a4e7bd84c0"
      ]
    ]
  },
  {
    "id": "1137142c996e4b33",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 4820,
    "wires": []
  },
  {
    "id": "2737b3a4e7bd84c0",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 4820,
    "wires": [
      [
        "1137142c996e4b33",
        "9bf6d6bbbd9c23ed"
      ]
    ]
  },
  {
    "id": "9bf6d6bbbd9c23ed",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 4820,
    "wires": []
  },
  {
    "id": "8287ca96b5cbe1f2",
    "type": "comment",
    "z": "e61d7807.20aac8",
    "name": "221-238",
    "info": "",
    "x": 2080,
    "y": 4420,
    "wires": []
  },
  {
    "id": "edaad0d52c2924dc",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 4860,
    "wires": [
      [
        "b582057d2414f6f6"
      ]
    ]
  },
  {
    "id": "124dd50b5c6dac2e",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 4860,
    "wires": [
      [
        "ebd27723df705bc3"
      ]
    ]
  },
  {
    "id": "ebd27723df705bc3",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "52c5c98d7c0a0956"
    ],
    "x": 875,
    "y": 4860,
    "wires": []
  },
  {
    "id": "b582057d2414f6f6",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 4860,
    "wires": [
      [
        "a132f6ee086b8ef6"
      ]
    ]
  },
  {
    "id": "a132f6ee086b8ef6",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 4860,
    "wires": [
      [
        "124dd50b5c6dac2e"
      ]
    ]
  },
  {
    "id": "52c5c98d7c0a0956",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "ebd27723df705bc3"
    ],
    "x": 955,
    "y": 4860,
    "wires": [
      [
        "10701b4e6cc5f825"
      ]
    ]
  },
  {
    "id": "10701b4e6cc5f825",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor221', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 4860,
    "wires": [
      [
        "3377861d48c9d307"
      ]
    ]
  },
  {
    "id": "7009898f7bfce660",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 4860,
    "wires": []
  },
  {
    "id": "3377861d48c9d307",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 4860,
    "wires": [
      [
        "7009898f7bfce660",
        "0c2a0d4a68025b4e"
      ]
    ]
  },
  {
    "id": "0c2a0d4a68025b4e",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 4860,
    "wires": []
  },
  {
    "id": "47c60a091bd9e24f",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 4900,
    "wires": [
      [
        "5afbfee46548e127"
      ]
    ]
  },
  {
    "id": "c2df5a86ac4865b9",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 4900,
    "wires": [
      [
        "86e3f70580809e85"
      ]
    ]
  },
  {
    "id": "86e3f70580809e85",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "7d9c163a9278013c"
    ],
    "x": 875,
    "y": 4900,
    "wires": []
  },
  {
    "id": "5afbfee46548e127",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 4900,
    "wires": [
      [
        "80107dfb45226431"
      ]
    ]
  },
  {
    "id": "80107dfb45226431",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 4900,
    "wires": [
      [
        "c2df5a86ac4865b9"
      ]
    ]
  },
  {
    "id": "7d9c163a9278013c",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "86e3f70580809e85"
    ],
    "x": 955,
    "y": 4900,
    "wires": [
      [
        "e341ff4fd151f260"
      ]
    ]
  },
  {
    "id": "e341ff4fd151f260",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor222', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 4900,
    "wires": [
      [
        "d6e38d18366f0f1f"
      ]
    ]
  },
  {
    "id": "f85c586a32f88c64",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 4900,
    "wires": []
  },
  {
    "id": "d6e38d18366f0f1f",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 4900,
    "wires": [
      [
        "f85c586a32f88c64",
        "7765716c7f723268"
      ]
    ]
  },
  {
    "id": "7765716c7f723268",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 4900,
    "wires": []
  },
  {
    "id": "663c68b9fcdf4273",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 4940,
    "wires": [
      [
        "5cbf42548a736d11"
      ]
    ]
  },
  {
    "id": "1068ac5748bdba46",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 4940,
    "wires": [
      [
        "65456f8e97b2d89e"
      ]
    ]
  },
  {
    "id": "65456f8e97b2d89e",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "51f568e8d8e6dd99"
    ],
    "x": 875,
    "y": 4940,
    "wires": []
  },
  {
    "id": "5cbf42548a736d11",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 4940,
    "wires": [
      [
        "27b30987d3a0b1df"
      ]
    ]
  },
  {
    "id": "27b30987d3a0b1df",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 4940,
    "wires": [
      [
        "1068ac5748bdba46"
      ]
    ]
  },
  {
    "id": "51f568e8d8e6dd99",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "65456f8e97b2d89e"
    ],
    "x": 955,
    "y": 4940,
    "wires": [
      [
        "29d46b544d6018fc"
      ]
    ]
  },
  {
    "id": "29d46b544d6018fc",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor223', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 4940,
    "wires": [
      [
        "f8b5f687e797a8ca"
      ]
    ]
  },
  {
    "id": "ce7d39cfad06c123",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 4940,
    "wires": []
  },
  {
    "id": "f8b5f687e797a8ca",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 4940,
    "wires": [
      [
        "ce7d39cfad06c123",
        "56348357e90a1f90"
      ]
    ]
  },
  {
    "id": "56348357e90a1f90",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 4940,
    "wires": []
  },
  {
    "id": "ec7f233224e4cd1a",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 110,
    "y": 4980,
    "wires": [
      [
        "cbf0d73801ec45e0"
      ]
    ]
  },
  {
    "id": "f25a27f6bea9a624",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 720,
    "y": 4980,
    "wires": [
      [
        "0af9e1b8e8891255"
      ]
    ]
  },
  {
    "id": "0af9e1b8e8891255",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "93240f9db71dadf3"
    ],
    "x": 875,
    "y": 4980,
    "wires": []
  },
  {
    "id": "cbf0d73801ec45e0",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 330,
    "y": 4980,
    "wires": [
      [
        "f2633c31fb067674"
      ]
    ]
  },
  {
    "id": "f2633c31fb067674",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 540,
    "y": 4980,
    "wires": [
      [
        "f25a27f6bea9a624"
      ]
    ]
  },
  {
    "id": "93240f9db71dadf3",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "0af9e1b8e8891255"
    ],
    "x": 955,
    "y": 4980,
    "wires": [
      [
        "9e13e8b34aa590a4"
      ]
    ]
  },
  {
    "id": "9e13e8b34aa590a4",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor224', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 1100,
    "y": 4980,
    "wires": [
      [
        "1c8a364d5d212634"
      ]
    ]
  },
  {
    "id": "bd9678aecd14dd0f",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 1670,
    "y": 4980,
    "wires": []
  },
  {
    "id": "1c8a364d5d212634",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 1370,
    "y": 4980,
    "wires": [
      [
        "bd9678aecd14dd0f",
        "fe9057574d6b17f2"
      ]
    ]
  },
  {
    "id": "fe9057574d6b17f2",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 1850,
    "y": 4980,
    "wires": []
  },
  {
    "id": "fff070ca6a184543",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 4860,
    "wires": [
      [
        "3857048b93436806"
      ]
    ]
  },
  {
    "id": "cf1b2093a5960cf9",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 4860,
    "wires": [
      [
        "e66e155638d58b8c"
      ]
    ]
  },
  {
    "id": "e66e155638d58b8c",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "7e1b5dbc4eedca2d",
      "b66df292d5d7dacd",
      "6c1f4ea26a73b11c",
      "dcc13b35e644a82b",
      "d7545642aef722d7"
    ],
    "x": 2875,
    "y": 4860,
    "wires": []
  },
  {
    "id": "3857048b93436806",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 4860,
    "wires": [
      [
        "268f19a6a13e5dac"
      ]
    ]
  },
  {
    "id": "268f19a6a13e5dac",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 4860,
    "wires": [
      [
        "cf1b2093a5960cf9"
      ]
    ]
  },
  {
    "id": "7e1b5dbc4eedca2d",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "e66e155638d58b8c",
      "ebb527f4d3f9d0f8",
      "bc9cbed60b1f96ca",
      "9317ad7a9d382056",
      "b567851813d749c5",
      "f745e39c3a8f452d",
      "bc6beadde690c21b"
    ],
    "x": 2955,
    "y": 4860,
    "wires": [
      [
        "3c7b0e7f049ee369"
      ]
    ]
  },
  {
    "id": "3c7b0e7f049ee369",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor225', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 4860,
    "wires": [
      [
        "a579f523f479145d"
      ]
    ]
  },
  {
    "id": "6695f0c8576f4da9",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 4860,
    "wires": []
  },
  {
    "id": "a579f523f479145d",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 4860,
    "wires": [
      [
        "6695f0c8576f4da9",
        "27ef4eeed41c4642"
      ]
    ]
  },
  {
    "id": "27ef4eeed41c4642",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 4860,
    "wires": []
  },
  {
    "id": "2259f91878800c15",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 4900,
    "wires": [
      [
        "825197e7b00cb358"
      ]
    ]
  },
  {
    "id": "c600b6f4c625e557",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 4900,
    "wires": [
      [
        "62e4b7ee669bdf8c"
      ]
    ]
  },
  {
    "id": "62e4b7ee669bdf8c",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "3e4b5425549c1f73",
      "4106803292497d64",
      "c0a6d7a0687450d5",
      "4f79cf9f2a65f62e",
      "18080ef57994f007"
    ],
    "x": 2875,
    "y": 4900,
    "wires": []
  },
  {
    "id": "825197e7b00cb358",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 4900,
    "wires": [
      [
        "1035a69cf884c716"
      ]
    ]
  },
  {
    "id": "1035a69cf884c716",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 4900,
    "wires": [
      [
        "c600b6f4c625e557"
      ]
    ]
  },
  {
    "id": "3e4b5425549c1f73",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "62e4b7ee669bdf8c",
      "d9377b05fe76e8e3",
      "cc0cac09e89c0e78",
      "9975b16fd3945de7",
      "61ee7ce1681ff9aa",
      "e08d5fd8d4b148be",
      "abe019bf4f8e5d60",
      "4f01e2016680f26f"
    ],
    "x": 2955,
    "y": 4900,
    "wires": [
      [
        "0924394e2aa65909"
      ]
    ]
  },
  {
    "id": "0924394e2aa65909",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor226', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 4900,
    "wires": [
      [
        "04d5d6b9426d7f25"
      ]
    ]
  },
  {
    "id": "2c6362dc09e294cc",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 4900,
    "wires": []
  },
  {
    "id": "04d5d6b9426d7f25",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 4900,
    "wires": [
      [
        "2c6362dc09e294cc",
        "44bbb21757febc37"
      ]
    ]
  },
  {
    "id": "44bbb21757febc37",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 4900,
    "wires": []
  },
  {
    "id": "fa21d21fc2dfd4d7",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 4940,
    "wires": [
      [
        "d861c8a28e144884"
      ]
    ]
  },
  {
    "id": "103d096f8d2ffd8b",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 4940,
    "wires": [
      [
        "1bd493015bfaed6e"
      ]
    ]
  },
  {
    "id": "1bd493015bfaed6e",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "4303f50b9cbdc7ee"
    ],
    "x": 2875,
    "y": 4940,
    "wires": []
  },
  {
    "id": "d861c8a28e144884",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 4940,
    "wires": [
      [
        "6ad1e17e9d635080"
      ]
    ]
  },
  {
    "id": "6ad1e17e9d635080",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 4940,
    "wires": [
      [
        "103d096f8d2ffd8b"
      ]
    ]
  },
  {
    "id": "4303f50b9cbdc7ee",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "1bd493015bfaed6e",
      "bb8b53c9fee1823f"
    ],
    "x": 2955,
    "y": 4940,
    "wires": [
      [
        "65c827245f7457c9"
      ]
    ]
  },
  {
    "id": "65c827245f7457c9",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor227', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 4940,
    "wires": [
      [
        "db7e0df6b8912751"
      ]
    ]
  },
  {
    "id": "3c630319e34c6972",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 4940,
    "wires": []
  },
  {
    "id": "db7e0df6b8912751",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 4940,
    "wires": [
      [
        "3c630319e34c6972",
        "cf260d1a34a0c0ad"
      ]
    ]
  },
  {
    "id": "cf260d1a34a0c0ad",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 4940,
    "wires": []
  },
  {
    "id": "5e5c28baa453d4ff",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 2110,
    "y": 4980,
    "wires": [
      [
        "a7330bdede10b56d"
      ]
    ]
  },
  {
    "id": "160fcd82bb35630a",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2720,
    "y": 4980,
    "wires": [
      [
        "fd4faf0f5426f3ab"
      ]
    ]
  },
  {
    "id": "fd4faf0f5426f3ab",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "04d42fea7282c378"
    ],
    "x": 2875,
    "y": 4980,
    "wires": []
  },
  {
    "id": "a7330bdede10b56d",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 2330,
    "y": 4980,
    "wires": [
      [
        "87122a3a241c6a2a"
      ]
    ]
  },
  {
    "id": "87122a3a241c6a2a",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 2540,
    "y": 4980,
    "wires": [
      [
        "160fcd82bb35630a"
      ]
    ]
  },
  {
    "id": "04d42fea7282c378",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fd4faf0f5426f3ab",
      "146d5fa8d455c824"
    ],
    "x": 2955,
    "y": 4980,
    "wires": [
      [
        "711b13fddfaca4d4"
      ]
    ]
  },
  {
    "id": "711b13fddfaca4d4",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor228', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3100,
    "y": 4980,
    "wires": [
      [
        "a934876dc341dc30"
      ]
    ]
  },
  {
    "id": "0ebe475994467a52",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 3670,
    "y": 4980,
    "wires": []
  },
  {
    "id": "a934876dc341dc30",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 3370,
    "y": 4980,
    "wires": [
      [
        "0ebe475994467a52",
        "3be8416cf2611b80"
      ]
    ]
  },
  {
    "id": "3be8416cf2611b80",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 3850,
    "y": 4980,
    "wires": []
  },
  {
    "id": "b74d35c2f0a73107",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 4070,
    "y": 80,
    "wires": [
      [
        "202c148188d07198"
      ]
    ]
  },
  {
    "id": "fd7d362c5d21809b",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 4680,
    "y": 80,
    "wires": [
      [
        "14e93990618b461a"
      ]
    ]
  },
  {
    "id": "14e93990618b461a",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "446494b56b8edd18",
      "06ea61ebbe412b25"
    ],
    "x": 4835,
    "y": 80,
    "wires": []
  },
  {
    "id": "202c148188d07198",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 4290,
    "y": 80,
    "wires": [
      [
        "550c8ab5f9e75fd6"
      ]
    ]
  },
  {
    "id": "550c8ab5f9e75fd6",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 4500,
    "y": 80,
    "wires": [
      [
        "fd7d362c5d21809b"
      ]
    ]
  },
  {
    "id": "599042f081b97351",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 4070,
    "y": 200,
    "wires": [
      [
        "fff679689e1a4f39"
      ]
    ]
  },
  {
    "id": "2e93379957fbd930",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 4680,
    "y": 200,
    "wires": [
      [
        "68d1bdfa89b4879c"
      ]
    ]
  },
  {
    "id": "68d1bdfa89b4879c",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "135acb851939fd2c",
      "11b0a0536295c2e8"
    ],
    "x": 4835,
    "y": 200,
    "wires": []
  },
  {
    "id": "fff679689e1a4f39",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 4290,
    "y": 200,
    "wires": [
      [
        "be24329eef443b76"
      ]
    ]
  },
  {
    "id": "be24329eef443b76",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 4500,
    "y": 200,
    "wires": [
      [
        "2e93379957fbd930"
      ]
    ]
  },
  {
    "id": "c4bc95db700fb84e",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 4070,
    "y": 298,
    "wires": [
      [
        "09798af609435014"
      ]
    ]
  },
  {
    "id": "c6599517eda24b9f",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 4680,
    "y": 298,
    "wires": [
      [
        "ea1bff87d14b9565"
      ]
    ]
  },
  {
    "id": "ea1bff87d14b9565",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "f336ef7efdceb130",
      "2c4ce00bdfb4e918",
      "01807c628b6b9a2c"
    ],
    "x": 4835,
    "y": 298,
    "wires": []
  },
  {
    "id": "09798af609435014",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 4290,
    "y": 298,
    "wires": [
      [
        "f91823ad7899bef0"
      ]
    ]
  },
  {
    "id": "f91823ad7899bef0",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 4500,
    "y": 298,
    "wires": [
      [
        "c6599517eda24b9f"
      ]
    ]
  },
  {
    "id": "c22fcd533856057b",
    "type": "comment",
    "z": "e61d7807.20aac8",
    "name": "239-250",
    "info": "",
    "x": 4040,
    "y": 40,
    "wires": []
  },
  {
    "id": "06ea61ebbe412b25",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "14e93990618b461a"
    ],
    "x": 4925,
    "y": 80,
    "wires": [
      [
        "6a350f354fb7b40d"
      ]
    ]
  },
  {
    "id": "6a350f354fb7b40d",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor229', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 4170,
    "y": 140,
    "wires": [
      [
        "f423d142e4fdf8fc"
      ]
    ]
  },
  {
    "id": "eea5f5c9a070b271",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 4740,
    "y": 140,
    "wires": []
  },
  {
    "id": "f423d142e4fdf8fc",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 4440,
    "y": 140,
    "wires": [
      [
        "eea5f5c9a070b271",
        "3323bee2129ccaa9"
      ]
    ]
  },
  {
    "id": "3323bee2129ccaa9",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 4920,
    "y": 140,
    "wires": []
  },
  {
    "id": "11b0a0536295c2e8",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "68d1bdfa89b4879c"
    ],
    "x": 4925,
    "y": 200,
    "wires": [
      [
        "62956110f875c91b"
      ]
    ]
  },
  {
    "id": "62956110f875c91b",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor230', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 4170,
    "y": 260,
    "wires": [
      [
        "09ca61bb5b6367aa"
      ]
    ]
  },
  {
    "id": "0ec55f01cd0c732d",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 4740,
    "y": 260,
    "wires": []
  },
  {
    "id": "09ca61bb5b6367aa",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 4440,
    "y": 260,
    "wires": [
      [
        "0ec55f01cd0c732d",
        "a63741b64a8987c6"
      ]
    ]
  },
  {
    "id": "a63741b64a8987c6",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 4920,
    "y": 260,
    "wires": []
  },
  {
    "id": "01807c628b6b9a2c",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "ea1bff87d14b9565"
    ],
    "x": 4925,
    "y": 300,
    "wires": [
      [
        "ede9b44908a2987c"
      ]
    ]
  },
  {
    "id": "ede9b44908a2987c",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor231', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 4170,
    "y": 360,
    "wires": [
      [
        "87773f3b5f261c66"
      ]
    ]
  },
  {
    "id": "d741d2713edbd469",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 4740,
    "y": 360,
    "wires": []
  },
  {
    "id": "87773f3b5f261c66",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 4440,
    "y": 360,
    "wires": [
      [
        "d741d2713edbd469",
        "23435beb53bef2bc"
      ]
    ]
  },
  {
    "id": "23435beb53bef2bc",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 4920,
    "y": 360,
    "wires": []
  },
  {
    "id": "ac14944120281a56",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 4070,
    "y": 420,
    "wires": [
      [
        "cd05934d15a1bda7"
      ]
    ]
  },
  {
    "id": "25052acd8540e7ee",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 4680,
    "y": 420,
    "wires": [
      [
        "d4ab5cfda5db363b"
      ]
    ]
  },
  {
    "id": "d4ab5cfda5db363b",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "d1807c53a25f0999",
      "e172dc0bb824ce1a"
    ],
    "x": 4835,
    "y": 420,
    "wires": []
  },
  {
    "id": "cd05934d15a1bda7",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 4290,
    "y": 420,
    "wires": [
      [
        "0ccc57e07955406c"
      ]
    ]
  },
  {
    "id": "0ccc57e07955406c",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 4500,
    "y": 420,
    "wires": [
      [
        "25052acd8540e7ee"
      ]
    ]
  },
  {
    "id": "e172dc0bb824ce1a",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "0125e76f534adbaa",
      "d4ab5cfda5db363b"
    ],
    "x": 4925,
    "y": 420,
    "wires": [
      [
        "cc055a6e4e328e83"
      ]
    ]
  },
  {
    "id": "cc055a6e4e328e83",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor232', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 4170,
    "y": 480,
    "wires": [
      [
        "86a7d73742eaed1b"
      ]
    ]
  },
  {
    "id": "bd04d60564c4f660",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 4740,
    "y": 480,
    "wires": []
  },
  {
    "id": "86a7d73742eaed1b",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 4440,
    "y": 480,
    "wires": [
      [
        "bd04d60564c4f660",
        "d8b7d34c7dc481d8"
      ]
    ]
  },
  {
    "id": "d8b7d34c7dc481d8",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 4920,
    "y": 480,
    "wires": []
  },
  {
    "id": "66cbc33ee4ad5122",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 4070,
    "y": 540,
    "wires": [
      [
        "ce3665b99d95e8f2"
      ]
    ]
  },
  {
    "id": "355318c5a9af2e2f",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 4680,
    "y": 540,
    "wires": [
      [
        "e81e1f8bbb1009cb"
      ]
    ]
  },
  {
    "id": "e81e1f8bbb1009cb",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "e66cf2fba7f5e7a0",
      "26b620ada41b5923"
    ],
    "x": 4835,
    "y": 540,
    "wires": []
  },
  {
    "id": "ce3665b99d95e8f2",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 4290,
    "y": 540,
    "wires": [
      [
        "6cb45af2641729ca"
      ]
    ]
  },
  {
    "id": "6cb45af2641729ca",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 4500,
    "y": 540,
    "wires": [
      [
        "355318c5a9af2e2f"
      ]
    ]
  },
  {
    "id": "26b620ada41b5923",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "55c71dc31c8a4043",
      "22f43215f6c06a8d",
      "e81e1f8bbb1009cb"
    ],
    "x": 4935,
    "y": 540,
    "wires": [
      [
        "ade75e71f63ece76"
      ]
    ]
  },
  {
    "id": "ade75e71f63ece76",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor233', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 4170,
    "y": 600,
    "wires": [
      [
        "05e03bec9999b017"
      ]
    ]
  },
  {
    "id": "0213fdfae4e1a68b",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 4740,
    "y": 600,
    "wires": []
  },
  {
    "id": "05e03bec9999b017",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 4440,
    "y": 600,
    "wires": [
      [
        "0213fdfae4e1a68b",
        "8ea3a1c90ee910e4"
      ]
    ]
  },
  {
    "id": "8ea3a1c90ee910e4",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 4920,
    "y": 600,
    "wires": []
  },
  {
    "id": "66ec09a4426a26c5",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 4070,
    "y": 660,
    "wires": [
      [
        "73de6ff7aaa377b7"
      ]
    ]
  },
  {
    "id": "72931d770cfcb8e4",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 4680,
    "y": 660,
    "wires": [
      [
        "a5ffe26b0502b440"
      ]
    ]
  },
  {
    "id": "a5ffe26b0502b440",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "6806699efe3e6e3d",
      "1cbbcf6985e6e2d4",
      "7275ece190c5c919"
    ],
    "x": 4835,
    "y": 660,
    "wires": []
  },
  {
    "id": "73de6ff7aaa377b7",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 4290,
    "y": 660,
    "wires": [
      [
        "3f5e409eb06a7f95"
      ]
    ]
  },
  {
    "id": "3f5e409eb06a7f95",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 4500,
    "y": 660,
    "wires": [
      [
        "72931d770cfcb8e4"
      ]
    ]
  },
  {
    "id": "7275ece190c5c919",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "7f2e42f42224d386",
      "c729acfc80044ea4",
      "a5ffe26b0502b440"
    ],
    "x": 4945,
    "y": 660,
    "wires": [
      [
        "6dceaed1cb39ad0b"
      ]
    ]
  },
  {
    "id": "6dceaed1cb39ad0b",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor234', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 4170,
    "y": 720,
    "wires": [
      [
        "e35a63bfb559231f"
      ]
    ]
  },
  {
    "id": "d75c4cde011dc5c0",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 4740,
    "y": 720,
    "wires": []
  },
  {
    "id": "e35a63bfb559231f",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 4440,
    "y": 720,
    "wires": [
      [
        "d75c4cde011dc5c0",
        "a14f248362a1dfe3"
      ]
    ]
  },
  {
    "id": "a14f248362a1dfe3",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 4920,
    "y": 720,
    "wires": []
  },
  {
    "id": "357e4ea6c36553d7",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 4070,
    "y": 780,
    "wires": [
      [
        "d0896e394b34c5fb"
      ]
    ]
  },
  {
    "id": "78fb0afdc0cf3d3f",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 4680,
    "y": 780,
    "wires": [
      [
        "b54dd595d2210d1b"
      ]
    ]
  },
  {
    "id": "b54dd595d2210d1b",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "e0ab7234a6d9f198",
      "25bd8940528c9b1f"
    ],
    "x": 4835,
    "y": 780,
    "wires": []
  },
  {
    "id": "d0896e394b34c5fb",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 4290,
    "y": 780,
    "wires": [
      [
        "5bcfb3e22cb2a8c5"
      ]
    ]
  },
  {
    "id": "5bcfb3e22cb2a8c5",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 4500,
    "y": 780,
    "wires": [
      [
        "78fb0afdc0cf3d3f"
      ]
    ]
  },
  {
    "id": "25bd8940528c9b1f",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "bb45777195366d46",
      "9f9367b881a02f01",
      "b54dd595d2210d1b"
    ],
    "x": 4935,
    "y": 780,
    "wires": [
      [
        "58f96459e5ddfe77"
      ]
    ]
  },
  {
    "id": "58f96459e5ddfe77",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor235', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 4170,
    "y": 840,
    "wires": [
      [
        "6781c6df58aa0e8b"
      ]
    ]
  },
  {
    "id": "1be90f60f461bf83",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 4740,
    "y": 840,
    "wires": []
  },
  {
    "id": "6781c6df58aa0e8b",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 4440,
    "y": 840,
    "wires": [
      [
        "1be90f60f461bf83",
        "48e15e7b28e84eb2"
      ]
    ]
  },
  {
    "id": "48e15e7b28e84eb2",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 4920,
    "y": 840,
    "wires": []
  },
  {
    "id": "a91df953c936e6e7",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 4070,
    "y": 900,
    "wires": [
      [
        "784ebb9509d4d5ed"
      ]
    ]
  },
  {
    "id": "2e272651b1a4b1aa",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 4680,
    "y": 900,
    "wires": [
      [
        "7faf33084e72ea4c"
      ]
    ]
  },
  {
    "id": "7faf33084e72ea4c",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "d21862208954ffc7"
    ],
    "x": 4835,
    "y": 900,
    "wires": []
  },
  {
    "id": "784ebb9509d4d5ed",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 4290,
    "y": 900,
    "wires": [
      [
        "2aea14e6902ac1b2"
      ]
    ]
  },
  {
    "id": "2aea14e6902ac1b2",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 4500,
    "y": 900,
    "wires": [
      [
        "2e272651b1a4b1aa"
      ]
    ]
  },
  {
    "id": "d21862208954ffc7",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "afb4f541c6d41366",
      "7ff2aeb604fcd9de",
      "7faf33084e72ea4c"
    ],
    "x": 4925,
    "y": 900,
    "wires": [
      [
        "b670e38cb1a366e8"
      ]
    ]
  },
  {
    "id": "b670e38cb1a366e8",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor236', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 4170,
    "y": 960,
    "wires": [
      [
        "217decbc6743ebd5"
      ]
    ]
  },
  {
    "id": "99fe9088673b61d2",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 4740,
    "y": 960,
    "wires": []
  },
  {
    "id": "217decbc6743ebd5",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 4440,
    "y": 960,
    "wires": [
      [
        "99fe9088673b61d2",
        "881201d8444bdec9"
      ]
    ]
  },
  {
    "id": "881201d8444bdec9",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 4920,
    "y": 960,
    "wires": []
  },
  {
    "id": "cb48d7d8aaba5be6",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 4070,
    "y": 1020,
    "wires": [
      [
        "1e3704f716d6f582"
      ]
    ]
  },
  {
    "id": "1a6136972dc0a7d8",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 4680,
    "y": 1020,
    "wires": [
      [
        "ec3d1a9eb3c1d48b"
      ]
    ]
  },
  {
    "id": "ec3d1a9eb3c1d48b",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "9dd1d5caa6053b5a",
      "4f65afb7bb7e99ee"
    ],
    "x": 4835,
    "y": 1020,
    "wires": []
  },
  {
    "id": "1e3704f716d6f582",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 4290,
    "y": 1020,
    "wires": [
      [
        "9cbb0b95f9d0b5a7"
      ]
    ]
  },
  {
    "id": "9cbb0b95f9d0b5a7",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 4500,
    "y": 1020,
    "wires": [
      [
        "1a6136972dc0a7d8"
      ]
    ]
  },
  {
    "id": "4f65afb7bb7e99ee",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "6868c83c00f16e4d",
      "ddee5ff3e0b3497b",
      "ec3d1a9eb3c1d48b"
    ],
    "x": 4935,
    "y": 1020,
    "wires": [
      [
        "c7fc5288115fd6e4"
      ]
    ]
  },
  {
    "id": "c7fc5288115fd6e4",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor237', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 4170,
    "y": 1080,
    "wires": [
      [
        "22b6fbaa9b085bdb"
      ]
    ]
  },
  {
    "id": "b54afa2bc104b291",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 4740,
    "y": 1080,
    "wires": []
  },
  {
    "id": "22b6fbaa9b085bdb",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 4440,
    "y": 1080,
    "wires": [
      [
        "b54afa2bc104b291",
        "7710e7228fcc81f0"
      ]
    ]
  },
  {
    "id": "7710e7228fcc81f0",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 4920,
    "y": 1080,
    "wires": []
  },
  {
    "id": "d742f29a804a583c",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 4070,
    "y": 1140,
    "wires": [
      [
        "6dd3f1f524ccbfb7"
      ]
    ]
  },
  {
    "id": "9e7129edade08ee5",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 4680,
    "y": 1140,
    "wires": [
      [
        "9d4786edae83d561"
      ]
    ]
  },
  {
    "id": "9d4786edae83d561",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "50a8038380c1d3ce",
      "f149680fd3adb077",
      "5e7bf66235c2cfcc"
    ],
    "x": 4835,
    "y": 1140,
    "wires": []
  },
  {
    "id": "6dd3f1f524ccbfb7",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 4290,
    "y": 1140,
    "wires": [
      [
        "4a8e2c0cb1cb1c8d"
      ]
    ]
  },
  {
    "id": "4a8e2c0cb1cb1c8d",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 4500,
    "y": 1140,
    "wires": [
      [
        "9e7129edade08ee5"
      ]
    ]
  },
  {
    "id": "5e7bf66235c2cfcc",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "0891ae6666d2ccb0",
      "eb5631aac7de493b",
      "9f2db5521e3ee41d",
      "9d4786edae83d561"
    ],
    "x": 4925,
    "y": 1140,
    "wires": [
      [
        "85b465dd39804c4e"
      ]
    ]
  },
  {
    "id": "85b465dd39804c4e",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor238', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 4170,
    "y": 1200,
    "wires": [
      [
        "53731971fc339a09"
      ]
    ]
  },
  {
    "id": "88a8d1b5450ed5e1",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 4740,
    "y": 1200,
    "wires": []
  },
  {
    "id": "53731971fc339a09",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 4440,
    "y": 1200,
    "wires": [
      [
        "88a8d1b5450ed5e1",
        "e89def5c7531e8cb"
      ]
    ]
  },
  {
    "id": "e89def5c7531e8cb",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 4920,
    "y": 1200,
    "wires": []
  },
  {
    "id": "2e5d01c4a2a28d31",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 4070,
    "y": 1260,
    "wires": [
      [
        "eccdfa2f93628cf6"
      ]
    ]
  },
  {
    "id": "dc11467f7d6a93fb",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 4680,
    "y": 1260,
    "wires": [
      [
        "458b22af1b67ce92"
      ]
    ]
  },
  {
    "id": "458b22af1b67ce92",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "d7545642aef722d7",
      "87a45c3f89e5350e"
    ],
    "x": 4835,
    "y": 1260,
    "wires": []
  },
  {
    "id": "eccdfa2f93628cf6",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 4290,
    "y": 1260,
    "wires": [
      [
        "f78a4d338889ad7e"
      ]
    ]
  },
  {
    "id": "f78a4d338889ad7e",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 4500,
    "y": 1260,
    "wires": [
      [
        "dc11467f7d6a93fb"
      ]
    ]
  },
  {
    "id": "87a45c3f89e5350e",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "9317ad7a9d382056",
      "f745e39c3a8f452d",
      "bc6beadde690c21b",
      "458b22af1b67ce92"
    ],
    "x": 4935,
    "y": 1260,
    "wires": [
      [
        "e0cdeee79d700b8c"
      ]
    ]
  },
  {
    "id": "e0cdeee79d700b8c",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor239', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 4170,
    "y": 1320,
    "wires": [
      [
        "89e5b537ba72e61f"
      ]
    ]
  },
  {
    "id": "6cc076092b5d4a64",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 4740,
    "y": 1320,
    "wires": []
  },
  {
    "id": "89e5b537ba72e61f",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 4440,
    "y": 1320,
    "wires": [
      [
        "6cc076092b5d4a64",
        "3929e9ecaec6ea1d"
      ]
    ]
  },
  {
    "id": "3929e9ecaec6ea1d",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 4920,
    "y": 1320,
    "wires": []
  },
  {
    "id": "ebc543759bfcc205",
    "type": "inject",
    "z": "e61d7807.20aac8",
    "name": "",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "300",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 4070,
    "y": 1380,
    "wires": [
      [
        "95cea0cfd4a0b270"
      ]
    ]
  },
  {
    "id": "a1c2cc7590519b49",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Generate Meter Data",
    "func": "const kwh = (Math.random() * 100).toFixed(2);const latitude = (Math.random() * 90).toFixed(6);const longitude = (Math.random() * 180).toFixed(6);const voltage = Math.floor(Math.random() * (240 - 100 + 1)) + 100;const powerFactor = (Math.random() * (1.0 - 0.5)) + 0.5;const generatedData = { kwh: kwh, gps: { latitude: latitude, longitude: longitude}, voltage: voltage, powerFactor: powerFactor};if( msg.payload === false ) {\n    return null;\n}\nmsg.payload =generatedData ;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 4680,
    "y": 1380,
    "wires": [
      [
        "cb65f676b03f5e48"
      ]
    ]
  },
  {
    "id": "cb65f676b03f5e48",
    "type": "link out",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "fc9c2af3.67052",
      "18080ef57994f007",
      "6dd70ace2157fc06"
    ],
    "x": 4835,
    "y": 1380,
    "wires": []
  },
  {
    "id": "95cea0cfd4a0b270",
    "type": "ui_switch",
    "z": "e61d7807.20aac8",
    "name": "",
    "label": "Generate Meter readings",
    "tooltip": "",
    "group": "d347e8e2.369048",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": true,
    "decouple": "false",
    "topic": "",
    "topicType": "str",
    "style": "",
    "onvalue": "true",
    "onvalueType": "bool",
    "onicon": "",
    "oncolor": "",
    "offvalue": "false",
    "offvalueType": "bool",
    "officon": "",
    "offcolor": "",
    "animate": true,
    "x": 4290,
    "y": 1380,
    "wires": [
      [
        "778e41ae42d8c07a"
      ]
    ]
  },
  {
    "id": "778e41ae42d8c07a",
    "type": "delay",
    "z": "e61d7807.20aac8",
    "name": "Rate Limit",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "5",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "outputs": 1,
    "x": 4500,
    "y": 1380,
    "wires": [
      [
        "a1c2cc7590519b49"
      ]
    ]
  },
  {
    "id": "6dd70ace2157fc06",
    "type": "link in",
    "z": "e61d7807.20aac8",
    "name": "",
    "links": [
      "9975b16fd3945de7",
      "e08d5fd8d4b148be",
      "abe019bf4f8e5d60",
      "4f01e2016680f26f",
      "cb65f676b03f5e48"
    ],
    "x": 4925,
    "y": 1380,
    "wires": [
      [
        "d460291a142beb7f"
      ]
    ]
  },
  {
    "id": "d460291a142beb7f",
    "type": "function",
    "z": "e61d7807.20aac8",
    "name": "Body / Headers",
    "func": "data = msg.payload;\n\nvar date = new Date();\nvar options = { timeZone: 'Europe/Istanbul', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' };\nvar time = date.toLocaleDateString('tr-TR', options);\n\n\nmsg.payload = {'username':'user4','channel':'channel0', 'smartcontract':'chaincode0', 'args': {'sensorID':'sensor240', 'kwh':data.kwh,'time':time, 'gps':data.gps, 'voltage':data.voltage, 'pf':data.powerFactor} };\nmsg.headers = {'content-type':'application/json'};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 4170,
    "y": 1440,
    "wires": [
      [
        "88c5a1f717cde222"
      ]
    ]
  },
  {
    "id": "d1e3069c74b66a7a",
    "type": "debug",
    "z": "e61d7807.20aac8",
    "name": "Result",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "x": 4740,
    "y": 1440,
    "wires": []
  },
  {
    "id": "88c5a1f717cde222",
    "type": "http request",
    "z": "e61d7807.20aac8",
    "name": "Add Meter data HTTP Request",
    "method": "POST",
    "ret": "txt",
    "url": "http://rest-api:3000/api/addTemp",
    "tls": "",
    "x": 4440,
    "y": 1440,
    "wires": [
      [
        "d1e3069c74b66a7a",
        "1ee7b07a542a1654"
      ]
    ]
  },
  {
    "id": "1ee7b07a542a1654",
    "type": "ui_toast",
    "z": "e61d7807.20aac8",
    "position": "top right",
    "displayTime": "3",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "Success",
    "name": "Notification",
    "x": 4920,
    "y": 1440,
    "wires": []
  },
  {
    "id": "d347e8e2.369048",
    "type": "ui_group",
    "name": "Start / Stop",
    "tab": "2d59a220.05900e",
    "order": 1,
    "disp": true,
    "width": "8",
    "collapse": false
  },
  {
    "id": "2d59a220.05900e",
    "type": "ui_tab",
    "name": "Meter Data",
    "icon": "fa-thermometer-quarter",
    "order": 1,
    "disabled": false,
    "hidden": false
  }
]