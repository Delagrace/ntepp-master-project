---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blockchain-orderer
spec:
  replicas: 1
  selector:
    matchLabels:
      name: orderer
  template:
    metadata:
      labels:
        name: orderer
    spec:
      volumes:
      - name: sharedvolume
        persistentVolumeClaim:
          claimName: shared-pvc

      containers:
      - name: orderer
        image: hyperledger/fabric-orderer:1.4
        command: ["sh", "-c", "sleep 5 && while [ ! -f /shared/status_configtxgen_complete ]; do echo Waiting for configtxgen; sleep 1; done; orderer"]
        env:
        - name: ORDERER_CFG_PATH
          value: /shared/
        - name: ORDERER_GENERAL_LEDGERTYPE
          value: file
        - name: ORDERER_FILELEDGER_LOCATION
          value: /shared/ledger/orderer
        - name: ORDERER_GENERAL_BATCHTIMEOUT
          value: 1s
        - name: ORDERER_GENERAL_BATCHSIZE_MAXMESSAGECOUNT
          value: "240"
        - name: ORDERER_GENERAL_MAXWINDOWSIZE
          value: "1000"
        - name: ORDERER_GENERAL_ORDERERTYPE
          value: etcdraft
        - name: ORDERER_GENERAL_LISTENADDRESS
          value: 0.0.0.0
        - name: ORDERER_GENERAL_LISTENPORT
          value: "31010"
        - name: ORDERER_GENERAL_LOGLEVEL
          value: debug
        - name: ORDERER_GENERAL_LOCALMSPDIR
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/msp
        - name: ORDERER_GENERAL_LOCALMSPID
          value: OrdererMSP
        - name: ORDERER_GENERAL_GENESISMETHOD
          value: file
        - name: ORDERER_GENERAL_GENESISFILE
          value: /shared/genesis0.block
        - name: ORDERER_GENERAL_GENESISPROFILE
          value: initial
        - name: ORDERER_GENERAL_TLS_ENABLED
          value: "true"
        - name: ORDERER_GENERAL_TLS_PRIVATEKEY
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.key
        - name: ORDERER_GENERAL_TLS_CERTIFICATE
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt
        - name: ORDERER_GENERAL_TLS_ROOTCAS
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/ca.crt
        - name: ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.key
        - name: ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt
        - name: ORDERER_GENERAL_CLUSTER_ROOTCAS
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/ca.crt
        - name: GODEBUG
          value: "netdns=go"
        - name: ORDERER_OPERATIONS_LISTENADDRESS
          value: "0.0.0.0:8443"
        - name: ORDERER_OPERATIONS_TLS_ENABLED
          value: "false"
        - name: ORDERER_METRICS_PROVIDER
          value: prometheus
        volumeMounts:
        - mountPath: /shared
          name: sharedvolume
        ports:
        - containerPort: 31010
        - containerPort: 8443
        - containerPort: 30005

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blockchain-orderer2
spec:
  replicas: 1
  selector:
    matchLabels:
      name: orderer2
  template:
    metadata:
      labels:
        name: orderer2
    spec:
      volumes:
      - name: sharedvolume
        persistentVolumeClaim:
          claimName: shared-pvc

      containers:
      - name: orderer2
        image: hyperledger/fabric-orderer:1.4
        command: ["sh", "-c", "sleep 5 && while [ ! -f /shared/status_configtxgen_complete ]; do echo Waiting for configtxgen; sleep 1; done; orderer"]
        env:
        - name: ORDERER_CFG_PATH
          value: /shared/
        - name: ORDERER_GENERAL_LEDGERTYPE
          value: file
        - name: ORDERER_FILELEDGER_LOCATION
          value: /shared/ledger/orderer2
        - name: ORDERER_GENERAL_BATCHTIMEOUT
          value: 1s
        - name: ORDERER_GENERAL_BATCHSIZE_MAXMESSAGECOUNT
          value: "240"
        - name: ORDERER_GENERAL_MAXWINDOWSIZE
          value: "1000"
        - name: ORDERER_GENERAL_ORDERERTYPE
          value: etcdraft
        - name: ORDERER_GENERAL_LISTENADDRESS
          value: 0.0.0.0
        - name: ORDERER_GENERAL_LISTENPORT
          value: "31020"
        - name: ORDERER_GENERAL_LOGLEVEL
          value: debug
        - name: ORDERER_GENERAL_LOCALMSPDIR
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/msp
        - name: ORDERER_GENERAL_LOCALMSPID
          value: OrdererMSP
        - name: ORDERER_GENERAL_GENESISMETHOD
          value: file
        - name: ORDERER_GENERAL_GENESISFILE
          value: /shared/genesis0.block
        - name: ORDERER_GENERAL_GENESISPROFILE
          value: initial
        - name: ORDERER_GENERAL_TLS_ENABLED
          value: "true"
        - name: ORDERER_GENERAL_TLS_PRIVATEKEY
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls/server.key
        - name: ORDERER_GENERAL_TLS_CERTIFICATE
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls/server.crt
        - name: ORDERER_GENERAL_TLS_ROOTCAS
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls/ca.crt
        - name: ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls/server.key
        - name: ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls/server.crt
        - name: ORDERER_GENERAL_CLUSTER_ROOTCAS
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls/ca.crt
        - name: GODEBUG
          value: "netdns=go"
        - name: ORDERER_OPERATIONS_LISTENADDRESS
          value: "0.0.0.0:8443"
        - name: ORDERER_OPERATIONS_TLS_ENABLED
          value: "false"
        - name: ORDERER_METRICS_PROVIDER
          value: prometheus
        volumeMounts:
        - mountPath: /shared
          name: sharedvolume
        ports:
        - containerPort: 31020
        - containerPort: 8443
        - containerPort: 30006

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blockchain-orderer3
spec:
  replicas: 1
  selector:
    matchLabels:
      name: orderer3
  template:
    metadata:
      labels:
        name: orderer3
    spec:
      volumes:
      - name: sharedvolume
        persistentVolumeClaim:
          claimName: shared-pvc

      containers:
      - name: orderer3
        image: hyperledger/fabric-orderer:1.4
        command: ["sh", "-c", "sleep 5 && while [ ! -f /shared/status_configtxgen_complete ]; do echo Waiting for configtxgen; sleep 1; done; orderer"]
        env:
        - name: ORDERER_CFG_PATH
          value: /shared/
        - name: ORDERER_GENERAL_LEDGERTYPE
          value: file
        - name: ORDERER_FILELEDGER_LOCATION
          value: /shared/ledger/orderer3
        - name: ORDERER_GENERAL_BATCHTIMEOUT
          value: 1s
        - name: ORDERER_GENERAL_BATCHSIZE_MAXMESSAGECOUNT
          value: "240"
        - name: ORDERER_GENERAL_MAXWINDOWSIZE
          value: "1000"
        - name: ORDERER_GENERAL_ORDERERTYPE
          value: etcdraft
        - name: ORDERER_GENERAL_LISTENADDRESS
          value: 0.0.0.0
        - name: ORDERER_GENERAL_LISTENPORT
          value: "31030"
        - name: ORDERER_GENERAL_LOGLEVEL
          value: debug
        - name: ORDERER_GENERAL_LOCALMSPDIR
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/msp
        - name: ORDERER_GENERAL_LOCALMSPID
          value: OrdererMSP
        - name: ORDERER_GENERAL_GENESISMETHOD
          value: file
        - name: ORDERER_GENERAL_GENESISFILE
          value: /shared/genesis0.block
        - name: ORDERER_GENERAL_GENESISPROFILE
          value: initial
        - name: ORDERER_GENERAL_TLS_ENABLED
          value: "true"
        - name: ORDERER_GENERAL_TLS_PRIVATEKEY
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/tls/server.key
        - name: ORDERER_GENERAL_TLS_CERTIFICATE
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/tls/server.crt
        - name: ORDERER_GENERAL_TLS_ROOTCAS
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/tls/ca.crt
        - name: ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/tls/server.key
        - name: ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/tls/server.crt
        - name: ORDERER_GENERAL_CLUSTER_ROOTCAS
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/tls/ca.crt
        - name: GODEBUG
          value: "netdns=go"
        - name: ORDERER_OPERATIONS_LISTENADDRESS
          value: "0.0.0.0:8443"
        - name: ORDERER_OPERATIONS_TLS_ENABLED
          value: "false"
        - name: ORDERER_METRICS_PROVIDER
          value: prometheus
        volumeMounts:
        - mountPath: /shared
          name: sharedvolume
        ports:
        - containerPort: 31030
        - containerPort: 8443
        - containerPort: 30007

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blockchain-orderer4
spec:
  replicas: 1
  selector:
    matchLabels:
      name: orderer4
  template:
    metadata:
      labels:
        name: orderer4
    spec:
      volumes:
      - name: sharedvolume
        persistentVolumeClaim:
          claimName: shared-pvc

      containers:
      - name: orderer4
        image: hyperledger/fabric-orderer:1.4
        command: ["sh", "-c", "sleep 5 && while [ ! -f /shared/status_configtxgen_complete ]; do echo Waiting for configtxgen; sleep 1; done; orderer"]
        env:
        - name: ORDERER_CFG_PATH
          value: /shared/
        - name: ORDERER_GENERAL_LEDGERTYPE
          value: file
        - name: ORDERER_FILELEDGER_LOCATION
          value: /shared/ledger/orderer4
        - name: ORDERER_GENERAL_BATCHTIMEOUT
          value: 1s
        - name: ORDERER_GENERAL_BATCHSIZE_MAXMESSAGECOUNT
          value: "240"
        - name: ORDERER_GENERAL_MAXWINDOWSIZE
          value: "1000"
        - name: ORDERER_GENERAL_ORDERERTYPE
          value: etcdraft
        - name: ORDERER_GENERAL_LISTENADDRESS
          value: 0.0.0.0
        - name: ORDERER_GENERAL_LISTENPORT
          value: "31040"
        - name: ORDERER_GENERAL_LOGLEVEL
          value: debug
        - name: ORDERER_GENERAL_LOCALMSPDIR
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer4.example.com/msp
        - name: ORDERER_GENERAL_LOCALMSPID
          value: OrdererMSP
        - name: ORDERER_GENERAL_GENESISMETHOD
          value: file
        - name: ORDERER_GENERAL_GENESISFILE
          value: /shared/genesis0.block
        - name: ORDERER_GENERAL_GENESISPROFILE
          value: initial
        - name: ORDERER_GENERAL_TLS_ENABLED
          value: "true"
        - name: ORDERER_GENERAL_TLS_PRIVATEKEY
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer4.example.com/tls/server.key
        - name: ORDERER_GENERAL_TLS_CERTIFICATE
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer4.example.com/tls/server.crt
        - name: ORDERER_GENERAL_TLS_ROOTCAS
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer4.example.com/tls/ca.crt
        - name: ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer4.example.com/tls/server.key
        - name: ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer4.example.com/tls/server.crt
        - name: ORDERER_GENERAL_CLUSTER_ROOTCAS
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer4.example.com/tls/ca.crt
        - name: GODEBUG
          value: "netdns=go"
        - name: ORDERER_OPERATIONS_LISTENADDRESS
          value: "0.0.0.0:8443"
        - name: ORDERER_OPERATIONS_TLS_ENABLED
          value: "false"
        - name: ORDERER_METRICS_PROVIDER
          value: prometheus
        volumeMounts:
        - mountPath: /shared
          name: sharedvolume
        ports:
        - containerPort: 31040
        - containerPort: 8443
        - containerPort: 30008

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blockchain-orderer5
spec:
  replicas: 1
  selector:
    matchLabels:
      name: orderer5
  template:
    metadata:
      labels:
        name: orderer5
    spec:
      volumes:
      - name: sharedvolume
        persistentVolumeClaim:
          claimName: shared-pvc

      containers:
      - name: orderer5
        image: hyperledger/fabric-orderer:1.4
        command: ["sh", "-c", "sleep 5 && while [ ! -f /shared/status_configtxgen_complete ]; do echo Waiting for configtxgen; sleep 1; done; orderer"]
        env:
        - name: ORDERER_CFG_PATH
          value: /shared/
        - name: ORDERER_GENERAL_LEDGERTYPE
          value: file
        - name: ORDERER_FILELEDGER_LOCATION
          value: /shared/ledger/orderer5
        - name: ORDERER_GENERAL_BATCHTIMEOUT
          value: 1s
        - name: ORDERER_GENERAL_BATCHSIZE_MAXMESSAGECOUNT
          value: "240"
        - name: ORDERER_GENERAL_MAXWINDOWSIZE
          value: "1000"
        - name: ORDERER_GENERAL_ORDERERTYPE
          value: etcdraft
        - name: ORDERER_GENERAL_LISTENADDRESS
          value: 0.0.0.0
        - name: ORDERER_GENERAL_LISTENPORT
          value: "31050"
        - name: ORDERER_GENERAL_LOGLEVEL
          value: debug
        - name: ORDERER_GENERAL_LOCALMSPDIR
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer5.example.com/msp
        - name: ORDERER_GENERAL_LOCALMSPID
          value: OrdererMSP
        - name: ORDERER_GENERAL_GENESISMETHOD
          value: file
        - name: ORDERER_GENERAL_GENESISFILE
          value: /shared/genesis0.block
        - name: ORDERER_GENERAL_GENESISPROFILE
          value: initial
        - name: ORDERER_GENERAL_TLS_ENABLED
          value: "true"
        - name: ORDERER_GENERAL_TLS_PRIVATEKEY
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer5.example.com/tls/server.key
        - name: ORDERER_GENERAL_TLS_CERTIFICATE
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer5.example.com/tls/server.crt
        - name: ORDERER_GENERAL_TLS_ROOTCAS
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer5.example.com/tls/ca.crt
        - name: ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer5.example.com/tls/server.key
        - name: ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer5.example.com/tls/server.crt
        - name: ORDERER_GENERAL_CLUSTER_ROOTCAS
          value: /shared/crypto-config/ordererOrganizations/example.com/orderers/orderer5.example.com/tls/ca.crt
        - name: GODEBUG
          value: "netdns=go"
        - name: ORDERER_OPERATIONS_LISTENADDRESS
          value: "0.0.0.0:8443"
        - name: ORDERER_OPERATIONS_TLS_ENABLED
          value: "false"
        - name: ORDERER_METRICS_PROVIDER
          value: prometheus
        volumeMounts:
        - mountPath: /shared
          name: sharedvolume
        ports:
        - containerPort: 31050
        - containerPort: 8443
        - containerPort: 30009
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blockchain-ca
spec:
  replicas: 1
  selector:
    matchLabels:
      name: ca
  template:
    metadata:
      labels:
        name: ca
    spec:
      volumes:
      - name: sharedvolume
        persistentVolumeClaim:
          claimName: shared-pvc

      containers:
      - name: ca
        image: hyperledger/fabric-ca:1.4.0
        command: ["sh", "-c", "sleep 1 && while [ ! -f /shared/status_configtxgen_complete ]; do echo Waiting for configtxgen; sleep 1; done; fabric-ca-server start -b admin:adminpw -d"]
        env:
        - name: FABRIC_CA_SERVER_CA_NAME
          value: "ca-org1"
        - name: FABRIC_CA_SERVER_CA_CERTFILE
          value: /shared/crypto-config/peerOrganizations/org1.example.com/ca/ca.org1.example.com-cert.pem
        - name: FABRIC_CA_SERVER_CA_KEYFILE
          value: /shared/crypto-config/peerOrganizations/org1.example.com/ca/key.pem
        - name: FABRIC_CA_SERVER_DEBUG
          value: "true"
        - name: FABRIC_CA_SERVER_TLS_ENABLED
          value: "false"
        - name: FABRIC_CA_SERVER_TLS_CERTFILE
          value: /certs/ca0a-cert.pem
        - name: FABRIC_CA_SERVER_TLS_KEYFILE
          value: /certs/ca0a-key.pem
        - name: CORE_CHAINCODE_BUILDER
          value: hyperledger/fabric-ccenv:1.4
        - name: GODEBUG
          value: "netdns=go"
        volumeMounts:
        - mountPath: /shared
          name: sharedvolume
        ports:
        - containerPort: 7054

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blockchain-ca2
spec:
  replicas: 1
  selector:
    matchLabels:
      name: ca2
  template:
    metadata:
      labels:
        name: ca2
    spec:
      volumes:
      - name: sharedvolume
        persistentVolumeClaim:
          claimName: shared-pvc

      containers:
      - name: ca2
        image: hyperledger/fabric-ca:1.4.0
        command: ["sh", "-c", "sleep 1 && while [ ! -f /shared/status_configtxgen_complete ]; do echo Waiting for configtxgen; sleep 1; done; fabric-ca-server start -b admin:adminpw -d"]
        env:
        - name: FABRIC_CA_SERVER_CA_NAME
          value: "ca-org2"
        - name: FABRIC_CA_SERVER_CA_CERTFILE
          value: /shared/crypto-config/peerOrganizations/org2.example.com/ca/ca.org2.example.com-cert.pem
        - name: FABRIC_CA_SERVER_CA_KEYFILE
          value: /shared/crypto-config/peerOrganizations/org2.example.com/ca/key.pem
        - name: FABRIC_CA_SERVER_DEBUG
          value: "true"
        - name: FABRIC_CA_SERVER_TLS_ENABLED
          value: "false"
        - name: FABRIC_CA_SERVER_TLS_CERTFILE
          value: /certs/ca0a-cert.pem
        - name: FABRIC_CA_SERVER_TLS_KEYFILE
          value: /certs/ca0a-key.pem
        - name: CORE_CHAINCODE_BUILDER
          value: hyperledger/fabric-ccenv:1.4
        - name: GODEBUG
          value: "netdns=go"
        volumeMounts:
        - mountPath: /shared
          name: sharedvolume
        ports:
        - containerPort: 7055

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: blockchain-org1peer1
spec:
  replicas: 1
  selector:
    matchLabels:
      name: org1peer1
  template:
    metadata:
      labels:
        name: org1peer1
    spec:
      volumes:
      - name: sharedvolume
        persistentVolumeClaim:
          claimName: shared-pvc
      - name: certsvolume
        persistentVolumeClaim:
          claimName: docker-cert 
      - name: dockersocket
        hostPath:
          path: /var/run/docker.sock

      containers:
      - name: org1peer1
        image: delagrace/my-fabric-peer:1.4
        command: ["sh", "-c", "sleep 1 && while [ ! -f /shared/status_configtxgen_complete ]; do echo Waiting for configtxgen; sleep 1; done; peer node start"]
        env:
        - name: CORE_PEER_ADDRESSAUTODETECT
          value: "true"
        - name: CORE_PEER_NETWORKID
          value: nid2
        - name: CORE_PEER_ID
          value: org1peer1
        - name: CORE_PEER_ADDRESS
          value: blockchain-org1peer1:30110
        - name: CORE_PEER_LISTENADDRESS
          value: 0.0.0.0:30110
        - name: CORE_PEER_EVENTS_ADDRESS
          value: 0.0.0.0:30111
        - name: CORE_PEER_GOSSIP_BOOTSTRAP
          value: blockchain-org1peer1:30110
        - name: CORE_PEER_GOSSIP_ORGLEADER
          value: "false"
        - name: CORE_PEER_GOSSIP_SKIPHANDSHAKE
          value: "true"
        - name: CORE_PEER_COMMITTER_ENABLED
          value: "true"
        - name: CORE_PEER_PROFILE_ENABLED
          value: "true"
        - name: CORE_VM_ENDPOINT
          value: tcp://docker:2376
        - name: CORE_VM_DOCKER_TLS_ENABLED
          value: "true"
        - name: CORE_VM_DOCKER_TLS_CA_FILE
          value: /certs/client/ca.pem
        - name: CORE_VM_DOCKER_TLS_CERT_FILE
          value: /certs/client/cert.pem  
        - name: CORE_VM_DOCKER_TLS_KEY_FILE
          value: /certs/client/key.pem      
        - name: CORE_PEER_LOCALMSPID
          value: Org1MSP
        - name: CORE_PEER_MSPCONFIGPATH
          value: /shared/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp/
        - name: FABRIC_LOGGING_SPEC
          value: debug
        - name: CORE_LOGGING_PEER
          value: debug
        - name: CORE_LOGGING_CAUTHDSL
          value: debug
        - name: CORE_LOGGING_GOSSIP
          value: debug
        - name: CORE_LOGGING_LEDGER
          value: debug
        - name: CORE_LOGGING_MSP
          value: info
        - name: CORE_LOGGING_POLICIES
          value: debug
        - name: CORE_LOGGING_GRPC
          value: debug
        - name: CORE_PEER_TLS_ENABLED
          value: "true"
        - name: CORE_PEER_TLS_CERT_FILE
          value: /shared/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt
        - name: CORE_PEER_TLS_KEY_FILE
          value: /shared/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key
        - name: CORE_PEER_TLS_ROOTCERT_FILE
          value: /shared/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
        - name: CORE_LEDGER_STATE_STATEDATABASE
          value: goleveldb
        - name: FABRIC_CFG_PATH
          value: /etc/hyperledger/fabric/
        - name: ORDERER_URL
          value: blockchain-orderer:31010
        - name: ORDERER_URL
          value: blockchain-orderer2:31020
        - name: ORDERER_URL
          value: blockchain-orderer3:31030
        - name: ORDERER_URL
          value: blockchain-orderer4:31040
        - name: ORDERER_URL
          value: blockchain-orderer5:31050
        - name: GODEBUG
          value: "netdns=go"
        - name: CORE_VM_DOCKER_ATTACHSTDOUT
          value: "true"
        - name: CORE_OPERATIONS_LISTENADDRESS #CORE_OPERATIONS_LISTENADDRESS
          value: "0.0.0.0:5443"
        - name: CORE_OPERATIONS_TLS_ENABLED
          value: "false"
        - name: CORE_METRICS_PROVIDER
          value: prometheus
        volumeMounts:
        - mountPath: /shared
          name: sharedvolume
        - mountPath: /certs   # Mount path for Docker certificates
          name: certsvolume             # Volume name for Docker certificates
        - mountPath: /host/var/run/docker.sock
          name: dockersocket
        ports:
        - containerPort: 30110
        - containerPort: 30111
        - containerPort: 5443
        
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blockchain-org2peer1
  #annotations:
     # prometheus.io/scrape: 'true'
     # prometheus.io/port:   '9090'
spec:
  replicas: 1
  selector:
    matchLabels:
      name: org2peer1
  template:
    metadata:
      labels:
        name: org2peer1
    spec:
      volumes:
      - name: sharedvolume
        persistentVolumeClaim:
          claimName: shared-pvc
      - name: certsvolume
        persistentVolumeClaim:
          claimName: docker-cert 
      - name: dockersocket
        hostPath:
          path: /var/run/docker.sock

      containers:
      - name: org2peer1
        image: delagrace/my-fabric-peer:1.4
        command: ["sh", "-c", "sleep 1 && while [ ! -f /shared/status_configtxgen_complete ]; do echo Waiting for configtxgen; sleep 1; done;  peer node start"]
        env:
        - name: CORE_PEER_ADDRESSAUTODETECT
          value: "true"
        - name: CORE_PEER_ID
          value: org2peer1
        - name: CORE_PEER_NETWORKID
          value: nid2
        - name: CORE_PEER_ADDRESS
          value: blockchain-org2peer1:30210
        - name: CORE_PEER_LISTENADDRESS
          value: 0.0.0.0:30210
        - name: CORE_PEER_EVENTS_ADDRESS
          value: 0.0.0.0:30211
        - name: CORE_PEER_GOSSIP_BOOTSTRAP
          value: blockchain-org2peer1:30210
        - name: CORE_PEER_GOSSIP_ORGLEADER
          value: "false"
        - name: CORE_PEER_GOSSIP_SKIPHANDSHAKE
          value: "true"
        - name: CORE_PEER_COMMITTER_ENABLED
          value: "true"
        - name: CORE_PEER_PROFILE_ENABLED
          value: "true"
        - name: CORE_VM_ENDPOINT
          value: tcp://docker:2376
        - name: CORE_VM_DOCKER_TLS_ENABLED
          value: "true"
        - name: CORE_VM_DOCKER_TLS_CA_FILE
          value: /certs/client/ca.pem
        - name: CORE_VM_DOCKER_TLS_CERT_FILE
          value: /certs/client/cert.pem  
        - name: CORE_VM_DOCKER_TLS_KEY_FILE
          value: /certs/client/key.pem 
        - name: CORE_PEER_LOCALMSPID
          value: Org2MSP
        - name: CORE_PEER_MSPCONFIGPATH
          value: /shared/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp/
        - name: FABRIC_LOGGING_SPEC
          value: debug
        - name: CORE_LOGGING_PEER
          value: debug
        - name: CORE_LOGGING_CAUTHDSL
          value: debug
        - name: CORE_LOGGING_GOSSIP
          value: debug
        - name: CORE_LOGGING_LEDGER
          value: debug
        - name: CORE_LOGGING_MSP
          value: debug
        - name: CORE_LOGGING_POLICIES
          value: debug
        - name: CORE_LOGGING_GRPC
          value: debug
        - name: CORE_PEER_TLS_ENABLED
          value: "true"
        - name: CORE_PEER_TLS_CERT_FILE
          value: /shared/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.crt
        - name: CORE_PEER_TLS_KEY_FILE
          value: /shared/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.key
        - name: CORE_PEER_TLS_ROOTCERT_FILE
          value: /shared/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt
        - name: CORE_LEDGER_STATE_STATEDATABASE
          value: goleveldb
        - name: FABRIC_CFG_PATH
          value: /etc/hyperledger/fabric/
        - name: ORDERER_URL
          value: blockchain-orderer:31010
        - name: ORDERER_URL
          value: blockchain-orderer2:31020
        - name: ORDERER_URL
          value: blockchain-orderer3:31030
        - name: ORDERER_URL
          value: blockchain-orderer4:31040
        - name: ORDERER_URL
          value: blockchain-orderer5:31050
        - name: GODEBUG
          value: "netdns=go"
        - name: CORE_VM_DOCKER_ATTACHSTDOUT
          value: "true"
        - name: CORE_OPERATIONS_LISTENADDRESS
          value: "0.0.0.0:6443"
        - name: CORE_OPERATIONS_TLS_ENABLED
          value: "false"
        - name: CORE_METRICS_PROVIDER
          value: prometheus
        volumeMounts:
        - mountPath: /shared
          name: sharedvolume
        - mountPath: /certs    # Mount path for Docker certificates
          name: certsvolume             # Volume name for Docker certificates
        - mountPath: /host/var/run/docker.sock
          name: dockersocket
        ports:
        - containerPort: 30210
        - containerPort: 30211
        - containerPort: 6443
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blockchain-org1peer2
spec:
  replicas: 1
  selector:
    matchLabels:
      name: org1peer2
  template:
    metadata:
      labels:
        name: org1peer2
    spec:
      volumes:
      - name: sharedvolume
        persistentVolumeClaim:
          claimName: shared-pvc
      - name: certsvolume
        persistentVolumeClaim:
          claimName: docker-cert 
      - name: dockersocket
        hostPath:
          path: /var/run/docker.sock

      containers:
      - name: org1peer2
        image: delagrace/my-fabric-peer:1.4
        command: ["sh", "-c", "sleep 1 && while [ ! -f /shared/status_configtxgen_complete ]; do echo Waiting for configtxgen; sleep 1; done; peer node start"]
        env:
        - name: CORE_PEER_ADDRESSAUTODETECT
          value: "true"
        - name: CORE_PEER_NETWORKID
          value: nid2
        - name: CORE_PEER_ID
          value: org1peer2
        - name: CORE_PEER_ADDRESS
          value: blockchain-org1peer2:30310
        - name: CORE_PEER_LISTENADDRESS
          value: 0.0.0.0:30310
        - name: CORE_PEER_EVENTS_ADDRESS
          value: 0.0.0.0:30311
        - name: CORE_PEER_GOSSIP_BOOTSTRAP
          value: blockchain-org1peer2:30310
        - name: CORE_PEER_GOSSIP_ORGLEADER
          value: "false"
        - name: CORE_PEER_GOSSIP_SKIPHANDSHAKE
          value: "true"
        - name: CORE_PEER_COMMITTER_ENABLED
          value: "true"
        - name: CORE_PEER_PROFILE_ENABLED
          value: "true"
        - name: CORE_VM_ENDPOINT
          value: tcp://docker:2376
        - name: CORE_VM_DOCKER_TLS_ENABLED
          value: "true"
        - name: CORE_VM_DOCKER_TLS_CA_FILE
          value: /certs/client/ca.pem
        - name: CORE_VM_DOCKER_TLS_CERT_FILE
          value: /certs/client/cert.pem  
        - name: CORE_VM_DOCKER_TLS_KEY_FILE
          value: /certs/client/key.pem 
        - name: CORE_PEER_LOCALMSPID
          value: Org1MSP
        - name: CORE_PEER_MSPCONFIGPATH
          value: /shared/crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp/
        - name: FABRIC_LOGGING_SPEC
          value: debug
        - name: CORE_LOGGING_PEER
          value: debug
        - name: CORE_LOGGING_CAUTHDSL
          value: debug
        - name: CORE_LOGGING_GOSSIP
          value: debug
        - name: CORE_LOGGING_LEDGER
          value: debug
        - name: CORE_LOGGING_MSP
          value: info
        - name: CORE_LOGGING_POLICIES
          value: debug
        - name: CORE_LOGGING_GRPC
          value: debug
        - name: CORE_PEER_TLS_ENABLED
          value: "true"
        - name: CORE_PEER_TLS_CERT_FILE
          value: /shared/crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/server.crt
        - name: CORE_PEER_TLS_KEY_FILE
          value: /shared/crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/server.key
        - name: CORE_PEER_TLS_ROOTCERT_FILE
          value: /shared/crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/ca.crt
        - name: CORE_LEDGER_STATE_STATEDATABASE
          value: goleveldb
        - name: FABRIC_CFG_PATH
          value: /etc/hyperledger/fabric/
        - name: ORDERER_URL
          value: blockchain-orderer:31010
        - name: ORDERER_URL
          value: blockchain-orderer2:31020
        - name: ORDERER_URL
          value: blockchain-orderer3:31030
        - name: ORDERER_URL
          value: blockchain-orderer4:31040
        - name: ORDERER_URL
          value: blockchain-orderer5:31050
        - name: GODEBUG
          value: "netdns=go"
        - name: CORE_VM_DOCKER_ATTACHSTDOUT
          value: "true"
        volumeMounts:
        - mountPath: /shared
          name: sharedvolume
        - mountPath: /certs   # Mount path for Docker certificates
          name: certsvolume             # Volume name for Docker certificates
        - mountPath: /host/var/run/docker.sock
          name: dockersocket
        ports:
        - containerPort: 30310
        - containerPort: 30311
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blockchain-org2peer2
spec:
  replicas: 1
  selector:
    matchLabels:
      name: org2peer2
  template:
    metadata:
      labels:
        name: org2peer2
    spec:
      volumes:
      - name: sharedvolume
        persistentVolumeClaim:
          claimName: shared-pvc
      - name: certsvolume
        persistentVolumeClaim:
          claimName: docker-cert
      - name: dockersocket
        hostPath:
          path: /var/run/docker.sock

      containers:
      - name: org2peer2
        image: delagrace/my-fabric-peer:1.4
        command: ["sh", "-c", "sleep 1 && while [ ! -f /shared/status_configtxgen_complete ]; do echo Waiting for configtxgen; sleep 1; done; peer node start"]
        env:
        - name: CORE_PEER_ADDRESSAUTODETECT
          value: "true"
        - name: CORE_PEER_NETWORKID
          value: nid2
        - name: CORE_PEER_ID
          value: org2peer2
        - name: CORE_PEER_ADDRESS
          value: blockchain-org2peer2:30410
        - name: CORE_PEER_LISTENADDRESS
          value: 0.0.0.0:30410
        - name: CORE_PEER_EVENTS_ADDRESS
          value: 0.0.0.0:30411
        - name: CORE_PEER_GOSSIP_BOOTSTRAP
          value: blockchain-org2peer2:30410
        - name: CORE_PEER_GOSSIP_ORGLEADER
          value: "false"
        - name: CORE_PEER_GOSSIP_SKIPHANDSHAKE
          value: "true"
        - name: CORE_PEER_COMMITTER_ENABLED
          value: "true"
        - name: CORE_PEER_PROFILE_ENABLED
          value: "true"
        - name: CORE_VM_ENDPOINT
          value: tcp://docker:2376
        - name: CORE_VM_DOCKER_TLS_ENABLED
          value: "true"
        - name: CORE_VM_DOCKER_TLS_CA_FILE
          value: /certs/client/ca.pem
        - name: CORE_VM_DOCKER_TLS_CERT_FILE
          value: /certs/client/cert.pem  
        - name: CORE_VM_DOCKER_TLS_KEY_FILE
          value: /certs/client/key.pem 
        - name: CORE_PEER_LOCALMSPID
          value: Org2MSP
        - name: CORE_PEER_MSPCONFIGPATH
          value: /shared/crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/msp/
        - name: FABRIC_LOGGING_SPEC
          value: debug
        - name: CORE_LOGGING_PEER
          value: debug
        - name: CORE_LOGGING_CAUTHDSL
          value: debug
        - name: CORE_LOGGING_GOSSIP
          value: debug
        - name: CORE_LOGGING_LEDGER
          value: debug
        - name: CORE_LOGGING_MSP
          value: info
        - name: CORE_LOGGING_POLICIES
          value: debug
        - name: CORE_LOGGING_GRPC
          value: debug
        - name: CORE_PEER_TLS_ENABLED
          value: "true"
        - name: CORE_PEER_TLS_CERT_FILE
          value: /shared/crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/tls/server.crt
        - name: CORE_PEER_TLS_KEY_FILE
          value: /shared/crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/tls/server.key
        - name: CORE_PEER_TLS_ROOTCERT_FILE
          value: /shared/crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/tls/ca.crt
        - name: CORE_LEDGER_STATE_STATEDATABASE
          value: goleveldb
        - name: FABRIC_CFG_PATH
          value: /etc/hyperledger/fabric/
        - name: ORDERER_URL
          value: blockchain-orderer:31010
        - name: ORDERER_URL
          value: blockchain-orderer2:31020
        - name: ORDERER_URL
          value: blockchain-orderer3:31030
        - name: ORDERER_URL
          value: blockchain-orderer4:31040
        - name: ORDERER_URL
          value: blockchain-orderer5:31050
        - name: GODEBUG
          value: "netdns=go"
        - name: CORE_VM_DOCKER_ATTACHSTDOUT
          value: "true"
        volumeMounts:
        - mountPath: /shared
          name: sharedvolume
        - mountPath: /certs    # Mount path for Docker certificates
          name: certsvolume             # Volume name for Docker certificates
        - mountPath: /host/var/run/docker.sock
          name: dockersocket
        ports:
        - containerPort: 30410
        - containerPort: 30411
